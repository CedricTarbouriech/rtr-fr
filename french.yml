# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# God Module
# God XP Types
# rtr.GodModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

godXP:
  comment: "God Module - God XP Types"
  javaClass: "rtr.GodModule.java"
  
  # Village Related
  nomadsJoinedVillage:
    text: "Des nomades ont rejoint ton village"
  buildingsUpgraded:
    text: "Bâtiments améliorés"
  buildingsConstructed:
    text: "Bâtiments construits"
  buildingsDismantled:
    text: "Bâtiments démantelé"
  wallsDismantled:
    text: "Murs démantelés"
  wallsConstructed:
    text: "Murs construits"

  # Villager/Mob Related,
  villagerLeveledUp:
    text: "Villageois au niveau supérieur"
  childBirth:
    text: "Accouchements"
  building:
    text: "Constructions"
  buyingResources:
    text: "Achats de ressources"
  hiringLaborers:
    text: "Recrutement d'ouvriers"
  eldersSharingWisdom:
    text: "Partage de connaissances des doyens"
  clearingRoads:
    text: "Entretien des routes"
  combat:
    text: "Combat"
  clearingTopography:
    text: "Déblaiement de la topographie"
  harvestingResources:
    text: "Récolte de ressources"
  farming:
    text: "Agriculture"
  tendingFarms:
    text: "Entretien des fermes"
  coitus:
    text: "Coït"
  repairingBuildings:
    text: "Bâtiments réparés"
  repairingRoads:
    text: "Routes réparées"
  buildingRoads:
    text: "Construction de routes"
  deliveringResourcesToConstructionSites:
    text: "Livraison de ressources sur les chantiers"
  deliveringResourcesToCouriers:
    text: "Livraison de ressources aux messagers"
  deliveringResourcesToRoad:
    text: "Livraison de ressources sur les routes"
  diggingHoles:
    text: "Troux creusés"
  dismantlingBuildings:
    text: "Démantèlement de bâtiments"
  equipingResources:
    text: "Équipement de ressources"
  findingNewHome:
    text: "Emménagements"
  growingUp:
    text: "Passages à l'âge adulte"
  patrolling:
    text: "En patrouille"
  guardDuty:
    text: "Tours de garde"
  healingVillagers:
    text: "Soignement de villageois"
  clearingOutResources:
    text: "Nettoyage de ressources"
  migrantsDeparting:
    text: "Départs de migrants"
  couriersDeparting:
    text: "Départs de messagers"
  redistributingResources:
    text: "Redistribution des ressources"
  refiningResources:
    text: "Raffinage de ressources"
  sellingResources:
    text: "Vente de ressources"
  storingResources:
    text: "Stockage de ressources"
  visitingMate:
    text: "Rendu visite à un compagnon"
  domestication:
    text: "Domestication"
  destroyingRoads:
    text: "Destructions de routes"
  plantingCrops:
    text: "Plantation de cultures"
  migrantsPreparing:
    text: "Migrants en préparation"
  tradingEquipment:
    text: "Échange d'équippements"
  villagersImpregnated:
    text: "Villageois fécondés"
  livedFullLife:
    text: "Vécu sa vie pleinement"
  
  # God Intervention
  castingSpells:
    text: "Lancement de sorts"
  grabbingCreatures:
    text: "Attrapage de créatures"
  grabbingResources:
    text: "Attrapage de ressources"
  
  # Passive
  survivingVillagers:
    text: "Villageois survivants"
  villageSize:
    text: "Taille du village"
  
  # Other
  monstersKilled:
    text: "Monstres tués"
  unlockedGoal:
    text: "Objectif débloqué"
  openedLootBoxes:
    text: "Coffre à butin ouverts"
  throwResourcesInCullisGate:
    text: "Ressources jetées dans des portails cullis"
  throwCreaturesInCullisGate:
    text: "Créatures jetées dans des portails cullis"
  
# # # # # # # # # # # # # # # # # # # # Perk# # # # # # # # # # # # # # # #
# Perk Module
# Perk Types
# rtr.PerkModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

perkType:
  comment: "Perk Module - Perk Types"
  javaClass: "rtr.PerkModule.java"
  
  maximumHealth:
    text: "Vie maximale"
  healthRecoverySpeed:
    text: "Vitesse de régénération de la vie"
  maximumHunger:
    text: "Faim maximale"
  hungerDecayRate:
    text: "Taux d'augmentation de la faim"
  maximumThirst:
    text: "Soif maximale"
  thirstDecayRate:
    text: "Taux d'augmentation de la soif"
  maximumEnergy:
    text: "Énergie maximale"
  energyDecayRate:
    text: "Taux de diminution de l'énergie"
  maximumSocial:
    text: "Rapports sociaux maximum"
  lifeExpectancy:
    text: "Espérance de vie"
  movementSpeed:
    text: "Vitesse de déplacement"
  damageResistance:
    text: "Résistance aux dégâts"
  meleeDamage:
    text: "Dégâts de mêlée"
  rangedDamage:
    text: "Dégâts à distance"
  maximumCarriedResources:
    text: "Transport de ressources maximal"
  fertility:
    text: "Fertilité"
  improvedStorage:
    text: "Stockage amélioré"
  efficientHousing:
    text: "Habitations efficaces"
  efficientConstruction:
    text: "Construction efficace"
  farmGrowthSpeed:
    text: "Vitesse de croissance dans la ferme"
  globalWorkSpeed:
    text: "Vitesse de travail globale"
  harvestingSpeed:
    text: "Vitesse de récolte"
  refiningSpeed:
    text: "Vitesse de raffinage"
  buildingSpeed:
    text: "Vitesse de construction"
  roadConstructionSpeed:
    text: "Vitesse de construction des routes"
  dismantlingSpeed:
    text: "Vitesse de démantèlement"
  clearingSpeed:
    text: "Vitesse de nettoyage"
  repairingSpeed:
    text: "Vitesse de réparation"
  maintainingRoadSpeed:
    text: "Vitesse de maintenance des routes"
  farmingSpeed:
    text: "Vitesse de cultivation"
  medicWorkSpeed:
    text: "Vitesse de travail des infirmiers"
  waterStorage:
    text: "Stocks d'eau"
  woodGolemLevel:
    text: "Niveau des golems de bois"
  woodGolemCapacity:
    text: "Capacité des golems de bois"
  woodGolemChargeTime:
    text: "Temps de chargement des golems de bois"
  stoneGolemLevel:
    text: "Niveau des golems de pierre"
  stoneGolemCapacity:
    text: "Capacité des golems de pierre"
  stoneGolemChargeTime:
    text: "Temps de chargement des golems de pierre"
  crystalGolemLevel:
    text: "Niveau des golems de cristaux"
  crystalGolemCapacity:
    text: "Capacité des golems de cristaux"
  crystalGolemChargeTime:
    text: "Temps de chargement des golems de cristaux"
  attractTowerRange:
    text: "Portée des tours attractives"
  attractTowerFireRate:
    text: "Cadence de tir des tours attractives"
  attractTowerEnergyCost:
    text: "Coût énergétique des tours attractives"
  banishTowerRange:
    text: "Portée des tours bannisseuses"
  banishTowerFireRate:
    text: "Cadence de tir des tours bannisseuses"
  banishTowerEnergyCost:
    text: "Coût énergétique des tours bannisseuses"
  ballistaTowerRange:
    text: "Portée des ballistes"
  ballistaTowerFireRate:
    text: "Cadence de tir des ballistes"
  bowTowerRange:
    text: "Portée des tours d'archers"
  bowTowerFireRate:
    text: "Cadence de tir des tours d'archers"
  bulletTowerRange:
    text: "Portée des tourelles"
  bulletTowerFireRate:
    text: "Cadence de tir des tourelles"
  elementalBoltTowerRange:
    text: "Portée des tours-éclair"
  elementalBoltTowerFireRate:
    text: "Cadence de tir des tours-éclair"
  elementalBoltTowerEnergyCost:
    text: "Cout énergétique des tours-éclair"
  motivatorTowerRange:
    text: "Portée des motivateurs"
  motivatorTowerFireRate:
    text: "Cadence des motivateurs"
  motivatorTowerEnergyCost:
    text: "Coût énergétique des motivateurs"
  phantomDartTowerRange:
    text: "Portée des tours à fléchettes fantômes"
  phantomDartTowerFireRate:
    text: "Cadence de tir des tours à fléchettes fantômes"
  phantomDartTowerEnergyCost:
    text: "Coût énergétique des tours à fléchettes fantômes"
  recombobulatorTowerRange:
    text: "Portée des tours recombobulatrices"
  recombobulatorTowerFireRate:
    text: "Cadence de tir des tours recombobolatrices"
  recombobulatorTowerEnergyCost:
    text: "Coût énergétique des tours recombobulatrices"
  slingTowerRange:
    text: "Portée des tours à fronde"
  slingTowerFireRate:
    text: "Cadence de tir des tours à fronde"
  sprayTowerRange:
    text: "Portée des tours pulvérisatrices"
  staticTowerRange:
    text: "Portée des tours statiques"
  staticTowerFireRate:
    text: "Cadence de tir des tours statiques"
  staticTowerEnergyCost:
    text: "Coût énergétique des tours statiques"
  towerStorage:
    text: "Capacité de stockage des tours"
  spellCost:
    text: "Coût des sorts"
  holyGolemLevel:
    text: "Niveau des saints-golems"
  laborGolemLevel:
    text: "Niveau des golems ouvriers"
  holyGolemDuration:
    text: "Durée de vie des saints-golems"
  laborGolemDuration:
    text: "Durée de vie des golems ouvriers"
  nomadAppearanceRate:
    text: "Taux d'apparition des nomades"
  nomadAmount:
    text: "Nombre de nomades"
  animalAppearanceRate:
    text: "Taux d'apparition des animaux"
  betterMarketPrices:
    text: "Meilleurs prix au marché"
  resourceDecayRate:
    text: "Vitesse de décomposition des ressources"
  moreLootinLootBoxes:
    text: "Plus de butin dans les coffres à butin"
  spellDamage:
    text: "Dégâts des sorts"
  towerDamage:
    text: "Dégâts des tours"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Perk Module
# Perk Names
# rtr.PerkModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

perk:
  comment: "Perk Module - Perk Names"
  javaClass: "rtr.PerkModule.java"
  
  farellesConstitution:
    text: "Constitution de Farelle"
  kevorkianBloom:
    text: "Floraison Kevorkian"
  stensForm:
    text: "Forme de Sten"
  hardinessofMergen:
    text: "Robustesse de Mergen"
  vitalityofFecht:
    text: "Vitalité de Fecht"
  shohunsRecovery:
    text: "Régénération de Shohun"
  kanesathsResumption:
    text: "Reprise de Kanesath"
  sulansRehabilitation:
    text: "Rehabilitation de Sulan"
  lunnithunsReformation:
    text: "Réforme de Lunnithun"
  sythumsRestoration:
    text: "Restauration de Sythum"
  cravingsofJokur:
    text: "Fringales de Jokur"
  karachosLonging:
    text: "Désir de Karacho"
  namsansGluttony:
    text: "Gourmandise de Namsan"
  dixonpuffsCraving:
    text: "Fringale de Dixonpuff"
  riyasAppetite:
    text: "Appétit de Riya"
  sagewingsGill:
    text: "Branchie de Sagewing"
  stonestandsGlut:
    text: "Excès de Stonestand"
  brisksongsWholeness:
    text: "Intégrité de Brisksong"
  ositansPlenty:
    text: "Abondance d'Ositan"
  mullarmsAmpleness:
    text: "Oppulence de Mullarm"
  alamarsThirst:
    text: "Soif d'Alamar"
  tearsofRaevyr:
    text: "Larmes de Raevyr"
  jaycesonsSucculences:
    text: "Succulences de Jayceson"
  napthasSplashing:
    text: "Éclaboussures de Naptha"
  dobmmonsWetness:
    text: "Humidité de Dobmmons"
  gavtarlsSurplus:
    text: "Excédent de Gavtarl"
  thranuraksSaliva:
    text: "Salive de Thranurak"
  gerardsLibation:
    text: "Libation de Gerard"
  beasantsPreservative:
    text: "Conservateur de Beasant"
  burtonsBroth:
    text: "Brouillon de Burton"
  enduranceofXandal:
    text: "Endurance de Xandal"
  ilirithsActivity:
    text: "Activité d'Ilirith"
  shiraRestlessness:
    text: "Nervosité de Shira"
  dashofFabian:
    text: "Tiret de Fabian"
  namerusExertion:
    text: "Effort de Nameru"
  dittmarsLiveliness:
    text: "Vivacité de Dittmar"
  ridleysEnterprise:
    text: "Entreprise de Ridley"
  anselsEnergy:
    text: "Énergie d'Ansel"
  appletonsFlurry:
    text: "Tourbillon d'Appleton"
  andreasAlertness:
    text: "Vigilance d'Andrea"
  sinestrasIntellect:
    text: "Intellect de Sinestra"
  cordialofHansard:
    text: "Courtoisie de Hansard"
  narsFriendliness:
    text: "Convivialité de Nar"
  morladsSociablility:
    text: "Sociabilité de Morlad"
  tiberiumkylesWisdom:
    text: "Sagesse de Tiberiumkyle"
  musisLilly:
    text: "Lys de Musi"
  hachimasLifeblood:
    text: "Âme de Hachima"
  dundarsDetermination:
    text: "Détermination Dundar"
  soteriasGift:
    text: "Cadeau de Soteria"
  dudasMortality:
    text: "Mortalité de Duda"
  speedofTheOterions:
    text: "Vitesse de The Oterions"
  hasteofGriseus:
    text: "Efficacité de Griseus"
  nonimadsVelocity:
    text: "Vélocité de Nonimad"
  enicarsAgility:
    text: "Agilité d'Enicar"
  owensPace:
    text: "Allure d'Owen"
  lillysProtection:
    text: "Proection de Lilly"
  giosToughness:
    text: "Robustesse de Gio"
  skinofPriamus:
    text: "Peau de Priamus"
  rivaresWard:
    text: "Quartier de Rivare"
  mushusBarrier:
    text: "Barrière de Mushu"
  bargsSkirmish:
    text: "Escarmouche de Barg"
  filiconsStrike:
    text: "Coup de Filicon"
  samansAggression:
    text: "Aggressivité de Saman"
  shansealaRage:
    text: "Rage de Shanseala"
  magmelsFall:
    text: "Chute de Magmel"
  darlonsDispatch:
    text: "Envoi de Darlon"
  exonsStrike:
    text: "Coup d'Exon"
  skalvernsCharge:
    text: "Charge de Skalvern"
  norominsWrath:
    text: "Colère de Noromin"
  flamesofBivattus:
    text: "Flames de Bivattus"
  daggarothsLift:
    text: "Soulèvement de Daggaroth"
  ginjasArms:
    text: "Bras de Ginja"
  zerosGravitas:
    text: "Gravité de Zero"
  bibikisStamina:
    text: "Endurance de Bibiki"
  clerothsLustiness:
    text: "Vigueur de Cleroth"
  embraceofSpritus:
    text: "Étreinte de Spritus"
  snobosSatisfaction:
    text: "Satisfaction de Snobo"
  rainsFlower:
    text: "Fleur de Rain"
  eldsResourcefulness:
    text: "Ingéniosité d'Eld"
  ciphersCataloguing:
    text: "Catalogage de Cipher"
  svarogsArrangement:
    text: "Arrangement de Svarog"
  voxsStacking:
    text: "Empilement de Vox"
  serakersArranging:
    text: "Organisation de Seraker"
  vargsHabitation:
    text: "Demeure de Varg"
  shelterofCingularis:
    text: "Abris de Cingularis"
  koshkasQuarterage:
    text: "Quartiers de Koshka"
  xentiransHospitality:
    text: "Hospitalité de Xentiran"
  alendrusAccomodations:
    text: "Accomodations d'Alendru"
  fusrohsIntensity:
    text: "Intensité de Fusroh"
  powerofCeris:
    text: "Pouvoir de Ceris"
  handinessofZacharias:
    text: "Maniabilité de Zacharias"
  aarkisEfficaciousness:
    text: "Efficacité d'Aarki"
  torlightUsefulness:
    text: "Utilité de Torlight"
  leonhardsProliferation:
    text: "Prolifération de Leonhard"
  brutaniansSprouting:
    text: "Bourgeonnement de Brutanian"
  growthoftheEverbloom:
    text: "Croissance de l'Everbloom"
  lorrainesGrace:
    text: "Grâce de Lorraine"
  tranyasProduce:
    text: "Confection de Tranya"
  eulersAlacrity:
    text: "Empressement d'Euler"
  bormacsHeadway:
    text: "Progrès de Bormac"
  wrismokesHustle:
    text: "Tumulte de Wrismoke"
  raphimasBreeze:
    text: "Brise de Raphima"
  shrogersBriskness:
    text: "Vivacité de Shroger"
  rivarynsZeal:
    text: "Ardeur de Rivaryn"
  borasRush:
    text: "Hâte de Bora"
  returnofSilentis:
    text: "Retour de Silentis"
  ellongsYield:
    text: "Rendement d'Ellong"
  reyekorasReaping:
    text: "Récolte Reyekora"
  shogunsPassion:
    text: "Passion de Shogun"
  blacksIntensity:
    text: "Intensité de Black"
  solairesForging:
    text: "Forge de Solaire"
  raindonsMolding:
    text: "Moulage de Raindon"
  webbshinesTooling:
    text: "Outillage de Webbshine"
  ariannasEagerness:
    text: "Enthousiasme d'Arianna"
  wuggysErection:
    text: "Érection de Wuggy"
  xaerysArchitecture:
    text: "Architecture Xaerys"
  visersterSkill:
    text: "Talent Viserster"
  stewarbowCraftsmanship:
    text: "Savoir-faire Stewarbow"
  lascerandisFabrication:
    text: "Fabrication de Lascerandi"
  shapingofSayres:
    text: "Façonnage de Sayres"
  thollsJoining:
    text: "Liant de Tholl"
  lollikersEngineering:
    text: "Ingénierie de Lolliker"
  caclopsApex:
    text: "Apex de Caclop"
  lyteniansDismembering:
    text: "Démembrement de Lytenian"
  araxielsWrack:
    text: "Piste d'Araxiel"
  dobgibsonsRuin:
    text: "Ruine de Dobgibson"
  hawksSwiftness:
    text: "Rapidité de Hawk"
  jamellsMania:
    text: "Manie de Jamell"
  amaraesUrgency:
    text: "Urgence d'Amarae"
  anonlolisExpanse:
    text: "Étendue d'Anonloli"
  levelingofDracoreyes:
    text: "Nivellement de Dracoreyes"
  glittersmisHeadroom:
    text: "Hauteur de Glittersmi"
  tuxiaClearcutting:
    text: "Coupe rase de Tuxia"
  aeonsPatching:
    text: "Correctif d'Aeon"
  andreisReconstruction:
    text: "Reconstruction d'Andrei"
  jimelightsReformation:
    text: "Restructuration de Jimelight"
  wookorasMending:
    text: "Raccommodage de Wookora"
  silvergarsOverhaul:
    text: "Réorganisation de Silvergar"
  fuguesRectification:
    text: "Rectification de Fugue"
  anastrianasGrind:
    text: "Corvée d'Anastriana"
  droghoffmansService:
    text: "Service de Droghoffman"
  spiritofValiya:
    text: "Esprit de Valiya"
  thollsReform:
    text: "Réforme de Tholl"
  kiplingsHoeing:
    text: "Binage de Kipling"
  alvinsAgriculture:
    text: "Agriculture de Alvin"
  woogsCultivation:
    text: "Cultures de Woog"
  tranyasAgronomy:
    text: "Agronomie de Tranya"
  rhaelmartinsSeeding:
    text: "Semailles de Rhaelmartin"
  leviathansCuring:
    text: "Mûrissement de Leviathan"
  alathasInvigoration:
    text: "Revigoration d'Alatha"
  cralightsPlacebo:
    text: "Placebo de Cralight"
  bakerolasRecovery:
    text: "Rétablissement de Bakerola"
  millsellsReparation:
    text: "Réparation de Millsell"
  sagarsBottle:
    text: "Bouteille de Sagar"
  destonsCanteen:
    text: "Cantine de Deston"
  ronjasCapsule:
    text: "Capsule de Ronja"
  venettasTank:
    text: "Tank de Venetta"
  damiasTub:
    text: "Cuve de Damia"
  oliviasDevelopment:
    text: "Développement d'Olivia"
  rivasEscalation:
    text: "Escalade de Riva"
  alyshasUpgrade:
    text: "Amélioration d'Alysha"
  yseultsInflation:
    text: "Inflation d'Yseult"
  tyndallsExaggeration:
    text: "Exagération de Tyndall"
  tiffaniesSpread:
    text: "Propagation de Tiffanie"
  shelleysUpsurge:
    text: "Recrudescence de Shelley"
  lickashsOptimization:
    text: "Optimisation de Lickash"
  krunluksFlow:
    text: "Courant de Krunluk"
  glithasStimulation:
    text: "Stimulation de Glitha"
  bellowflowsInvigoration:
    text: "Fortification de Bellowflow"
  finespansBoost:
    text: "Élan de Finespan"
  wigglespellsAccrual:
    text: "Provisions de Wigglespell"
  bunameenksWaxing:
    text: "Cirage de Bunameenk"
  ublathozzsBuild-up:
    text: "Amas de Ublathozz"
  thylinklazsAddition:
    text: "Addition de Thylinklaz"
  klerosNumbers:
    text: "Nombres de Klero"
  noldicksAmassing:
    text: "Amassement Noldick"
  fabiansInfusion:
    text: "Infusion de Fabian"
  bemarinsBuild:
    text: "Construction de Bemarin"
  inemeonsEnergizing:
    text: "Stimulant d'Inemeon"
  jovimaviasAccumulation:
    text: "Accumulation de Jovimavia"
  zanliasGain:
    text: "Gain de Zanlia"
  hodisAugmentation:
    text: "Augmentation de Hodi"
  balthisEnlargement:
    text: "Élargissement de Balthi"
  jeremiahsEnflanginator:
    text: "Enflanginator de Jeremiah" # mmmh... Enflanginator?
  drengundsExtension:
    text: "Extension de Drengund"
  bhuldemsSupplements:
    text: "Suppléments de Bhuldem"
  egusSurge:
    text: "Déferlement d'Egu"
  uglasCharge:
    text: "Charge d'Ugla"
  omarsExciter:
    text: "Excitateur d'Omar"
  rowansVitalization:
    text: "Revitalisation de Rowan"
  ramseysAccumulation:
    text: "Accumulation de Ramsey"
  patstricksAllurement:
    text: "Attrait de Patstrick"
  divinationofAidos:
    text: "Divination d'Aidos"
  aronsAscension:
    text: "Ascension d'Aron"
  hughsGambit:
    text: "Gambit de Hugh"
  vigorofAngerris:
    text: "Vigueur d'Angerris"
  braktarsRighteousness:
    text: "Justesse de Braktar"
  glendaysInflation:
    text: "Inflation de Glenday"
  serarosAccession:
    text: "Avènement de Seraro"
  additionsofAngerris:
    text: "Additions de Angerris"
  agerrasBuildup:
    text: "Tas d'Agerra"
  pixrtonsGains:
    text: "Profits de Pixrton"
  bloomsGlorification:
    text: "Glorification de Bloom"
  acurasAccumulation:
    text: "Entassement d'Acura"
  galmisExpansion:
    text: "Expansion de Galmi"
  lolliwoodsSurge:
    text: "Afflux de Lolliwood"
  drogverasUpgrade:
    text: "Amélioration de Drogvera"
  solairesAugmentation:
    text: "Augmentation de Solaire"
  wendusContinuance:
    text: "Maintien de Wendu"
  raindonsPerpetuation:
    text: "Perpétuation de Raindon"
  gibsonshinesStretch:
    text: "Étirement de Gibsonshine"
  redsPerpetuation:
    text: "Préservation de Red"
  belindasRadius:
    text: "Rayon de Belinda"
  jaedensBringing:
    text: "Apport de Jaeden"
  redfieldsDraw:
    text: "Tirage de Redfield"
  jeremiasReload:
    text: "Rechargement de Jeremia"
  reubensAcceleration:
    text: "Accélération de Reuben"
  clarksMomentum:
    text: "Moment de Clark"
  cristobalsRenewal:
    text: "Renouvellement de Cristobal"
  goransPace:
    text: "Rythme de Goran"
  marcosRubio:
    text: "Rubio de Marco"
  godfreysExpenditure:
    text: "Dépenses de Godfrey"
  rutlandsConsumption:
    text: "Consommation de Rutland"
  edgesAssimilation:
    text: "Assimilation d'Edge"
  fleurettesRetention:
    text: "Rétention de Fleurette"
  lizettesVision:
    text: "Vision de Lizette"
  belindasField:
    text: "Champ de Belinda"
  astleysTerritory:
    text: "Territoire d'Astley"
  hametsRestock:
    text: "Réapprovisionnement de Hamet"
  knotleysFleetness:
    text: "Vitesse de Knotley"
  xixsExpeditiousness:
    text: "Rapidité de Xix"
  xandersSwiftness:
    text: "Célérité de Xander"
  farksRush:
    text: "Précipîtation de Fark"
  malinsInvestment:
    text: "Investissement de Malin"
  marianesUtilization:
    text: "Utilisation de Mariane"
  angelettasFusion:
    text: "Fusion d'Angeletta"
  lillynsAdaptability:
    text: "Adaptabilité de Lillyn"
  glowvalesQuantity:
    text: "Quantité de Glowvale"
  lynnesRange:
    text: "Portée de Lynne"
  kowalskisScope:
    text: "Cadre de Kowalski"
  hannahsLength:
    text: "Longueur de Hannah"
  jakesReplacing:
    text: "Remplaçant de Jake"
  daxtersPromptitude:
    text: "Promptitude de Daxter"
  kamilsAlacrity:
    text: "Empressement de Kamil"
  horseysHustle:
    text: "Tumulte de Horsey"
  huntersUrgency:
    text: "Urgence de Hunter"
  foxsLimits:
    text: "Limites de Fox"
  gwenaelsDomain:
    text: "Domaine de Gwenael"
  albertonsSwing:
    text: "Balancement d'Alberton"
  sporksReplenishment:
    text: "Reconstitution de Spork"
  benjaminsScale:
    text: "Échelle de Benjamin"
  costellosProgression:
    text: "Progression de Costello"
  stephaniesInsistence:
    text: "Insistance de Stephanie"
  lonnebroodsExigency:
    text: "Exigence de Lonnebrood"
  albertsSpan:
    text: "Période d'Albert"
  johnsonsWidth:
    text: "Largeur de Johnson"
  poindextersBreadth:
    text: "Ampleur de Poindexter"
  belsamethsProficiency:
    text: "Compétence de Belsameth"
  jadesDestruction:
    text: "Destruction de Jade"
  nedrasProductivity:
    text: "Productivité de Nedra"
  sengoretsAbundance:
    text: "Abondance de Sengoret"
  elesiasAmplitude:
    text: "Amplitude d'Elesia"
  loransFarness:
    text: "Éloignement de Loran"
  stephensHorizon:
    text: "Horizon de Stephen"
  rydwaltsSweep:
    text: "Balayage de Rydwalt"
  gregorsProgression:
    text: "Évolution de Gregor"
  rowsdowersDivvy:
    text: "Plongeon de Rowsdower"
  maximiliansTempo:
    text: "Tempo de Maximilian"
  guybrushsPace:
    text: "Allure de Guybrush"
  mcAllistersSkills:
    text: "Aptitudes de McAllister"
  threepwoodsFaculty:
    text: "Faculté de Threepwood"
  ajarnsStandard:
    text: "Standard d"Ajarn"
  chartsScale:
    text: "Ampleur de Chart"
  martinsOvercharge:
    text: "Surcharge de Martin"
  nathansPotential:
    text: "Potentiel de Nathan"
  marcsMuscle:
    text: "Muscle de Marc"
  camillesPush:
    text: "Poussée de Camille"
  vichetsRange:
    text: "Étendue de Vichet"
  alexandersQuota:
    text: "Quota d'Alexander"
  qinsApportionment:
    text: "Répartition de Qin"
  johsRate:
    text: "Valeur de Joh"
  earnestsDispatchment:
    text: "Envoi d'Earnest"
  troysCelerity:
    text: "Célérité de Troy"
  morikhanninsPowder:
    text: "Poudre de Morikhannin"
  gaborsSupercharge:
    text: "Suralimentation de Gabor"
  ushalgsClout:
    text: "Influence d'Ushalg"
  billsShifting:
    text: "Décalage de Bill"
  wesleysCreation:
    text: "Création de Wesley"
  bondesExpansion:
    text: "Développement de Bonde"
  roguesSpread:
    text: "Propagation de Rogue"
  hatschimakisFoundation:
    text: "Fondation de Hatschimaki"
  uptonsDuress:
    text: "Contrainte d'Upton"
  jonasFury:
    text: "Fureur de Jona"
  leonidsExhaustion:
    text: "Épuisement de Leonid"
  damianosFormulation:
    text: "Formulation de Damiano"
  raissasProduction:
    text: "Production de Raissa"
  lilosReprisal:
    text: "Représailles de Lilo"
  hildasCache:
    text: "Cachette de Hilda"
  charmainesReserve:
    text: "Réserve de Charmaine"
  fridasAuxiliary:
    text: "Auxiliaire de Frida"
  faithofPompeii:
    text: "Foi de Pompeii"
  brigettesMotility:
    text: "Motilité de Brigette"
  ceciliasEstate:
    text: "Domaine de Cecilia"
  almasAdjuvant:
    text: "Adjuvant d'Alma"
  jordansEquity:
    text: "Équité de Jordan"
  marquisasAllotment:
    text: "Lotissement de Marquisa"
  piasPower:
    text: "Pouvoir de Pia"
  madalenesDisembark:
    text: "Débarquement de Madalene"
  huldasFleetness:
    text: "Attention de Hulda"
  olympesGenesis:
    text: "Génèse d'Olympe"
  ashleesAnchor:
    text: "Ancre d'Ashlee"
  lorrainasAccess:
    text: "Accès de Lorraina"
  mckenziesattainanance:
    text: "Mckenzie" # Attainanance ?
  parksSubservience:
    text: "Soumission de Park"
  corinsWeight:
    text: "Poids de Corin"
  roswellsMobility:
    text: "Mobilité de Roswell"
  hammettsVoyaging:
    text: "Voyage de Hammett"
  wadesPromptness:
    text: "Promptitude de Wade"
  nottleysBriskness:
    text: "Vivacité de Nottley"
  colbysBustle:
    text: "Agitation de Colby"
  pellsFlight:
    text: "Vol de Pell"
  chestersEmbarkment:
    text: "Digue de Chester"
  brooksOrbit:
    text: "Orbite de Brook"
  xaverinesCompass:
    text: "Boussole de Xaverine"
  mariechensHorizon:
    text: "Horizon de Mariechen"
  mildenhallsGrowth:
    text: "Poussée de Mildenhall"
  finjasFarness:
    text: "Éloignement de Finja"
  stampersExtent:
    text: "Étendue de Stamper"
  mikklesEagerness:
    text: "Empressement de Mikkle"
  ahmedsGait:
    text: "Démarche d'Ahmed"
  gavinsPromptitude:
    text: "Promptitude de Gavin"
  howellsExertion:
    text: "Effort de Howell"
  dalyngriggesMoxie:
    text: "Détermination de Dalyngrigge"
  igorsEnergy:
    text: "Energie d'Igor"
  kilosDrive:
    text: "Trajet de Kilo"
  caseysEfficiency:
    text: "Efficacité de Casey"
  mcChrystalsFlurry:
    text: "Rafale de McChrystal"
  boltonsRush:
    text: "Rush de Bolton"
  edwardsMunitions:
    text: "Munitions d'Edward"
  middlecoatsArms:
    text: "Bras de Middlecoat"
  caseysOrdnance:
    text: "Obus de Casey"
  oslauthsDepository:
    text: "Dépôt d'Oslauth"
  manlysArsenal:
    text: "Arsenal de Manly"
  terimortsAbridgment:
    text: "Raccourcissement de Terimort"
  unveilingofVaelophis:
    text: "Révélation de Vaelophis"
  leyasCompression:
    text: "Compression de Leya"
  scottaugsIntroduction:
    text: "Introduction de Scottaug"
  serarosActualization:
    text: "Actualisation de Seraro"
  avenarMultiplication:
    text: "Multiplication d'Avenar"
  nyxsExaggeration:
    text: "Exagération de Nyx"
  garkneesAugmentation:
    text: "Accroissement de Garknee"
  drogcartersAccumulation:
    text: "Cumulation de Drogcarter"
  visermyersRise:
    text: "Montée de Visermyer"
  gingersSpirit:
    text: "Esprit de Ginger"
  rainesGrowth:
    text: "Croissance de Raine"
  blessingofNoveriah:
    text: "Bénédiction de Noveriah"
  perookiesScent:
    text: "Parfum de Perookie"
  hadrinasHabitat:
    text: "Habitat de Hadrina"
  limbysThrift:
    text: "Économie de Limby"
  deductionofSalvak:
    text: "Déduction de Salvak"
  noteofBlasphemy:
    text: "Note de blasphème" #should blasphemy be translated
  dayaphimasBarter:
    text: "Troc de Dayaphima"
  tamanesRecession:
    text: "Récession de Tamane"
  keithsFlourishing:
    text: "Prospérité de Keith"
  nizzsStrengthening:
    text: "Renforcement de Nizz"
  robertsUnwrinkling:
    text: "Défroissement de Robert"
  rugmuksIndelibility:
    text: "Indélébilité de Rugmuk"
  austinsFiber:
    text: "Fibre d'Austin"
  domorosTake:
    text: "Prise de Domoro"
  marcelosHaul:
    text: "Force de Marcelo"
  kittenheartsBooty:
    text: "Trésor de Kittenheart"
  pettigrewsSqueeze:
    text: "Pression de Pettigrew"
  sungwoosPillages:
    text: "Pillages de Sungwoo"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Time Module
# Time of Day
# rtr.TimeModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

timeOfDay:
  comment: "Time Module - Time of Day"
  javaClass: "rtr.TimeModule.java"
  
  night:
    text: "Nuit"
  dawn:
    text: "Aube"
  morning:
    text: "Matin"
  midday:
    text: "Après-midi"
  evening:
    text: "Soir"
  dusk:
    text: "Crépuscule"
  
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Time Module
# Seasons
# rtr.TimeModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

season:
  comment: "Time Module - Seasons"
  javaClass: "rtr.TimeModule.java"
  
  winter:
    text: "Hiver"
  spring:
    text: "Printemps"
  summer:
    text: "Été"
  autumn:
    text: "Automne"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Goals
# Names and Descriptions
# rtr.Goal.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

goal:
  comment: "Goals - Names and Descriptions"
  javaClass: "rtr.Goal.java"
  
  unlockNewGoal:
    header:
      text: "Déverrouille un nouvel objectif"
    body:
      days:
        text: "Survis $GRE1{days}$WHI0 jours pour $GRE1débloquer un objectif $WHI0!"
      additionalDays:
        text: "Survis $GRE1{days}$WHI0 jours supplémentaires pour $GRE1débloquer un objectif $WHI0!"
   
  win:
    header:
      text: "Victoire"
    body:
      text: "Survis $GRE1une année$WHI0 dans $GRE1chaque région du monde$WHI0."

  harvest:
    header:
      text: "Récolte {resourceName}"
    body:
      any: 
        text: "Récolte $GRE1{amount} {resourceName} n'importe où $WHI0!"
      specific:
        text: "Récolte $GRE1{amount} {resourceName} $WHI0dans $GRE1{mapName} $WHI0!"

  manufacture:
    header:
      text: "Création de {resourceName}"
    body:
      any:
        text: "Créé $GRE1{amount} {resourceName} $WHI0dans $GRE1n'importe quelle région $WHI0!"
      specific:
        text: "Créé $GRE1{amount} {resourceName} $WHI0dans $GRE1{mapName} $WHI0!"
        
  survive:
    header:
      text: "Survie"
    body:
      text: "Survis au jour $GRE1{days} $WHI0dans $GRE1{mapName} $WHI0!"

  migration:
    header:
      text: "Migration vers une nouvelle région"
    body:
      single:
        text: "Migre vers une $GRE1nouvelle région $WHI0!"
      multiple:
        text: "Migre vers $GRE1{amount} nouvelles régions $WHI0!"
      
  sendVillagers:
    header:
      text: "Envoi de villageois"
    body:
      any:
        text: "Envoie $GRE1{amount} villageois $WHI0vers $GRE1une autre région$WHI0."
      specific:
        text: "Envoie $GRE1{amount} villageois $WHI0vers $GRE1{mapName} $WHI0!"
      
  sendCourierGolems:
    header:
      text: "Envoi de golems-facteur"
    body:
      any:
        text: "Envoie $GRE1{amount} golems-facteur $WHI0vers $GRE1une autre région$WHI0."
      specific:
        text: "Envoie $GRE1{amount} golems-facteur $WHI0vers $GRE1{mapName} $WHI0!"
      
  sendResourcesGoal:
    header:
      text: "Envoi de ressources"
    body:
      any:
        text: "Envoie $GRE1{amount} {resourceNamePlural} $WHI0via des golems-facteur vers $GRE1une autre région$WHI0."
      specific:
        text: "Envoie $GRE1{amount} {resourceNamePlural} $WHI0via des golems-facteur vers $GRE1{mapName} $WHI0!"
        
  population:
    header:
      text: "Population"
    body:
      any:
        text: "Atteins une population $GRE1globale $WHI0de $GRE1{amount} $WHI0!"
      specific:
        text: "Atteins une population de $GRE1{amount} $WHI0sur $GRE1{mapName} $WHI0!"
        
  stockpile:
    header:
      text: "Stocke des {resourceNamePlural}"
    body:
      any:
        text: "Stocke $GRE1{amount} {resourceNamePlural} n'importe où $WHI0!"
      specific:
        text: "Stocke $GRE1{amount} {resourceNamePlural} $WHI0dans $GRE1{mapName} $WHI0!"
      
  killMonsters:
    header:
      any: 
        text: "Exécution de monstres"
      specific:
        text: "Éxecution de {mobNamePlural}"
    body:
      any:
        any:
          text: "Tue $GRE1{amount} monstres n'importe où $WHI0!"
        specific:
          text: "Tue $GRE1{amount} {mobNamePlural} n'importe où $WHI0!"
      specific:
        any:
          text: "Tue $GRE1{amount} monstres $WHI0dans $GRE1{mapName} $WHI0!"
        specific:
          text: "Tue $GRE1{amount} {mobNamePlural} $WHI0dans $GRE1{mapName} $WHI0!"
      
  castSpells:
    header:
      any: 
        text: "Lancé de sorts"
      specific:
        text: "Lance le sort {spellName}"
    body:
      any:
        any:
          text: "Lance $GRE1{amount} sorts n'importe où $WHI0!"
        specific:
          text: "Lance $GRE1{amount} {spellName} n'importe où $WHI0!"
      specific:
        any:
          text: "Lance $GRE1{amount} sorts $WHI0dans $GRE1{mapName} $WHI0!"
        specific:
          text: "Lance $GRE1{amount} {spellName} $WHI0dans $GRE1{mapName} $WHI0!"
      
      
  grabResources:
    header:
      text: "Saisie de ressources"
    body:
      any:
        text: "Saisis $GRE1{amount} ressources n'importe où $WHI0!"
      specific:
        text: "Saisis $GRE1{amount} ressources $WHI0dans $GRE1{mapName} $WHI0!"
      
  hireCatjeet:
    header:
      text: "Emploi de paysans"
    body:
      any:
        text: "Emploie $GRE1{amount} paysans n'importe où $WHI0!"
      specific:
        text: "Emploie $GRE1{amount} paysans $WHI0dans $GRE1{mapName} $WHI0!"
      
  immigrateNomads:
    header:
      text: "Accueil de nomades"
    header:
      any:
        text: "Accueille $GRE1{amount} nomades n'importe où $WHI0!"
      specific:
        text: "Accueille $GRE1{amount} nomades $WHI0dans $GRE1{mapName} $WHI0!"
      
  build:
    header:
      text: "Construction"
    body:
      any:
        text: "Construis $GRE1{amount} {buildingName} n'importe où $WHI0!"
      specific:
        any:
          text: "Construis $GRE1{amount} bâtiments n'importe où $WHI0!"
        specific:
          text: "Construis $GRE1{amount} bâtiments $WHI0dans $GRE1{mapName} $WHI0!"
          
  upgrade:
    header:
      any:
        text: "Amélioration"
      specific:
        text: "Améliore $GRE1{buildingName}"
    body:
      any:
        text: "Améliore $GRE1{amount} {buildingName} n'importe où $WHI0!"
      specific:
        any:
          text: "Améliore $GRE1{amount} bâtiments n'importe où $WHI0!"
        specific:
          text: "Améliore $GRE1{amount} bâtiments $WHI0dans $GRE1{mapName} $WHI0!"
          
  domestication:
    header:
      text: "Domestication"
    body:
      any:
        text: "Domestique $GRE1{amount} chiens n'importe où $WHI0!"
      specific:
        text: "Domestique $GRE1{amount} chiens $WHI0dans $GRE1{mapName} $WHI0!"
      
  levelUp:
    header:
      text: "Niveau supérieur"
    body:
      any:
        text: "Améliore le niveau de $GRE1{amount} villageois n'importe où $WHI0!"
      specific:
        text: "Améliore le niveau de $GRE1{amount} villageois $WHI0dans $GRE1{mapName} $WHI0!"
      
  childBirth:
    header:
      text: "Naissance d'enfant"
    body:
      any:
        text: "$GRE1{amount} naissances n'importe où $WHI0!"
      specific:
        text: "$GRE1{amount} naissances $WHI0dans $GRE1{mapName} $WHI0!"
      
  openLootBoxes:
    header:
      text: "Ouverture de coffres"
    body:
      any:
        text: "Ouvre $GRE1{amount} coffres à butin n'importe où $WHI0!"
      specific:
        text: "Ouvre $GRE1{amount} coffres à butin $WHI0dans $GRE1{mapName} $WHI0!"
      
  throwMonsterInCullisGate:
    header:
      text: "Lancé de monstres dans les portes cullis"
    body:
      any:
        any:
          text: "Lance $GRE1{amount} monstres $WHI0dans une porte cullis $GRE1n'importe où $WHI0!"
        specific:
          text: "Lance $GRE1{amount} {mobNamePlural} $WHI0dans une porte cullis $GRE1n'importe où $WHI0!"
      specific:
        any:
          text: "Lance $GRE1{amount} monstres $WHI0dans une porte cullis dans $GRE1{mapName} $WHI0!"
        specific:
          text: "Lance $GRE1{amount} {mobNamePlural} $WHI0dans une porte cullis dans $GRE1{mapName} $WHI0!"
      
  resurrectGhosts:
    header:
      text: "Ressuscitation de fantômes"
    body:
      any:
        text: "Ressuscite $GRE1{amount} $WHI0fantômes $GRE1n'importe où$WHI0."
      specific:
        text: "Ressuscite $GRE1{amount} $WHI0fantômes dans $GRE1{mapName} $WHI0!"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Credits
# rtr.gui.states.mainmenu.Credits.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuCredits:
  comment: "Main Menu State - Credits"
  javaClass: "rtr.gui.states.mainmenu.Credits.java"
  
  button:
    back:
      text: "Retour"
  
  header:
    developer:
      text: "$GRE1Développeur, programmeur et artiste en chef"
    music:
      text: "$GRE1Bande son originale"
    thanks:
      text: "$YEL1Un remerciement particulier aux contributeurs sur Patreon et Kickstarter !"
    patreons:
      text: "$GRE1Contributeurs de {amount}+ dollars sur Patreon"
    kickstarter:
      text: "$GRE1Contributeurs de {amount}+ dollars sur Kickstarter"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Delete Profile Panel
# rtr.gui.states.mainmenu.DeleteProfilePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuDeleteProfilePanel:
  comment: "Main Menu State - Delete Profile Panel"
  javaClass: "rtr.gui.states.mainmenu.DeleteProfilePanel.java"
  
  button:
    'no':
      text: "Non !"
    'yes':
      text: "Oui !"
    yesConfirm:
      text: "J'ai dit OUI!"
      
  header:
    text: "$ORA1En es-tu certain ?!"
  body:
    text: "Es-tu certain de vouloir supprimer le profil $GRE1{profileName}$WHI0 ? Tu vas perdre toute ta progession !"
  bodyConfirm:
    text: "$RED1Serieusement, en es-tu ABSOLUMENT sûr ? Toute ta progession sera perdue pour toujours ! (C'est vraiment long !)"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Disclaimer Panel
# rtr.gui.states.mainmenu.DisclaimerPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuDisclaimerPanel:
  comment: "Main Menu State - Disclaimer Panel"
  javaClass: "rtr.gui.states.mainmenu.DisclaimerPanel.java"
  
  button:
    letsPlay:
      text: "Jouons !"
    dontShow:
      text: "Ne plus montrer"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Logo
# rtr.gui.states.mainmenu.Logo.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuLogo:
  comment: "Main Menu State - Logo"
  javaClass: "rtr.gui.states.mainmenu.Logo.java"
  
  halloweenQuote:
    comment: "Cela ne s'affiche que le 31 octobre."
    text: "$ORA1Joyeux halloween!"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Main Menu Panel
# rtr.gui.states.mainmenu.MainMenuPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuMainMenuPanel:
  comment: "Main Menu State - Main Menu Panel"
  javaClass: "rtr.gui.states.mainmenu.MainMenuPanel.java"
  
  button:
    play:
      text: "Jouer"
    worldMap:
      text: "Carte monde"
    skirmish:
      text: "Skirmish" #check for possible alternatives
    mapEditor:
      text: "Éditeur de carte"
    newMap:
      text: "Nouvelle carte"
    loadMap:
      text: "Charger une carte"
    devTools:
      text: "Outils de développeur"
    tutorialVideo:
      text: "Tutoriel vidéo"
    settings:
      text: "Paramètres"
    credits:
      text: "Crédits"
    changeProfile:
      text: "Changer de profil"
    exit:
      text: "Quitter"
    back:
      text: "Retour"
    scrubMapImages:
      text: "Brosser les images de la carte"
    generateMapSheet:
      text: "Générer une feuille de la carte"
    runLineCounter:
      text: "Lancer le compteur de lignes"
    generateVideoSheet:
      text: "Générer une feuille de la vidéo"
    rollover:
      patreon:
        text: "S'engager sur Patreon !"
      twitch:
        text: "Suivre sur Twitch !"
      twitter:
        text: "Suivre sur Twitter !"
      discord:
        text: "Rejoindre le Discord !" 
      
  videoSheetName:
    text: "Nom des feuilles de vidéo"
  linesOfCode:
    text: "~{amount} lignes de code"
  buildVersion:
    text: "$CYA1Build {version}"
    
  reviewPopup:
    header:
      text: "$CYA1Envisages-tu d'écrire une critique ?"
    subHeader:
      text: "$GRE1Aimes-tu Rise to Ruins?"
    body:
      text: "Prend le temps d'écrire une critique. Les critiques comptent beaucoup pour aider les petits développeurs indépendants comme moi !"
    button:
      hide:
        text: "Cacher"
      goReview:
        text: "Rédiger une critique!"

  twitchPopup:
    header:
      text: "$CYA1Stream du développeur !"
    subHeader:
      text: "$GRE1Raymond Doerr est en direct !"
    body:
      text: "Le développement de Rise to Ruins est en train d'être streamé sur Twitch $YEL1maintenant ! ~$GRE1Envie de regarder ?"
    button:
      goWatch:
        text: "Regarder !"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Map Editor - Load Map - Delete Warning Panel
# rtr.gui.states.mainmenu.MapEditorLoadMapDeleteWarningPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorLoadMapDeleteWarningPanel:
  comment: "Main Menu State - Map Editor - Load Map - Delete Warning Panel"
  javaClass: "rtr.gui.states.mainmenu.MapEditorLoadMapDeleteWarningPanel.java"
  
  button:
    'no':
      text: "Non !"
    'yes':
      text: "Oui !"
    yesConfirm:
      text: "J'ai dit OUI !"
    
  header:
    text: "$ORA1En es-tu certain ?!"
  body:
    text: "Whoa, whoa, es-tu certain de~vouloir supprimer la carte $GRE1{mapName} ??"
  bodyConfirm:
    text: "$RED1Serieusement, en es-tu absolument certain ? La carte sera perdue pour toujours ! (C'est vraiment long !)"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Map Editor - Load Map Panel
# rtr.gui.states.mainmenu.MapEditorLoadMapPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorLoadMapPanel:
  comment: "Main Menu State - Map Editor - Load Map Panel"
  javaClass: "rtr.gui.states.mainmenu.MapEditorLoadMapPanel.java"
  
  button:
    loadMap:
      text: "Charger la carte"
    deleteMap:
      text: "Supprimer la carte"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Map Editor - New Map - Delete Warning Panel
# rtr.gui.states.mainmenu.MapEditorNewMapDeleteWarningPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorNewMapDeleteWarningPanel:
  comment: "Main Menu State - Map Editor - New Map - Delete Warning Panel"
  javaClass: "rtr.gui.states.mainmenu.MapEditorNewMapDeleteWarningPanel.java"
  
  button:
    'no':
      text: "Non !"
    'yes':
      text: "Oui !"
    yesConfirm:
      text: "J'ai dit OUI !"
    
  header:
    text: "$ORA1En es-tu certain ?!"
  body:
    text: "Whoa, whoa, es-tu certain de vouloir~supprimer le lot de cartes $GRE1{mapName} $WHI0??"
  bodyConfirm:
    text: "$RED1Serieusement, en es-tu ABSOLUMENT sûr ? Le lot de cartes va être perdu pour toujours ! (C'est vraiment long !)"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Map Editor - New Map Panel
# rtr.gui.states.mainmenu.MapEditorNewMapPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorNewMapPanel:
  comment: "Main Menu State - Map Editor - New Map Panel"
  javaClass: "rtr.gui.states.mainmenu.MapEditorNewMapPanel.java"

  button:  
    create:
      text: "Créer une carte"
    delete:
      text: "Supprimer le lot de carte"
    grassGreen:
      text: "Herbe (verte)"
    grassYellowBrown:
      text: "Herbe (jne-brn)"
    grassEmeraldGreen:
      text: "Herbe (Em-Vrt)"
    dirtLightBrown:
      text: "Terre (Brn clr)"
    dirtBrown:
      text: "Terre (Brun)"
    dirtDarkBrown:
      text: "Terre (Brn fncé)"
    gravelGray:
      text: "Gravier (Gris)"
    gravelBlue:
      text: "Gravier (Bleu)"
    gravelRed:
      text: "Gravier (Rouge)"
    bricksGray:
      text: "Briques (Gris)"
    tilesGray:
      text: "Carreaux (Gris)"
    sandTan:
      text: "Sable (Tanné)"
    sandBlack:
      text: "Sable (Noir)"
    sandRed:
      text: "Sable (Rouge)"
    mapSize:
      large:
        text: "Large"
      medium:
        text: "Moyen"
      small:
        text: "Petit"
      empty:
        text: "Vide"
        
  textInput:
    name:
        text: "Nom de la carte"
    author:
        text: "Ton nom"
        
  header:
    selectPack:
      text: "$ORA1Sélectionne un lot de cartes"
    mapName:
      text: "$ORA1Nom de la carte"
    author:
      text: "$ORA1Autheur de la carte"
    baseTerrain:
      text: "$ORA1Terrain de base"
    size:
      text: "$ORA1Taille"
      
  mapExistsWarning:
    text: "$RED1LA CARTE EXISTE DÉJÀ DANS LE LOT {mapPackName}"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# New Profile Panel
# rtr.gui.states.mainmenu.NewProfilePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuNewProfilePanel:
  comment: "Main Menu State - New Profile Panel"
  javaClass: "rtr.gui.states.mainmenu.NewProfilePanel.java"
  
  button:
    back:
      text: "Retour"
    create:
      text: "Créer !"
    textInput:
      profileName:
        text: "Le nom de ton profil"
      twitchChannel:
        text: "Ta chaîne Twitch (Intégration Twitch, optionnelle)"  
        
  header:
    inputProfileName:
      text: "$ORA1Entre le nom de ton profil !"
    tipsEnabled:
      text: "Conseils activés"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Select Profile Panel
# rtr.gui.states.mainmenu.SelectProfilePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuSelectProfilePanel:
  comment: "Main Menu State - Select Profile Panel"
  javaClass: "rtr.gui.states.mainmenu.SelectProfilePanel.java"
  
  button:
    play:
      text: "Jouer"
    delete:
      text: "Supprimer"
    exit:
      text: "Quitter"
    createNewProfile:
      text: "Créer un nouveau profil"
      
  header:
    profiles:
      text: "$YEL0Profils"
      
  corruptProfile:
    text: "Profil corrompu"
  outdatedProfilePrefix:
    text: "(OBSOLÈTE) {profileName}"
  outdatedWarning:
    text: "$PIN1CE PROFIL N'EST PLUS COMPATIBLE~MERCI D'EN CRÉER UN NOUVEAU"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Skirmish Panel - New Game Warning Panel
# rtr.gui.states.mainmenu.SkirmishNewGameWarningPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuSkirmishNewGameWarningPanel:
  comment: "Main Menu State - Skirmish Panel - New Game Warning Panel"
  javaClass: "rtr.gui.states.mainmenu.SkirmishNewGameWarningPanel.java"
  
  button:
    'no':
      text: "Non !"
    'yes':
      text: "Oui !"
    yesConfirm:
      text: "J'ai dit OUI !"
      
  header:
    text: "$ORA1En es-tu certain ?!"
  body:
    text: "Tu as déjà une partie {gameMode} active. Es-tu sûr de vouloir recommencer $GRE1{mapName} $WHI0?"
  bodyConfirm:
    text: "$RED1Serieusement, en es-tu ABSOLUMENT certain ? Cette sauvegarde sera perdue pour toujours ! (C'est très long !)"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Skirmish Panel
# rtr.gui.states.mainmenu.SkirmishPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuSkirmishPanel:
  comment: "Main Menu State - Skirmish Panel"
  javaClass: "rtr.gui.states.mainmenu.SkirmishPanel.java"
  
  button:
    newGame:
      text: "Nouvelle partie"
    resumeGame:
      text: "Continuer la partie"
    resumeGameResetAI:
      text: "Nouvelle partie (Réinitialiser l'IA)"
    nightmare:
      text: "Cauchemard"
    survival:
      text: "Survie"
    traditional:
      text: "Traditionnel"
    peaceful:
      text: "Paisible"
    sandbox:
      text: "Bac à sable"
      
  header:
    gameMode:
      text: "$YEL1Mode de jeu"
    saveRollback:
      text: "$YEL1Faire une sauvegarde"
    
  gameMode:
    header:
      nightmare:
        text: "$RED1-Cauchemard-"
      survival:
        text: "$ORA1-Survie-"
      traditional:
        text: "$GRE1-Traditionnel-"
      peaceful:
        text: "$CYA1-Paisible-"
      sandbox:
        text: "$MAG1-Bac à sable-"
    body:
      nightmare:
        text: "Un mode de jeu impossible qui est brutal et injuste. Seulement pour les masochistes !"
      survival:
        text: "La façon dont le jeu est censé être joué. Essaie de survivre le plus longtemps possible !"
      traditional:
        text: "Une expérience de simulation de village plus classique avec moins de monstres. Bien pour apprendre à jouer !"
      peaceful:
        text: "Mode extrêmement facile sans aucun monstre."
      sandbox:
        text: "Un mode plaisant pour expérimenter les mécaniques du jeu et tester d'autres choses."
                        
  mapAuthor:
    text: "$YEL1Par : {authorName}"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Main Menu State
# Upload Profile Panel
# rtr.gui.states.mainmenu.UploadProfilePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mainMenuUploadProfilePanel:
  comment: "Main Menu State - Upload Profile Panel"
  javaClass: "rtr.gui.states.mainmenu.UploadProfilePanel.java"
  
  button:
    back:
      text: "Retour"
    upload:
      text: "Envoyer"
    crash:
      text: "Crash"
    laggy:
      text: "Lags/lent"
    corrupt:
      text: "Données corrompues"
    devRequest:
      text: "Requête au dev"
    other:
      text: "Autre"
    textInput:
      comments:
        text: "Commentaires additionels (optionnel)"
      username:
        text: "Nom d'utilisateur (optionnel)"

  message:
    sending:
      text: "ENVOI DU PROFIL, MERCI DE PATIENTER !"
    sendingAttempt:
      text: "$RED0Essai : {attemptCount}"
    sendingAttemptFailure:
      text: "$RED0Il y a peut-être un problème avec le pare-feu, ~ou tu n'es pas connecté à internet !"
    sendingFailure:
      text: "$RED0Une erreur est survenue lors de l'envoi du profil ! Merci de vérifier la connexion internet et les paramètres du pare-feu."
    sendingSuccess:
      text: "Merci, le profil a bien été envoyé au développeur."
      
  body:
    text: "Cet outil de publication va empaqueter et envoyer le profil sélectionné et les logs au développeur pour résoudre les problèmes. Merci de sélectionner problème que vous rencontrez, et si besoin, un bref commentaire."
  header:
    text: "Profil sélectionné"
  category:
    text: "Catégorie du problème"


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State
# Main Menu Panel
# rtr.gui.states.mapeditor.MainMenuPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorMainMenuPanel:
  comment: "Map Editor State - Main Menu Panel"
  javaClass: "rtr.gui.states.mapeditor.MainMenuPanel.java"
  
  button:
    settings:
      text: "Paramètres"
    saveAndExit:
      text: "Sauvegarder et quitter"
    exitOnly:
      text: "Quitter seulement"
    'yes':
      text: "Oui !"
      
  header:
    text: "Menu principal"
  exitWarning:
    text: "$GRE1EN ES-TU SÛR ?~$RED1TA CARTE NE SERA~PAS SAUVEGARDÉE !"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State
# Regional Data Panel
# rtr.gui.states.mapeditor.RegionalDataPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorRegionalDataPanel:
  comment: "Map Editor State - Regional Data Panel"
  javaClass: "rtr.gui.states.mapeditor.RegionalDataPanel.java"
  
  button:
    save:
      text: "Sauvegarder"
      
  header:
    text: "Liste des régions"
  connectedRegions:
    text: "Régions connectées"
  notSetPlaceholder:
    text: "Non défini"
  worldMapCoordinates:
    text: "Coordonnées sur la map monde"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State / Play State
# Right Panel
# rtr.gui.states.mapeditor.RightPanel.java
# rtr.gui.states.playstate.RightPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorPlayRightPanel:
  comment: "Map Editor State / Play State - Right Panel"
  javaClass: "rtr.gui.states.mapeditor.RightPanel.java"
  javaClass2: "rtr.gui.states.playstate.RightPanel.java"
  
  button:
    navigation:
      back:
        text: "Page précédente"
      pageUp:
        text: "Page suivante"
      pageDown:
        text: "Page précédente"
      hidePanel:
        text: "Masquer le panneau"
      
    main:
      build:
        text: "Constructions"
      tiles:
        text: "Tuiles"
      time:
        text: "Temps"
      spawning:
        text: "Invocations"
      particles:
        text: "Particules"
      miscellaneous:
        text: "Divers"
      
    build:
      ancient:
        text: "Ancient"
      civics:
        text: "Civil"
      defense:
        text: "Défense"
      foodAndWater:
        text: "Nourriture et eau"
      harvesting:
        text: "Récolte"
      housing:
        text: "Logements"
      lighting:
        text: "Éclairage"
      magic:
        text: "Magie"
      manufacturing:
        text: "Fabrication"
      refining:
        text: "Raffinage"
      storage:
        text: "Stockage"
      walls:
        text: "Murs"
      special:
        text: "Special"
      
    ancient:
      ancientCullisGateAbandoned:
        text: "Ancienne porte cullis (abandonné)"
      ancientCullisGate:
        text: "Ancienne porte cullis"
      ancientRadiancePoolAbandoned:
        text: "Anc. bassin rayonnant (abandonné)"
      ancientRadiancePool:
        text: "Ancient bassin rayonnant"
      
    civics:
      ancillary:
        text: "Entrepôt"
      clinic:
        text: "Clinique"
      courierStation:
        text: "Poste de courrier"
      maintenanceBuilding:
        text: "Bâtiment d'entretien"
      marketplace:
        text: "Marché"
      wayMakerShack:
        text: "Cabanne du responsable voirie"
      migrationWayStation:
        text: "Station de migration"
      
    defense:
      guardsAndGolems:
        text: "Gardes et golems"
      towers:
        text: "Tours"
      miscellaneous:
        text: "Divers"
      
    guardsAndGolems:
      barracks:
        text: "Caserne"
      outpost:
        text: "Avant-poste"
      crystalGolemCombobulator:
        text: "Combobulateur de golems de cristal"
      stoneGolemCombobulator:
        text: "Combobulateur de golems de pierre"
      woodGolemCombobulator:
        text: "Combobulateur de golems de bois"
      
    towers:
      attractTower:
        text: "Tour attractive"
      banishTower:
        text: "Tour bannisseuse"
      ballistaTower:
        text: "Balliste"
      bowTower:
        text: "Tour d'archers"
      bulletTower:
        text: "Tourelle"
      elementalBoltTower:
        text: "Tour-éclair"
      phantomDartTower:
        text: "Tour à fléchettes fantômes"
      slingTower:
        text: "Tour à fronde"
      sprayTower:
        text: "Tour pulvérisatrice"
      staticTower:
        text: "Tour statique"
      
    defenseMiscellaneous:
      lightningRod:
        text: "Paratonnerre"
      recombobulatorTower:
        text: "Tour recombobulatrice"
      
    foodAndWater:
      bottler:
        text: "Embouteilleur"
      farm:
        text: "Ferme"
      smallFountain:
        text: "Petite fontaine"
      largeFountain:
        text: "Grande fontaine"
      kitchen:
        text: "Cuisine"
      rainCatcher:
        text: "Collecteur d'eau"
      waterPurifier:
        text: "Station de purification"
      well:
        text: "Puits"
      
    harvesting:
      crystalHarvestry:
        text: "Exploitation de cristaux"
      lumberShack:
        text: "Cabanne du bûcheron"
      miningFacility:
        text: "Exploitation minière"
      
    housing:
      doggoHouse:
        text: "Niche"
      housing:
        text: "Logement"
      
    lighting:
      firePit:
        text: "Foyer"
      largeFirePit:
        text: "Grand foyer"
      
    magic:
      crystalMotivator:
        text: "Motivateur de cristaux"
      cullisGate:
        text: "Porte cullis"
      essenceCollector:
        text: "Collecteur d'essence"
      
    manufacturing:
      armorsmithy:
        text: "Armurerie"
      bowyer:
        text: "Archerie"
      rockTumbler:
        text: "Fabricant de cartouches"
      toolsmithy:
        text: "Outilleur"
      
    refining:
      crystillery:
        text: "Cristallerie"
      forge:
        text: "Forge"
      lumberMill:
        text: "Scierie"
      stoneCuttery:
        text: "Tailleur de pierre"
      
    storage:
      ammoStorage:
        text: "Stockage de munitions"
      crystalStorage:
        text: "Stockage de cristaux"
      equipmentStorage:
        text: "Stockage d'équipement"
      foodStorage:
        text: "Stockage de nourriture"
      goldStorage:
        text: "Stockage d'or"
      keyShack:
        text: "Cabanne des clés"
      mineralStorage:
        text: "Stockage de minéraux"
      miscellaneousStorage:
        text: "Stockage divers"
      rockStorage:
        text: "Stockage de pierre"
      woodStorage:
        text: "Stockage de bois"
      
    walls:
      woodFence:
        text: "Clôture en bois"
      woodFenceGateNS:
        text: "Portillon en bois (N/S)"
      woodFenceGateWE:
        text: "Portillon en bois (O/E)"
      stoneWallGateNS:
        text: "Portillon en pierre (N/S)"
      stoneWallGateWE:
        text: "Portillon en pierre (O/E)"
      stoneWall:
        text: "Muret de pierre"
      curtainWall:
        text: "Muraille"
      
    special:
      camp:
        text: "Campement"
      lootBox:
        text: "Coffre à butin"
      
    tiles:
      bricks:
        text: "Briques"
      crystals:
        text: "Cristaux"
      dirt:
        text: "Terre"
      flowers:
        text: "Fleurs"
      food:
        text: "Nourriture"
      grass:
        text: "Herbe"
      gravel:
        text: "Gravier"
      lava:
        text: "Lave"
      roads:
        text: "Routes"
      rock:
        text: "Pierre"
      sand:
        text: "Sable"
      sandstone:
        text: "Grès"
      tar:
        text: "Goudron"
      trees:
        text: "Arbres"
      water:
        text: "Eau"
      
    bricks:
      grayBricks:
        text: "Briques grises"
      grayTiles:
        text: "Carrelage gris"
      
    crystals:
      redCrystals:
        text: "Cristaux rouges"
      greenCrystals:
        text: "Cristaux verts"
      blueCrystals:
        text: "Cristaux bleus"
      purpleCrystals:
        text: "Cristaux pourpres"
      
    dirt:
      brownDirt:
        text: "Terre brune"
      darkBrownDirt:
        text: "Terre marron"
      lightBrownDirt:
        text: "Terre brun clair"
      
    flowers:
      blackFlowers:
        text: "Fleurs noires"
      blueFlowers:
        text: "Fleurs bleues"
      purpleFlowers:
        text: "Fleurs violettes"
      redFlowers:
        text: "Fleurs rouges"
      whiteFlowers:
        text: "Fleurs blanches"
      yellowFlowers:
        text: "Fleurs jaunes"
      
    food:
      cactus:
        text: "Cactus"
      carrots:
        text: "Carrotes"
      melons:
        text: "Melons"
      potatoes:
        text: "Pommes de terre"
      turnips:
        text: "Navets"
      
    grass:
      emeraldGreenGrass:
        text: "Herbe vert émeraude"
      greenGrass:
        text: "Herbe verte"
      yellowBrownGrass:
        text: "Herbe ochre"
      
    gravel:
      blueGravel:
        text: "Gravier bleu"
      grayGravel:
        text: "Gravier gris"
      redGravel:
        text: "Gravier rouge"
      
    lava:
      lava:
        text: "Lave"
      
    roads:
      path:
        text: "Chemin"
      logPathDebris:
        text: "Débris de chemin en bois"
      logPath:
        text: "Chemin en bois"
      cobbleAndLogPathDebris:
        text: "Débris de chemin en bois et pierre"
      cobbleAndLogPath:
        text: "Chemin en bois et pierre"
      cobbleAndBoardRoadDebris:
        text: "Débris de chemin en planches et pierre"
      cobbleAndBoardRoad:
        text: "Chemin en planches et pierre"
      cutStoneAndBoardRoadDebris:
        text: "Débris de route pavée/planches"
      cutStoneAndBoardRoad:
        text: "Route pavée/planches"
      
    rock:
      blackRock:
        text: "Pierre noire"
      brownRock:
        text: "Pierre brune"
      grayRock:
        text: "Pierre grise"
      redRock:
        text: "Pierre rouge"
      whiteRock:
        text: "Pierre blanche"
      
    sand:
      blackSand:
        text: "Sable noir"
      redSand:
        text: "Sable rouge"
      tanSand:
        text: "Sable tanné"
      
    sandstone:
      blackSandstone:
        text: "Grès noir"
      redSandstone:
        text: "Grès rouge"
      tanSandstone:
        text: "Grès tanné"
      
    tar:
      tar:
        text: "Goudron"
      
    trees:
      blueDeadTrees:
        text: "Arbres bleus morts"
      blueStumps:
        text: "Souches bleues"
      blueTrees:
        text: "Arbres bleus"
      brownDeadTrees:
        text: "Arbres bruns morts"
      brownStumps:
        text: "Souches brunes"
      brownTrees:
        text: "Arbres bruns"
      darkGreenDeadTrees:
        text: "Arbres vert foncé morts"
      darkGreenStumps:
        text: "Souches vert foncé"
      darkGreenTrees:
        text: "Arbres vert foncé"
      greenDeadTrees:
        text: "Arbres verts morts"
      greenStumps:
        text: "Souches vertes"
      greenTrees:
        text: "Arbres verts"
      redDeadTrees:
        text: "Arbres rouges morts"
      redStumps:
        text: "Souches rouges"
      redTrees:
        text: "Arbres rouges"
      
    water:
      water:
        text: "Eau"
      
    time:
      comment: Sandbox Mode Only
      
      toggleTime:
        text: "Altérer le temps"
      
    spawning:
      comment: Sandbox Mode Only
      
      spawnMob:
        text: "Invocation monstres"
      spawnResource:
        text: "Invocation ressources"
      
    particles:
      comment: Sandbox Mode Only
      
      emitParticles:
        text: "Émission particules"
      
    miscellaneous:
      comment: Sandbox Mode Only
      
      emitEssence:
        text: "Émettre de l'essence"
      toggleWeather:
        text: "Inverser le temps"
      lightning:
        text: "Éclair"
      restoreBasicNeeds:
        text: "Rest. besoins de base"
      restoreHealth:
        text: "Restaurer vie"
      fireMissile:
        text: "Lancer projectile"
        
  header:
    time:
      comment: Sandbox Mode Only
      
      currentDay:
        text: "Jour actuel"
      timeOfDay:
        text: "Heure"
      season:
        text: "Saison"
      advanceTime:
        text: "Cours du temps"
      startAdvanceTime:
        text: "Reprendre le cours du temps"
      
    spawning:
      comment: Sandbox Mode Only
      
      mobType:
        text: "Type de monstre"
      mobAmount:
        text: "Quantité monstre"
      resourceType:
        text: "Type ressource"
      resourceAmount:
        text: "Qté. ressource"
      spawnChance:
        text: "Proba apparition"
      monsterCount:
        text: "Nombre de monstres"
      
    particles:
      comment: Sandbox Mode Only
      
      particleType:
        text: "Type de particule"
      particleColor:
        text: "Couleur des particules"
      particleAmount:
        text: "Quantité de particules"
      particleSpread:
        text: "Diffusion"
      particleAngle:
        text: "Angle"
      
    miscellaneous:
      comment: Sandbox Mode Only
      
      essenceAmount:
        text: "Qté. essence"
      essenceValue:
        text: "Valeur"
      missileType:
        text: "Type projectile"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State
# System and Data Bar
# rtr.gui.states.mapeditor.SystemAndDataBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorSystemAndDataBar:
  comment: "Map Editor State - System and Data Bar"
  javaClass: "rtr.gui.states.mapeditor.SystemAndDataBar.java"
  
  button:
    tooltip:
      mainMenuHeader:
        text: "Menu principal ({shortcutKey})"
      mainMenu:
        text: "Quitter l'éditeur de carte, ou modifier les paramètres."
      saveMapHeader:
        text: "Sauvegarder la carte"
      minimapHeader:
        text: "Minicarte ({shortcutKey})"
      minimap:
        text: "Voir la minicarte entière."
      dataViewsHeader:
        text: "Vue de données ({shortcutKey})"
      dataViews:
        text: "Voir diverses cartes de données."
      hideTopographyHeader:
        text: "Cacher la topographie ({shortcutKey})"
      hideTopography:
        text: "Cache la couche topographique de la carte, facilitant le dessin du terrain en dessous."
      musicHeader:
        text: "Musique"
      music:
        text: "Voir la liste de toutes les pistes de musique, et, si désiré, changer la piste actuelle."
      regionalDataHeader:
        text: "Données régionales"
      regionalData:
        text: "Changer les régions auxquelles cette carte est connectée ainsi que sa position sur la carte monde."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State / Play State
# Harvest and Terrain Bar / Terrain Bar
# rtr.gui.states.mapeditor.TerrainBar.java
# rtr.gui.states.playstate.HarvestAndTerrainBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorPlayHarvestAndTerrainBar:
  comment: "Map Editor State / Play State - Harvest and Terrain Bar / Terrain Bar"
  javaClass: "rtr.gui.states.mapeditor.TerrainBar.java"
  javaClass2: "rtr.gui.states.playstate.HarvestAndTerrainBar.java"
  
  button:
    tooltip:
      circleBrushHeader:
        text: "Pinceau circulaire ({shortcutKey})"
      filletedSquareBrushHeader:
        text: "Pinceau caré fileté ({shortcutKey})"
      chamferedSquareBrushHeader:
        text: "Pinceau carré chanfreiné ({shortcutKey})"
      squareBrushHeader:
        text: "Pinceau carré ({shortcutKey})"
      decreaseBrushSizeHeader:
        text: "Diminuer la taille ({shortcutKey})"
      increaseBrushSizeHeader:
        text: "Augmenter la taille ({shortcutKey})"
      harvestWoodHeader:
        text: "Récolter du bois ({shortcutKey})"
      harvestWood:
        text: "Définit les forêts dans lesquelles les bûcherons et constructeurs doivent récolter. Les constructeurs ne vont récolter des matériaux que si il y a un projet de construction actif."
      harvestRockHeader:
        text: "Récolter de la pierre ({shortcutKey})"
      harvestRock:
        text: "Définit les montagnes dans lesquelles les mineurs et constructeurs doivent récolter. Les constructeurs ne vont récolter des matériaux que si il y a un projet de construction actif."
      harvestFoodAndWaterHeader:
        text: "Récolter de la nourriture et de l'eau ({shortcutKey})"
      harvestFoodAndWater:
        text: "Définit la nourriture sauvage et les sources d'eau qui doivent être utilisées par les agriculteurs et les responsables de l'eau afin d'être utilisées dans les fermes et les purificateurs d'eau. Les agriculteurs n'iront cherche de l'eau que pour l'utiliser dans leurs fermes."
      harvestCrystalHeader:
        text: "Récolter du cristal ({shortcutKey})"
      harvestCrystal:
        text: "Définit les champs de cristaux qui seront exploités par les récolteurs de cristaux et constructeurs. Les constructeurs ne vont récolter des matériaux que si il y a un projet de construction actif. "
      accentModeHeader:
        text: "Mode d'accentuation ({shortcutKey})"
      accentMode:
        text: "Verrouille l'outil pinceau de terrain afin de dessiner la couche accentuée du terrain."
      eraseAllHeader:
        text: "Tout supprimer ({shortcutKey})"
      eraseAll:
        text: "Supprime tout dans le rayon du pinceau."
      eraseTerrainHeader:
        text: "Supprimer le terrain ({shortcutKey})"
      eraseTerrain:
        text: "Supprime le terrain sous la topographie dans le rayon du pinceau."
      eraseTopographyHeader:
        text: "Supprimer la topographie ({shortcutKey})"
      eraseTopography:
        text: "Supprime les arbres, l'eau, la pierre et autres topographies dans le rayon du pinceau."
      eraseObjectsHeader:
        text: "Supprimer les objets ({shortcutKey})"
      eraseObjects:
        text: "Supprime tous les bâtiments, murs et autres objets dans le rayon du pinceau."
      eraseRoadsHeader:
        text: "Supprimer les routes ({shortcutKey})"
      eraseRoads:
        text: "Supprime toutes les routes dans le rayon du pinceau."
      holeHeader:
        text: "Trou ({shortcutKey})"
      hole:
        text: "Enlève complètement le terrain dans le rayon du pinceau, même la couche de base."
      patchHeader:
        text: "Replacer ({shortcutKey})"
      patch:
        text: "Replace le terrain dans le rayon du pinceau."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Map Editor State
# World Map List Panel
# rtr.gui.states.mapeditor.WorldMapListPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mapEditorWorldMapListPanel:
  comment: "Map Editor State - World Map List Panel"
  javaClass: "rtr.gui.states.mapeditor.WorldMapListPanel.java"
  
  header:
    regionList:
      text: "Region List"
    miniMap:
      text: "Mini Map"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Building List Panel
# rtr.gui.states.playstate.BuildingListPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playBuildingListPanel:
  comment: "Play State - Building List Panel"
  javaClass: "rtr.gui.states.playstate.BuildingListPanel.java"
  
  button:
    tooltip:
      firstPageHeader:
        text: "First Page"
      lastPageHeader:
        text: "Last Page"
      pageDownHeader:
        text: "Page Down"
      pageUpHeader:
        text: "Page Up"
      increasePriorityHeader:
        text: "Increase Priority"
      increasePriority:
        text: "Increase the construction priority of the building. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      decreasePriorityHeader:
        text: "Decrease Priority"
      decreasePriority:
        text: "Decrease the construction priority of the building. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      topPriorityHeader:
        text: "Top Priority"
      topPriority:
        text: "Sets the construction priority of the building the top of the list. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      lastPriorityHeader:
        text: "Last Priority"
      lastPriority:
        text: "Sets the construction priority of the building the bottom of the list. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      prioritySortOrderHeader:
        text: "Priority Sort Order"
      prioritySortOrder:
        text: "Adjusts the order of how the wall segments in this group will be built."

  tooltip:
    totalBuildingsHeader:
      text: "Total Building"
    totalBuildings:
      text: "The total amount of buildings, and how many building slots remains. Does not count walls or ancillaries. Increase your build slots by building additional ancillaries!"
    totalAncillariesHeader:
      text: "Total Ancillaries"
    totalAncillaries:
      text: "The total amount of ancillaries, and how many ancillary slots remains. Increase your ancillary slots by upgrading your camp/castle!"
    totalHomeOccupancyHeader:
      text: "Total Home Occupancy"
    totalHomeOccupancy:
      text: "The total amount of living space currently being used, as well as the total available you have in your homes."
    totalBarracksOccupancyHeader:
      text: "Total Barracks Occupancy"
    totalBarracksOccupancy:
      text: "The total amount of living space currently being used, as well as the total available you have in your barracks."
    totalWorkersHeader:
      text: "Total Workers"
    totalWorkers:
      text: "The total amount of villagers who have a job assigned somewhere in the village, and the maximum jobs a that are available."
    workersHeader:
      text: "Workers"
    workers:
      text: "Total amount of workers slots this building supplies."
    occupancyHeader:
      text: "Occupancy"
    occupancy:
      text: "How many villagers are living in this building, as well as the total amount of living space this building supplies."
    energyHeader:
      text: "Energy"
    energy:
      text: "The amount of stored energy this building has, as well as the maximum it can store."
    dirtyWaterHeader:
      text: "Dirty Water"
    dirtyWater:
      text: "The amount of dirty water this building has."
    waterHeader:
      text: "Water"
    water:
      text: "The amount of clean drinking water this building has."
    goldCoinsHeader:
      text: "Gold Coins"
    goldCoins:
      text: "The amount of gold this building has."
    ammoHeader:
      text: "Ammo"
    ammo:
      text: "The amount of ammo the building currently has loaded, as well as the maximum amount it can load. This does not count unloaded ammo that is in the building's storage."

  header:
    text: "Building List"
  buildingListPage:
    text: "Building List       Pg: {currentPage} of {totalPages}"
  buildingPaused:
    text: "$YEL1 (Paused)"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Castle Panel
# rtr.gui.states.playstate.CastlePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playCastlePanel:
  comment: "Play State - Castle Panel"
  javaClass: "rtr.gui.states.playstate.CastlePanel.java"
  
  button:
    placeCamp:
      text: "Place Camp"
      
    tooltip:
      hidePanelHeader:
        text: "Hide Panel"
      hidePanel:
        text: "Disregard this panel. If you need to build the camp later, it will be in the right hand build menu under 'Special'"

  header:
    text: "$GRE1Place Camp"
  body:
    text: "Get started by placing your camp!~Place it near some rock, trees and food!"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Console Panel
# rtr.gui.states.playstate.ConsolePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playConsolePanel:
  comment: "Play State - Console Panel"
  javaClass: "rtr.gui.states.playstate.ConsolePanel.java"
  
  button:
    tooltip:
      hidePanelHeader:
        text: "Hide Panel Toggle"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Left Job Description Panel
# rtr.gui.states.playstate.LeftJobDescriptionPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playLeftJobDescriptionPanel:
  comment: "Play State - Left Job Description Panel"
  javaClass: "rtr.gui.states.playstate.LeftJobDescriptionPanel.java"
  
  header:
    canBuildUsing:
      text: "Can Build Using"
    buildRoadsUsing:
      text: "Build Roads Using"
    canDeliverToBuildRoads:
      text: "Can Deliver (To Build Roads)"
    canHarvestToBuild:
      text: "Can Harvest (To Build)"
    canDeliverToBuild:
      text: "Can Deliver (To Build)"
    canHarvestToStore:
      text: "Can Harvest (To Store)"
    canRefineManufacture:
      text: "Can Refine/Manufacture"
    canPlant:
      text: "Can Plant"
    canDeliverToCourierGolems:
      text: "Can Deliver (To Courier Golems)"
    canStore:
      text: "Can Store"
    preferredTools:
      text: "Preferred Tools"
    combatBonuses:
      text: "Combat Bonuses"
    canRepairBuildings:
      text: "Can Repair Buildings"
    canRepairRoads:
      text: "Can Repair Roads"
    canDestroyClearTerrain:
      text: "Can Destroy/Clear Terrain"
    canDestroyClearRoads:
      text: "Can Destroy/Clear Roads"
    canCreateLakes:
      text: "Can Create Lakes"
    canTendToAndWaterFarms:
      text: "Can Tend to and Water Farms"
      
  moreResourcesThanListedCount:
    text: "$ORA0Plus {amount} more."
  combatDamageBonus:
    text: "$GRE1+{amount}% All Damage"
  combatDefenseBonus:
    text: "$GRE1+{amount}% All Defense"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Left Migration Description Panel
# rtr.gui.states.playstate.LeftMigrationDescriptionPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playLeftMigrationDescriptionPanel:
  comment: "Play State - Left Migration Description Panel"
  javaClass: "rtr.gui.states.playstate.LeftMigrationDescriptionPanel.java"
  
  lost:
    text: "$RED1Lost!"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Left Panel
# rtr.gui.states.playstate.LeftPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playLeftPanel:
  comment: "Play State - Left Panel"
  javaClass: "rtr.gui.states.playstate.LeftPanel.java"
  
  button:
    tooltip:
      workforceHeader:
        text: "Workforce"
      resourceManagementHeader:
        text: "Resource Management"
      tradeHeader:
        text: "Trade"
      trade:
        text: "Requires Marketplace"
      migrationHeader:
        text: "Migration"
      migration:
        text: "Requires Migration Way Station"
      courierHeader:
        text: "Courier"
      courier:
        text: "Requires Courier Station"
      hidePanelHeader:
        text: "Hide Panel Toggle"
        
  trade:
    button:
      buy:
        text: "Buy"
      sell:
        text: "Sell"
      hire:
        text: "Hire"
      tooltip:
        buyHeader:
          text: "Buy {resourceName}"
        sellHeader:
          text: "Sell {resourceName}"
        decreaseBuyOrderHeader:
          text: "Decrease Buy Order"
        decreaseBuyOrder:
          text: "Decrease how much {resourceName} the village is attempting to buy. This can be set higher than the resources available, and they will be bought as they become available."
        increaseBuyOrderHeader:
          text: "Increase Buy Order"
        increaseBuyOrder:
          text: "Increase how much {resourceName} the village is attempting to buy. This can be set higher than the resources available, and they will be bought as they become available."
        decreaseSellOrderHeader:
          text: "Decrease Sell Order"
        decreaseSellOrder:
          text: "Decrease how much {resourceName} the village is attempting to sell. This can be set higher than the resources available, and they will be sold as they become available."
        increaseSellOrderHeader:
          text: "Increase Sell Order"
        increaseSellOrder:
          text: "Increase how much {resourceName} the village is attempting to sell. This can be set higher than the resources available, and they will be sold as they become available."
        hireLaborHeader:
          text: "Hire Labor"
        hireLabor:
          text: "If available, hire Catjeet Laborers to join the village."
        decraseCatjeetOrderHeader:
          text: "Decrease Order"
        decraseCatjeetOrder:
          text: "Decrease how many catjeet laborers the village is attempting to hire."
        incraseCatjeetOrderHeader:
          text: "Increase Order"
        incraseCatjeetOrder:
          text: "Increase how many catjeet laborers the village is attempting to hire."
        previousCategoryHeader:
          text: "Previous Category"
        nextCategoryHeader:
          text: "Next Category"
          
    tooltip:
      villageStockPriceHeader:
        text: "Village Stock Price"
      catjeetStockPriceHeader:
        text: "Catjeet Stock Price"
      villageStockHeader:
        text: "Village Stock"
      catjeetStockHeader:
        text: "Catjeet Stock"
      priceHeader:
        text: "Price"
      laborerStockHeader:
        text: "Laborer Stock"
      laborerStock:
        text: "Current total available laborers available, and how much gold they cost to hire."
        
    requiresMarketplace:
      text: "Requires Marketplace"
    empty:
      text: "$BLA1Empty"
    sellAmountAndPrice:
      text: "$YEL1{amount} $WHI0at $GRE1{price}"
    buyAmountAndPriceTooHigh:
      text: "$RED1{amount} $WHI0at $RED1{price}"
    buyAmountAndPrice:
      text: "$GRE1{amount} $WHI0at {price}"
    catjeetLaborersHeader:
      text: "Catjeet Laborers"
    noLaborers:
      text: "No Laborers"

  workforce:
    button:
      tooltip:
        reduceWorkersHeader:
          text: "Reduce Workers"
        reduceWorkers:
          text: "Reduce workers for this job, freeing them up to work elsewhere."
        requestWorkersHeader:
          text: "Request Workers"
        requestWorkers:
          text: "Request more workers to take this job. If the numbers turns red, you've requested more workers than villagers available."
        pageUpHeader:
          text: "Page Up"
        pageDownHeader:
          text: "Page Down"
          
    tooltip:
      unemployedVillagersHeader:
        text: "Unemployed Villagers"
      unemployedVillagers:
        text: "How many adult villagers are available to work, but have not been assigned a job."
      desiredAndMaxWorkersHeader:
        text: "Desired / Max Workers"
      desiredAndMaxWorkers:
        text: "How many villagers are requested for this job and how many job slots are available. If the numbers turns red, you've requested more workers than villagers available."
      totalAndEnRouteVillagersHeader:
        text: "Total + En Route Workers"
      totalAndEnRouteVillagers:
        text: "How many villagers are currently assigned, plus how many are en route to take or quit this job."

  resourceManagement:
    button:
      tooltip:
        sortingHeader:
          text: "Sorting"
        sorting:
          text: "Change the totals display filter."
        makeHeader:
          text: "Make"
        make:
          text: "Make this many {resourceName} as soon as possible."
        maintainHeader:
          text: "Maintain"
        maintain:
          text: "Maintain this many {resourceName} village wide, including what is currently equipped or on the ground."
        previousCategoryHeader:
          text: "Previous Category"
        nextCategoryHeader:
          text: "Next Category"
          
    tooltip:
      makeInfinityHeader:
        text: "Make Infinity"
      maintainInfinityHeader:
        text: "Maintain Infinity"
      requiresResource:
        text: "Requires {resourceName}"
  
    header:
      resourceManagement:
        text: "Resource Management"
      make:
        text: "Make"
      maintain:
        text: "Maintain"
      
    sort:
      total:
        text: "Total"
      equip:
        text: "Equip"
      carry:
        text: "Carry"
      ground:
        text: "Ground"
      stored:
        text: "Stored"
        
    producedByWaterSource:
      text: "$BLA2Produced by Water Source"
    rareDrop:
      text: "$YEL2Rare {resourceOrMonsterType} Drop"
    monsterDrop:
      text: "$BLA2Monster Drop Only"
    requiresWaterSource:
      text: "$BLA2Requires Water Source"
    requiresBuilding:
      text: "$BLA2Requires {buildingName}"

  migration:
    button:
      tooltip:
        increaseMigrantsToSendHeader:
          text: "Increase Migrants To Send"
        increaseMigrantsToSend:
          text: "Increase how many villagers to send to this region. Villagers will prepare to leave in the morning and depart midday. If you set this after the morning villagers will not leave until the following day."
        decreaseMigrantsToSendHeader:
          text: "Decrease Migrants To Send"
        decreaseMigrantsToSend:
          text: "Decrease how many villagers you would like to send to this region."
          
    tooltip:
      migratableVillagersHeader:
        text: "Migratable Villagers"
      migratableVillagers:
        text: "How many villagers that can migrate to other regions. Only young, healthy adult villagers can migrate. You must maintain a total local population of at least 15 to be able to migrate."
      maximumDailyMigrationHeader:
        text: "Maximum Daily Migration"
      maximumDailyMigration:
        text: "How many villagers can migrate from the village per day. Increase this by upgrading you migration way station, or building a new one."
      readyToMigrateHeader:
        text: "Ready To Migrate"
      readyToMigrate:
        text: "How many villagers have prepared to migrate in the morning, and will leave the region at midday."
      totalMigratedTodayHeader:
        text: "Total Migrated Today"
      totalMigratedToday:
        text: "How many villagers have left the region today. Villagers will only leave during midday."
      regionsTotalPopulationHeader:
        text: "Region's Total Population"
      regionsTotalPopulation:
        text: "This region's total current population, not counting already en route nomads."
      enRouteMigrantsHeader:
        text: "En Route Migrants"
      enRouteMigrants:
        text: "The total amount of migrants from all villages nearby currently en route to this region."
    
    availableVillagers:
      text: "Available Villagers"
    regionList:
      text: "Region List"
    regionLost:
      text: "$RED0Region Lost to Corruption!"
    send:
      text: "$YEL1Send"

  courier:
    button:
      tooltip:
        sortingHeader:
          text: "Sorting"
        sorting:
          text: "Change the totals display filter."
        sendNowHeader:
          text: "Send Now"
        sendNow:
          text: "Send this many {resourceName} in addition to the daily amount set, as soon as possible. Courier Golems will only leave before the evening."
        sendDailyHeader:
          text: "Send Daily"
        sendDaily:
          text: "Send this many {resourceName} every day, if available. Courier Golems will only leave before the evening. The number will turn red if they fail to meet their daily quota, yellow if in progress, and green if completed."
        previousCategoryHeader:
          text: "Previous Category"
        nextCategoryHeader:
          text: "Next Category"
        previousRegionHeader:
          text: "Previous Region"
        previousRegion:
          text: "Change the region you want to send resources to."
        nextRegionHeader:
          text: "Next Region"
        nextRegion:
          text: "Change the region you want to send resources to."
        
    tooltip:
      parkedCourierGolemsHeader:
        text: "Parked Courier Golems"
      parkedCourierGolems:
        text: "How many courier golems are parked and ready to deliver resources."
      sendInfinityHeader:
        text: "Send Infinity"
         
    header:
      selectedRegion:
        text: "Selected Region"
      send:
        text: "Send"
      daily:
        text: "Daily"
         
    sort:
      total:
        text: "Total"
      equip:
        text: "Equip"
      carry:
        text: "Carry"
      ground:
        text: "Ground"
      stored:
        text: "Stored"
        
    regionLost:
      text: "$RED0Region lost to corruption!~Can not send resources."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Main Menu Panel
# rtr.gui.states.playstate.MainMenuPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playMainMenuPanel:
  comment: "Play State - Main Menu Panel"
  javaClass: "rtr.gui.states.playstate.MainMenuPanel.java"
  
  button:
    settings:
      text: "Settings"
    saveAndExit:
      text: "Save and Exit"
    'yes':
      text: "Yes!"
      
  header:
    text: "Main Menu"
  saveAndExitWarningMessage:
    text: "$GRE1ARE YOU SURE?"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Overlay (Mouse Tooltips)
# rtr.gui.states.playstate.Overlay.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playOverlay:
  comment: "Play State - Overlay"
  javaClass: "rtr.gui.states.playstate.Overlay.java"
  
  slots:
    outOfAncillarySlotsNoCamp:
      text: "Out of ancillary slots~Build a $GRE0Camp!"
    outOfAncillarySlotsUpgrade:
      text: "Out of ancillary slots~Upgrade your $GRE0{castleName}"
    outOfAncillarySlots:
      text: "Out of ancillary slots!"
    outOfBuildingSlotsNoCamp:
      text: "Out of building slots~Build a $GRE0Camp!"
    outOfBuildingSlotsUpgrade:
      text: "Out of building slots~Upgrade your $GRE{castleName}0~$WHI0or build an $GRE0Ancillary"
    outOfBuildingSlots:
      text: "Out of building slots!"
  
  roads:
    canNotImprove:
      text: "Can not improve"
    roadCostFree:
      text: "{nextRoadName}~$GRE1Cost: FREE"
    roadCost:
      text: "{nextRoadName}~$YEL1Cost: 1 {resourceName}"
  
  general:
    cancelAction:
      text: "Press $GRE1{shortcutKey} $WHI0or the $GRE1MIDDLE MOUSE BUTTON$WHI0 to cancel current action and return to select mode."
    unassignWork:
      text: "Hold $GRE1{shortcutKey} $YEL1to unassign."
    deleteObjects:
      text: "Hold $GRE1{shortcutKey} $YEL1to delete object."
    castFree:
      text: "Hold $GRE1{shortcutKey} $YEL1to cast for free."
    nothingToGrab:
      text: "Nothing to grab."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Pause Banner
# rtr.gui.states.playstate.PauseBanner.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playPauseBanner:
  comment: "Play State - Pause Banner"
  javaClass: "rtr.gui.states.playstate.PauseBanner.java"
  
  header:
    text: "$YEL0PAUSED"
  body:
    text: "PRESS $GRE1{shortcutKey}$WHI0 TO RESUME."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Population List Panel"
# rtr.gui.states.playstate.PopulationListPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playPopulationListPanel:
  comment: "Play State - Population List Panel"
  javaClass: "rtr.gui.states.playstate.PopulationListPanel.java"
  
  button:
    tooltip:
      previousSortFilterHeader:
        text: "Previous Sort Filter"
      nextSortFilterHeader:
        text: "Next Sort Filter"
      firstPageHeader:
        text: "First Page"
      lastPageHeader:
        text: "Last Page"
      pageDownHeader:
        text: "Page Down"
      pageUpHeader:
        text: "Page Up"

  tooltip:
    totalAdultsHeader:
      text: "Total Adults"
    totalAdults:
      text: "Total able bodied adult villagers who can take jobs and work."
    totalEldersHeader:
      text: "Total Elders"
    totalElders:
      text: "Total elders, who have retired and can no longer work."
    totalChildrenHeader:
      text: "Total Children"
    totalChildren:
      text: "Total children who are not quite old enough to work yet."
    totalGolemsHeader:
      text: "Total Golems"
    totalGolems:
      text: "Total golems currently in the village."
    averageHappinessHeader:
      text: "Average Happiness"
    averageHappiness:
      text: "The average happiness levels of the entire village."
    averageAgeHeader:
      text: "Average Age"
    averageAge:
      text: "The average age of the entire village."
    averageHungerHeader:
      text: "Average Hunger"
    averageHunger:
      text: "The average hunger levels of the entire village."
    averageThirstHeader:
      text: "Average Thirst"
    averageThirst:
      text: "The average thirst levels of the entire village."
    averageEnergyHeader:
      text: "Average Energy"
    averageEnergy:
      text: "The average energy levels of the entire village."
    totalHomlessHeader:
      text: "Total Homeless"
    totalHomless:
      text: "The amount of villagers in the village who have nowhere to live. Build or upgrade your houses to give your villages some more space to live in."
    totalPregnantHeader:
      text: "Total Pregnant"
    totalPregnant:
      text: "The amount of villagers in the village who are pregnant."
    totalMatesHeader:
      text: "Has Mate"
    totalMates:
      text: "The amount of villagers in the village who have a partner."
    totalAnimalsHeader:
      text: "Has Animal"
    totalAnimals:
      text: "The amount of villagers in the village who have a pet."
    unemployedVillagersHeader:
      text: "Unemployed Villagers"
    unemployedVillagers:
      text: "How many adult villagers are available to work, but have not been assigned a job."
    averageAgeHeader:
      text: "Average Age"
    averageAge:
      text: "The average age of all villagers."
    averageLifeExpectancyHeader:
      text: "Average Life Expectancy"
    averageLifeExpectancy:
      text: "The average life expectancy of the entire village. Increase this by taking better care of your villagers, keeping them happy and healthy!"
    homelessHeader:
      text: "Homeless"
    homeless:
      text: "This villager has no home. You may have a housing shortage, but if they are a new arrival or you just built new housing, it may take a minute for them to find it."
    pregnantHeader:
      text: "Pregnant"
    pregnant:
      text: "This (hopefully female) villager is with child and will likely give birth in a few days from conception."
    hasMateHeader:
      text: "Has Mate"
    hasMate:
      text: "This villager has a partner somewhere in the village."
    ownerHeader:
      text: "Owner"
    owner:
      text: "This villager own an animal, or this animal has an owner."
    unemployedHeader:
      text: "Unemployed"
    unemployed:
      text: "This villager currently does not have a job. But if you've recently requested more workers, they may already be en route to take one."
    levelHeader:
      text: "Level"
    level:
      text: "Villagers level up by doing all kinds of tasks, like working, fighting and even mating!"
    ageHeader:
      text: "Age"
    age:
      text: "Their age will tick up once for every full day that has passed."
  
  sort:
    all:
      text: "$GRE1All"
    villagers:
      text: "$GRE1Villagers"
    adults:
      text: "$GRE1Adults"
    elders:
      text: "$GRE1Elders"
    children:
      text: "$GRE1Children"
    golems:
      text: "$GRE1Golems"
    animals:
      text: "$GRE1Animals"
  
  header:
    text: "Population List"
  pageList:
    text: "Population List     Pg: {currentPage} of {totalPages}"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Population Totals Panel"
# rtr.gui.states.playstate.PopulationTotalsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playPopulationTotalsPanel:
  comment: "Play State - Population Totals Panel"
  javaClass: "rtr.gui.states.playstate.PopulationTotalsPanel.java"
  
  tooltip:
    totalPopulationHeader:
      text: "Total Population"
    totalHomeOccupancyHeader:
      text: "Total Home Occupancy"
    totalHomeOccupancy:
      text: "The total amount of living space currently being used used, as well as the total available you have in your homes."
    totalBarracksOccupancyHeader:
      text: "Total Barracks Occupancy"
    totalBarracksOccupancy:
      text: "The total amount of living space currently being used used, as well as the total available you have in your barracks."
    totalAncillariesHeader:
      text: "Total Ancillaries"
    totalAncillaries:
      text: "The total amount of ancillaries, and how many ancillary slots remains. Increase your ancillary slots by upgrading your camp/castle!"
    totalBuildingsHeader:
      text: "Total Buildings"
    totalBuildings:
      text: "The total amount of buildings, and how many building slots remains. Does not count walls or ancillaries. Increase your build slots by building additional ancillaries!"
    totalChildrenHeader:
      text: "Total Children"
    totalChildren:
      text: "Total children who are not quite old enough to work yet."
  
  header:
    text: "Population"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Problem Panel
# rtr.gui.states.playstate.ProblemPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playProblemPanel:
  comment: "Play State - Problem Panel"
  javaClass: "rtr.gui.states.playstate.ProblemPanel.java"
  
  header:
    text: "Problem Panel"
  minorIssues:
    text: "$YEL1{amount} Minor Issues"
  moderateIssues:
    text: "$ORA1{amount} Moderate Issues"
  majorIssues:
    text: "$RED1{amount} Major Issues"

  problem:
    noFood:
      text: "* $RED1There is no harvested food."
    noWater:
      text: "* $RED1There is no drinkable water."
    noHomes:
      text: "* $RED1There are no homes."
    lowVillagers:
      text: "* $ORA1There are very few villagers."
    tooMuchConstruction:
      text: "* $YEL1Too many buildings are under construction."
    dangerouslyCold:
      text: "* $RED1It is dangerously cold outside."
    veryCold:
      text: "* $YEL1It is very cold outside."
    dangerouslyHot:
      text: "* $RED1It is dangerously hot outside."
    veryHot:
      text: "* $YEL1It is very hot outside."
    recentlyDied:
      text: "* $YEL1{amount} villager recently died."
    recentlyDiedPlural:
      text: "* $YEL1{amount} villagers recently died."
    villagersHungry:
      text: "* $ORA1{amount} villager is hungry."
    villagersHungryPlural:
      text: "* $ORA1{amount} villagers are hungry."
    villagersStarving:
      text: "* $RED1{amount} villager is starving."
    villagersStarvingPlural:
      text: "* $RED1{amount} villagers are starving."
    villagersThirsty:
      text: "* $ORA1{amount} villager is thirsty."
    villagersThirstyPlural:
      text: "* $ORA1{amount} villagers are thirsty."
    villagersDehydrated:
      text: "* $RED1{amount} villager is dehydrated."
    villagersDehydratedPlural:
      text: "* $RED1{amount} villagers are dehydrated."
    villagersHomeless:
      text: "* $YEL1{amount} villager is homeless."
    villagersHomelessPlural:
      text: "* $YEL1{amount} villagers are homeless."
    villagersConfused:
      text: "* $YEL1{amount} villager is confused."
    villagersConfusedPlural:
      text: "* $YEL1{amount} villagers are confused."
    villagersInCombat:
      text: "* $ORA1{amount} villager is in combat."
    villagersInCombatPlural:
      text: "* $ORA1{amount} villagers are in combat."
    villagersOutside:
      text: "* $YEL1{amount} villager is outside the village."
    villagersOutsidePlural:
      text: "* $YEL1{amount} villagers are outside the village."
    villagersCold:
      text: "* $YEL1{amount} villager is cold."
    villagersColdPlural:
      text: "* $YEL1{amount} villagers are cold."
    villagersFreezing:
      text: "* $RED1{amount} villager is freezing."
    villagersFreezingPlural:
      text: "* $RED1{amount} villagers are freezing."
    villagersHot:
      text: "* $YEL1{amount} villager is hot."
    villagersHotPlural:
      text: "* $YEL1{amount} villagers are hot."
    villagersOverHeating:
      text: "* $RED1{amount} villager is over heating."
    villagersOverHeatingPlural:
      text: "* $RED1{amount} villagers are over heating."
    villagersUnhappy:
      text: "* $YEL1{amount} villager is unhappy."
    villagersUnhappyPlural:
      text: "* $YEL1{amount} villagers are unhappy."
    villagersOnFire:
      text: "* $RED1{amount} villager is on fire."
    villagersOnFirePlural:
      text: "* $RED1{amount} villagers are on fire."
    noWorkers:
      text: "* $YEL1{amount} building has no workers."
    noWorkersPlural:
      text: "* $YEL1{amount} buildings have no workers."
    noAmmo:
      text: "* $ORA1{amount} tower has no energy or ammo."
    noAmmoPlural:
      text: "* $ORA1{amount} towers have no energy or ammo."
    noFood:
      text: "* $ORA1{amount} home has no food."
    noFoodPlural:
      text: "* $ORA1{amount} homes have no food."
    buildingsDamaged:
      text: "* $ORA1{amount} building is damaged."
    buildingsDamagedPlural:
      text: "* $ORA1{amount} buildings are damaged."
    monstersInVillage:
      text: "* $ORA1{amount} monster is in the village."
    monstersInVillagePlural:
      text: "* $ORA1{amount} monsters are in the village."
    monstersAttackingBuildings:
      text: "* $ORA1{amount} monster is attacking a building."
    monstersAttackingBuildingsPlural:
      text: "* $ORA1{amount} monsters are attacking a building."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Resource and Influence Bar"
# rtr.gui.states.playstate.ResourceAndInfluenceBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playResourceAndInfluenceBar:
  comment: "Play State - Resource and Influence Bar"
  javaClass: "rtr.gui.states.playstate.ResourceAndInfluenceBar.java"
  
  button:
    tooltip:
      sortingHeader:
        text: "Sorting"
      sorting:
        text: "Change the totals display filter."
        
  tooltip:
    totalGoldCoinsHeader:
      text: "Total Gold Coins"
    totalGoldCoins:
      text: "Total amount of gold coins in the entire village."
    totalWaterHeader:
      text: "Total Water"
    totalWater:
      text: "Total drinkable water in all buildings combined that can store it, like rain catchers, houses, and wells. Does not include dirty water."
    totalEnergyHeader:
      text: "Total Energy"
    totalEnergy:
      text: "Total energy in all buildings combined that can store it, like essence collectors, golem combobulators, and magic towers."
    totalInfluenceHeader:
      text: "Influence"
    totalInfluence:
      text: "The total influence you currently have to cast spells with. Influence is refilled slowly over time, or by hovering your hand over loose essence in the world. You can increase you maximum influence by raising your village population."
  
  sort:
    total:
     text: "Total"
    equip:
      text: "Equip"
    carry:
      text: "Carry"
    ground:
      text: "Ground"
    stored:
      text: "Stored"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Selected Mob Panel
# rtr.gui.states.playstate.SelectedMobPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playSelectedMobPanel:
  comment: "Play State - Selected Mob Panel"
  javaClass: "rtr.gui.states.playstate.SelectedMobPanel.java"
  
  tooltip:
    hitPointsHeader:
      text: "Hit Points"
    hitPoints:
      text: "Maximum hit points are based on their total strength."
    hungerHeader:
      text: "Hunger"
    hunger:
      text: "If their hunger gets to critical levels, they will slowly take damage as they die of starvation. Will drop slightly faster when in combat or working."
    thirstHeader:
      text: "Thirst"
    thirst:
      text: "If their thirst gets to critical levels, they will slowly take damage as they die of dehydration. Will drop slightly faster when in combat, working or overheating."
    happinessHeader:
      text: "Happiness"
    happiness:
      text: "Low happiness will effect their work performance and life expectancy. Depending on the type of creature this can be increased by meeting their basic needs for food, water, housing, social and other statistics."
    bodyTemperatureHeader:
      text: "Body Temperature"
    bodyTemperature:
      text: "If their body temperature gets too extreme in either direction they slow down, and could even start taking damage."
    hasMateHeader:
      text: "Has Mate"
    hasMate:
      text: "This creature has a partner somewhere in the village."
    ownerHeader:
      text: "Owner"
    owner:
      text: "This creature owns an animal, or this animal has an owner."
    pregnantHeader:
      text: "Pregnant"
    pregnant:
      text: "This (hopefully female) creature is with child and will likely give birth in a few days from conception."
    levelHeader:
      text: "Level"
    level:
      text: "Creatures level up by doing all kinds of tasks, like working, fighting and even mating!"
    ageHeader:
      text: "Age"
    age:
      text: "Their age will tick up once for every full day that has passed."
    lifeExpectancyHeader:
      text: "Life Expectancy"
    lifeExpectancy:
      text: "How long this creature is expected to live, tied to constitution. When basic needs are not met or the more struggles, illness and injuries they have in their life, the faster constitution will drop, and in turn their life expectancy."
    immortalHeader:
      text: "Immortal"
    immortal:
      text: "This creature will never die of old age."
    energyHeader:
      text: "Energy"
    energy:
      text: "If energy drops too low, they will go find a place to rest. Energy drops slightly faster when they're working or fighting."
    lifelongConstitutionHeader:
      text: "Lifelong Constitution"
    lifelongConstitution:
      text: "The overall constitution of the creature, tied to life expectancy. When basic needs are not met or the more struggles, illness and injuries they have in their life, the faster constitution will drop, and in turn their life expectancy."
    socialHeader:
      text: "Social"
    social:
      text: "Low social will cause happiness to drop. But if there are creatures nearby to chat with, they will take a break and chat to increasing their social. Elders will share their wisdom while chatting, giving the recipient experience."
    strengthHeader:
      text: "Strength"
    strength:
      text: "Primary stat for determining their attack damage, and secondary for attack speed, also increases hit points, how many resources they can carry and work speeds."
    dexterityHeader:
      text: "Dexterity"
    dexterity:
      text: "Primary stat for determining their attack speed, and secondary for attack damage, also increases movement and work speeds."
    intelligenceHeader:
      text: "Intelligence"
    intelligence:
      text: "Generally improves all work speeds and combat efficiency, and boosts the amount of experience gained doing tasks."
    experienceBarHeader:
      text: "Experience Bar"

  inventorySlot:
    head:
      text: "Head Slot"
    chest:
      text: "Chest Slot"
    tool:
      text: "Tool Slot"
    weapon:
      text: "Weapon Slot"
    shield:
      text: "Shield Slot"
    recovery:
      text: "Recovery Slot"
    water:
      text: "Water Slot"
    food:
      text: "Food Slot"
    rangedWeapon:
      text: "Ranged Weapon Slot"
    rangedWeaponAmmo:
      text: "Ranged Weapon Ammo Slot"
            
  boostedMobPrefix:
    text: "The $CYA1Boosted$WHI0 {mobName}!"
  mobNamePrefix:
    text: "The {mobName}"
  mobJobNamePrefix:
    text: "The {mobJobName}"
  pregnant:
    text: "$BLU1Pregnant"
  damageResistance:
    text: "Damage Resistance"
  damageVulnerabilities:
    text: "Damage Vulnerabilities"
  meleeDamage:
    text: "Melee Damage: $GRE1{damageType}"
  rangedDamage:
    text: "Ranged Damage: $GRE1{damageType}"
  
  statusEffect:
    blighted:
      comment: "Do not remove the trailing comma and space. Will mess up formatting."
      text: "$YEL1Blighted, "
    poison:
      comment: "Do not remove the trailing comma and space. Will mess up formatting."
      text: "$GRE1Poisoned, "
    dysentery:
      comment: "Do not remove the trailing comma and space. Will mess up formatting."
      text: "$GRE1Has dysentery, "
    onFire:
      comment: "Do not remove the trailing comma and space. Will mess up formatting."
      text: "$RED1On Fire, "
    frozen:
      comment: "Do not remove the trailing comma and space. Will mess up formatting."
      text: "$BLU1Frozen, "
    conjuntion:
      comment: "This pops up in the second to last status entry, when statuses are stacked. Don't forget the trailing space."
      text: "$WHI0 and "

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Selected Object Panel
# rtr.gui.states.playstate.SelectedObjectPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playSelectedObjectPanel:
  comment: "Play State - Selected Object Panel"
  javaClass: "rtr.gui.states.playstate.SelectedObjectPanel.java"
  
  tooltip:
    buildRangeHeader:
      text: "Build Range"
    buildRange:
      text: "The build range this building generates from its center, flood filling out in all directions."
    landDesirabilityHeader:
      text: "Land Desirability"
    landDesirability:
      text: "How much this building increases land desirability within the build range of the building. Villagers are naturally attracted to higher desirability locations when they have no active work to do in the village."
    corruptionResistanceHeader:
      text: "Corruption Resistance"
    corruptionResistance:
      text: "How much this building increases corruption resistance around it. Corruption resistance pushes back or stops the spread of corruption around the building."
    providedDailyMigrationsHeader:
      text: "Provided Daily Migrations"
    providedDailyMigrations:
      text: "Increases the amount of villagers you can prepare for migration in the morning every day."
    providedWorkersHeader:
      text: "Provided Workers"
    providedWorkers:
      text: "How many additional job slots this building provides for the jobs it can do."
    desiredAndMaxWorkersHeader:
      text: "Desired / Max Workers"
    desiredAndMaxWorkers:
      text: "How many villagers are requested for this job and how many job slots are available. If the numbers turns red, you've requested more workers than villagers available."
    totalPlusEnrouteWorkersHeader:
      text: "Total + En route Workers"
    totalPlusEnrouteWorkers:
      text: "How many villagers are currently assigned, plus how many are en route to take or quit this job."
    unemployedVillagersHeader:
      text: "Unemployed Villagers"
    unemployedVillagers:
      text: "How many adult villagers are available to work, but have not been assigned a job."
    occupancyHeader:
      text: "Occupancy"
    occupancy:
      text: "How many villagers are living in this building, as well as the total amount of living space this building supplies."
    barracksOccupancyHeader:
      text: "Barracks Occupancy"
    barracksOccupancy:
      text: "How many guards are living in this building, as well as the total amount of living space this building supplies."
    currentAndMaxStorageHeader:
      text: "Current / Max Storage"
    currentAndMaxStorage:
      text: "How many resources are currently being stored in this building, as well as the maximum amount of resources this building can store."
    buildingResourceValueHeader:
      text: "Building Resource Value"
    buildingResourceValue:
      text: "How many resources were used in construction of this building. Dismantling this building will provide about 50% of the building resource value returned to the village."
    hitPointsHeader:
      text: "Hit Points"
    hitPoints:
      text: "Maximum hit points are based on the buildings total building resource value. More complicated buildings have higher hit points."
    energyHeader:
      text: "Energy"
    energy:
      text: "The amount of stored energy this building has, as well as the maximum it can store."
    waterHeader:
      text: "Water"
    water:
      text: "The amount of clean drinking water this building has."
    goldCoinsHeader:
      text: "Gold Coins"
    goldCoins:
      text: "The amount of gold this building has."
    dirtyWaterHeader:
      text: "Dirty Water"
    dirtyWater:
      text: "The amount of dirty water this building has."
    chargeHeader:
      text: "Charge"
    charge:
      text: "How charged this building is. Most buildings charge slowly by consuming energy, but others may charge on their own for no cost."
    ammoHeader:
      text: "Ammo"
    ammo:
      text: "The amount of ammo the building currently has loaded, as well as the maximum amount it can load. This does not count unloaded ammo that is in the building's storage."
    resourceStores:
      text: "{resourceName} Stores"
    resourceValues:
      text: "{resourceName} Values"
          
  button:
    reclaim:
      text: "Reclaim"
    upgrade:
      text: "Upgrade"
    startUpgrade:
      text: "Start Upgrade"
    back:
      text: "Back"
    'yes':
      text: "Yes"
    'no':
      text: "No"
    
    tooltip:
      reduceWorkersHeader:
        text: "Reduce Workers"
      reduceWorkers:
        text: "Reduce workers for this job, freeing them up to work elsewhere."
      requestWorkersHeader:
        text: "Request Workers"
      requestWorkers:
        text: "Request more workers to take this job. If the numbers turns red, you've requested more workers than villagers available."
      topPriorityHeader:
        text: "Top Priority"
      topPriority:
        text: "Sets the construction priority of the building the top of the list. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      increasePriorityHeader:
        text: "Increase Priority"
      increasePriority:
        text: "Increase the construction priority of the building. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      decreasePriorityHeader:
        text: "Decrease Priority"
      decreasePriority:
        text: "Decrease the construction priority of the building. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      lastPriorityHeader:
        text: "Last Priority"
      lastPriority:
        text: "Sets the construction priority of the building the bottom of the list. The higher it is on the list the more important it will be to the workers, usually receiving construction resources first and being built sooner."
      pauseBuildingHeader:
        text: "Pause Building"
      pauseBuilding:
        text: "Pausing this building will stop most village interactions with it."
      resumeBuildingHeader:
        text: "Resume Building"
      dismantleBuildingHeader:
        text: "Dismantle Building"
      dismantleBuilding:
        text: "Dismantle the building and recover some of its original construction costs."
      buildingPriorityHeader:
        text: "Building Priority"
      buildingPriority:
        text: "Current construction priority level of the building, lower numbers are a higher priority."
      reclaimHeader:
        textHeader: "Reclaim"
      reclaim:
        text: "Reclaim this abandoned building. Usually, reclaiming a building costs about half as much resources as building a new one from scratch."
      upgradeHeader:
        text: "Upgrade"
      upgrade:
        text: "Upgrade this building to the next level. The building will still be functional while the villagers are upgrading it."

  bottomPriority:
    text: "BOT"
  topPriority:
    text: "TOP"
  notInRange:
    text: "$GRE1(NOT IN RANGE)"
  dismantling:
    text: "$GRE1(DISMANTLING)"
  dismantlingWarning:
    text: "$RED0Are you sure you want to dismantle this building? You can only recover about$GRE1 50%$RED0 of the total resources on average.~$RED1THIS CAN NOT BE UNDONE"
  staticTowerDamageOverride:
    text: "Damage"
  staticTowerDamageOverrideAmount:
    text: "$GRE1Electric $RED0(3-8)"
  chargedDamage:
    text: "Charged Damage"
  damage:
    text: "Damage"
  unchargedDamage:
    text: "Uncharged Damage"
  globalBonusesHeader:
    text: "$CYA1Global Bonuses"
  globalSpeed:
    text: "$GRE0{amount}% $WHI0Global"
  buildingSpeed:
    text: "$GRE0{amount}% $WHI0Building"
  buildRoadSpeed:
    text: "$GRE0{amount}% $WHI0Build Road"
  dismantlingSpeed:
    text: "$GRE0{amount}% $WHI0Dismantling"
  clearingSpeed:
    text: "$GRE0{amount}% $WHI0Clearing"
  repairingSpeed:
    text: "$GRE0{amount}% $WHI0Repairing"
  repairRoadSpeed:
    text: "$GRE0{amount}% $WHI0Repair Road"
  farmingSpeed:
    text: "$GRE0{amount}% $WHI0Farming"
  medicWorkSpeed:
    text: "$GRE0{amount}% $WHI0Medic Work"
  harvestingSpeed:
    text: "$YEL1Harvest Speed"
  refiningSpeed:
    text: "$YEL1Refine Speed"
  homeBonusesHeader:
    text: "$CYA1Home Bonuses"
  sleepSpeedBoost:
    text: "$GRE0{amount}% $WHI0Sleep Speed"
  happinessBoost:
    text: "$GRE0{amount} $WHI0Happiness Boost"
  healthRegenerationBoost:
    text: "$GRE0{amount} $WHI0Health Regen"
  reclaimMessage:
    text: "Click $GRE1reclaim$WHI0 to rebuild~and use this building."
  reclaimMessageNoSlotsNoCamp:
    text: "Out of building slots. ~Build a $GRE0Camp or $GRE0Ancillary $WHI0~to claim this building."
  reclaimMessageNoSlots:
    text: "Out of building slots. ~Upgrade $GRE0{castleName}~$WHI0or build an $GRE0Ancillary $WHI0~to claim this building."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Selected Object Upgrade Panel
# rtr.gui.states.playstate.SelectedObjectUpgradePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playSelectedObjectUpgradePanel:
  comment: "Play State - Selected Object Upgrade Panel"
  javaClass: "rtr.gui.states.playstate.SelectedObjectUpgradePanel.java"
  
  header:
    constructionRequirements:
      text: "Construction Requirements"
    requiredSupport:
      text: "Required Support"
    recommendedSupport:
      text: "Recommended Support"
    canStore:
      text: "Can Store"
    globalBonuses:
      text: "$CYA1Global Bonuses"
    homeBonuses:
      text: "$CYA1Home Bonuses"
    defensiveTower:
      text: "Defensive Tower"
      
  constructionRequirements:
    text: "Requires $RED1{buildingName}$WHI0 for $RED1{resourceName}"
  supportConjuntion:
    comment: "In some cases, some buildings may require or support multiple buildings, this is the conjuntion portion of the string."
    text: "$WHI0 or $RED0"
  maximumStorage:
    text: "Maximum Storage: $GRE1+{amount}"
  energy:
    text: "$YEL1+{amount} Energy"
  globalSpeed:
    text: "$GRE0+{amount}% $WHI0Global"
  buildingSpeed:
    text: "$GRE0+{amount}% $WHI0Building"
  buildRoadSpeed:
    text: "$GRE0+{amount}% $WHI0Build Road"
  dismantlingSpeed:
    text: "$GRE0+{amount}% $WHI0Dismantling"
  clearingSpeed:
    text: "$GRE0+{amount}% $WHI0Clearing"
  repairingSpeed:
    text: "$GRE0+{amount}% $WHI0Repairing"
  repairRoadSpeed:
    text: "$GRE0+{amount}% $WHI0Repair Road"
  farmingSpeed:
    text: "$GRE0+{amount}% $WHI0Farming"
  medicWorkSpeed:
    text: "$GRE0+{amount}% $WHI0Medic Work"
  harvestSpeed:
    text: "$YEL1Harvest Speed"
  refineSpeed:
    text: "$YEL1Refine Speed"
  sleepSpeedPlus:
    text: "$GRE0{amount}% $WHI0Sleep Speed"
  sleepSpeedMinus:
    text: "$RED0{amount}% $WHI0Sleep Speed"
  happinessBoostPlus:
    text: "$GRE0+{amount} $WHI0Happiness Boost"
  happinessBoostMinus:
    text: "$RED0{amount} $WHI0Happiness Boost"
  healthRegenerationPlus:
    text: "$GRE0+{amount} $WHI0Health Regeneration"
  healthRegenerationMinus:
    text: "$RED0{amount} $WHI0Health Regeneration"
  staticTowerDamageOverride:
    text: "Damage: $GRE1Electric (3-8)"
  chargedDamage:
    text: "Charged Damage: $GRE1{damageType} (+{damageMinimum}-{damageMaximum})"
  damage:
    text: "Damage: $GRE1{damageType} (+{damageMinimum}-{damageMaximum})"
  unchargedDamage:
    text: "Uncharged Damage: {damageType} $RED0(+{damageMinimum}-{damageMaximum})"
  ammo:
    text: "Ammo Per Bundle: $GRE1+{amount}"
  energyPerShot:
    text: "Energy Per Shot: $GRE1+{amount}"
  reloadTime:
    text: "Reload Time: $GRE1+{amount}"
  firingRange:
    text: "Firing Range: $GRE1+{amount}"
  canSpawnCreatures:
    text: "Can Spawn Creatures"
  spawnsMob:
    text: "Spawns $GRE1{mobName}"
  maximumSpawns:
    text: "Maximum Spawns: $GRE1+{amount}"
  spawnNeedsResourcesAndEnergy:
    text: "Needs $GRE1{resourceName}$WHI0 and $GRE1+{amount} Energy$WHI0 to Spawn"
  spawnNeedsEnergy:
    text: "Needs $GRE1+{amount} Energy $WHI0to Spawn"
  spawnNeedsResources:
    text: "Needs $GRE1{resourceName}$WHI0 to Spawn"
  rangeGenerated:
    text: "Range Generated: $GRE1+{amount}"
  desirability:
    text: "Desirability: $GRE1+{amount}"
  corruptionResistance:
    text: "Corruption Resistance: $GRE1+{amount}"
  guardHousingCapacity:
    text: "Guard Housing Capacity: $GRE1+{amount}"
  housingCapacity:
    text: "Housing Capacity: $GRE1+{amount}"
  workersSlots:
    text: "Workers Slots: $GRE1+{amount} {mobJobName}"
  buildingSlotsProvided:
    text: "Building Slots Provided: $GRE1+{amount}"
  acceptsEssence:
    text: "Accepts Essence From Collectors"
  canCollectRawEssence:
    text: "Can Collect Raw Essence"
  consumesCrylithium:
    text: "Consumes Crylithium for Fuel"
  canBuildRoads:
    text: "Can Build Roads"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Spell Bar
# rtr.gui.states.playstate.SpellBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playSpellBar:
  comment: "Play State - Spell Bar"
  javaClass: "rtr.gui.states.playstate.SpellBar.java"
  
  header:
    text: "Change Spell"
  tooltip:
    text: "Open the full spell list and change the spell in slot {slotNumber}."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Statistics Panel
# rtr.gui.states.playstate.StatisticsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playStatisticsPanel:
  comment: "Play State - Statistics Panel"
  javaClass: "rtr.gui.states.playstate.StatisticsPanel.java"
  
  button:
    primary:
      villagers:
        text: "Villagers"
      animals:
        text: "Animals"
      monsters:
        text: "Monsters"
      buildings:
        text: "Buildings"
      defenses:
        text: "Defenses"
      resources:
        text: "Resources"
      magicAndEnergy:
        text: "Magic and Energy"
      other:
        text: "Other"
        
    villagers:
      total:
        text: "Total"
      gender:
        text: "Gender"
      immigration:
        text: "Immigration"
      reproduction:
        text: "Reproduction"
      deaths:
        text: "Deaths"
      needs:
        text: "Needs"
      catjeetHired:
        text: "Catjeet Hired"
      nomadsJoined:
        text: "Nomads Joined"
      nomadsVisited:
        text: "Nomads Visited"
      births:
        text: "Births"
      grownUp:
        text: "Grown Up"
      coitus:
        text: "Coitus"
      pregnancies:
        text: "Pregnancies"
      newPregnancies:
        text: "New Pregnancies"
      averageHunger:
        text: "Average Hunger"
      averageThirst:
        text: "Average Thirst"
      averageEnergy:
        text: "Average Energy"
      averageHappiness:
        text: "Average Happiness"
    
    animals:
      total:
        text: "Total"
      gender:
        text: "Gender"
      domesticated:
        text: "Domesticated"
      deaths:
        text: "Deaths"
      needs:
        text: "Needs"
      averageHunger:
        text: "Average Hunger"
      averageThirst:
        text: "Average Thirst"
      averageEnergy:
        text: "Average Energy"
      averageHappiness:
        text: "Average Happiness"
        
    buildings:
      totalBuildings:
        text: "Total"
      builtBuildings:
        text: "Built"
      upgradedBuildings:
        text: "Upgraded"
      destroyedBuildings:
        text: "Destroyed"
      dismantledBuildings:
        text: "Dismantled"
        
    defenses:
      totalDefense:
        text: "Towers"
      combobulators:
        text: "Combobulators"
      golems:
        text: "Golems"
      guards:
        text: "Guards"
      walls:
        text: "Walls"
          
    monsters:
      totalCorruption:
        text: "Total Corruption"
      spreadAmount:
        text: "Spread Amount"
      buildings:
        text: "Buildings"
      drones:
        text: "Total Drones"
      spawned:
        text: "Monsters Spawned"
      killed:
        text: "Killed"
        
    resources:
      totalResources:
        text: "Total"
      productionRate:
        text: "Production Rate"
      foodAndWater:
        text: "Food and Water Rate"
    
    magicAndEnergy:
      essenceGenerated:
        text: "Essence Generated"
      essenceDecayed:
        text: "Essence Decayed"
      energy:
        text: "Energy"
      influenceSpent:
        text: "Influence Spent"
      influenceGenerated:
        text: "Influence Generated"
    
    filter:
      all:
        text: "All"
      previousPage:
        text: "Previous Page"
      nextPage:
        text: "Next Page"
      previousCategory:
        text: "Previous Category"
      nextCategory:
        text: "Next Category"
    
    graph:
      dayBack:
        text: "Day Back"
      dayForward:
        text: "Day Forward"
      firstDay:
        text: "First Day"
      lastDay:
        text: "Last Day"

  descriptions:
    villagers:
      total:
        text: "The daily population count of the village."
      genderBarOne:
        text: "Male"
      genderBarTwo:
        text: "Female"
      gender:
        text: "The daily population count of each gender in the village."
      deaths:
        text: "How many villagers have died per day."
      catjeetHired:
        text: "How many Catjeet have been hired per day."
      nomadsJoined:
        text: "How many Nomads have joined the village per day."
      nomadsVisited:
        text: "How many Nomads have visited the region per day."
      births:
        text: "How many villagers have been born per day."
      grownUp:
        text: "How many villagers have grown into adults per day."
      coitus:
        text: "How many villagers attempted to reproduce per day."
      pregnancies:
        text: "How many total villagers are pregnant per day."
      newPregnancies:
        text: "How many villagers became pregnant per day."
      averageHunger:
        text: "The average hunger levels of the village per day."
      averageThirst:
        text: "The average thirst levels of the village per day."
      averageEnergy:
        text: "The average energy levels of the village per day."
      averageHappiness:
        text: "The average happiness levels of the village per day."
    
    animals:
      total:
        text: "The daily population count of the domesticated animals in the village."
      genderBarOne:
        text: "Male"
      genderBarTwo:
        text: "Female"
      gender:
        text: "The daily population count of each domesticated animal's gender in the village."
      domesticated:
        text: "How many animals were domesticated per day."
      deaths:
        text: "How many domesticated animals have died per day."
      averageHunger:
        text: "The average hunger levels of the domesticated animals per day."
      averageThirst:
        text: "The average thirst levels of the domesticated animals per day."
      averageEnergy:
        text: "The average energy levels of the domesticated animals per day."
      averageHappiness:
        text: "The average happiness levels of the domesticated animals per day."
    
    monsters:
      totalCorruptionBar:
        text: "Tiles"
      totalCorruption:
        text: "Total amount of tiles that are corrupted."
      spreadAmountBar:
        text: "Tiles"
      spreadAmount:
        text: "Total amount of additional tiles that have been corrupted per day."
      buildings:
        text: "Total amount of corrupted buildings on the map."
      drones:
        text: "Total amount of drones inside the corruption."
      spawned:
        text: "How many monsters have spawned per day."
      killed:
        text: "How many monsters have been killed per day."
    
    buildings:
      totalBuildingsBarOne:
        text: "Total Buildings"
      totalBuildingsBarTwo:
        text: "Available Slots"
      totalBuildings:
        text: "All buildings in the village that take up a building slot, and how many building slots are available."
      builtBuildings:
        text: "How many new buildings have been built per day. Does not count walls."
      upgradedBuildings:
        text: "How many buildings were upgraded per day."
      destroyedBuildings:
        text: "How many buildings were destroyed per day."
      dismantledBuildings:
        text: "How many buildings were dismantled per day."
    
    defenses:
      totalDefense:
        text: "Total count of all towers in the village."
      combobulatorsBarOne:
        text: "Total Golems"
      combobulatorsBarTwo:
        text: "Total Combobulators"
      combobulators:
        text: "Total count of all golem combobulators and golems."
      golems:
        text: "How many golems are working in or defending the village."
      guards:
        text: "All of the guards in the village."
      walls:
        text: "The total count of all walls in range of the village."
    
    resources:
      totalResources:
        text: "How many resources the village has total."
      productionRate:
        text: "A comparison of resources gained versus resources consumed in the village."
      foodAndWaterBarOne:
        text: "Food"
      foodAndWaterBarTwo:
        text: "Water"
      foodAndWater:
        text: "A comparison of all food and water resources produced versus consumed in the village."
    
    magicAndEnergy:
      essenceGenerated:
        text: "How much essence was created in the world per day."
      essenceDecayed:
        text: "How much essence decayed in the world per day, before it was used."
      energyBarOne:
        text: "Total Energy"
      energyBarTwo:
        text: "Maximum Energy"
      energy:
        text: "Total energy levels of the village per day, and the maximum amounts that can be stored."
      influenceSpent:
        text: "How much influence was spent casting spells per day."
      influenceGenerated:
        text: "How much influence was generated per day."

  header:
    statistics:
      text: "Statistics"
    category:
      text: "Category"
    villagers:
      text: "Villagers"
    immigration:
      text: "Immigration"
    reproduction:
      text: "Reproduction"
    needs:
      text: "Needs"
    animals:
      text: "Animals"
    buildings:
      text: "Buildings"
    defenses:
      text: "Defenses"
    monsters:
      text: "Monsters"
    resources:
      text: "Resources"
    magicAndEnergy:
      text: "Magic and Energy"
    other:
      text: "Other"
    configuration:
      text: "Configuration"

  filter:
    text: "Filter: $GRE0{mobOrResourceName}$WHI0 only"
  
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# System and Data Bar"
# rtr.gui.states.playstate.SystemAndDataBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playSystemAndDataBar:
  comment: "Play State - System and Data Bar"
  javaClass: "rtr.gui.states.playstate.SystemAndDataBar.java"
  
  button:
    tooltip:
      mainMenuHeader:
        text: "Main Menu ({shortcutKey})"
      mainMenu:
        text: "Exit the game, or change some settings."
      minimapHeader:
        text: "Minimap ({shortcutKey})"
      minimap:
        text: "View the entire map."
      statisticsHeader:
        text: "Statistics"
      statistics:
        text: "View various tracked game statistics."
      dataViewsHeader:
        text: "Data Views ({shortcutKey})"
      dataViews:
        text: "View various overlay data maps."
      problemPanelHeader:
        text: "Problem Panel ({shortcutKey})"
      problemPanel:
        text: "Lists several red flags in the village that may need taken care of."
      buildingListHeader:
        text: "Building List ({shortcutKey})"
      buildingList:
        text: "View a list of all buildings within the village, and rearrange construction priority."
      populationListHeader:
        text: "Population List ({shortcutKey})"
      populationList:
        text: "View the entire village's population, and overall status of the villagers."
      villagerEfficiencyHeader:
        text: "Village Efficiency"
      villagerEfficiency:
        text: "View the village's current overall work speed based on upgraded buildings, god perks, weather and other conditions."
      musicHeader:
        text: "Music"
      music:
        text: "View a list of all available music tracks, and change the current track if desired."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Tools Bar"
# rtr.gui.states.playstate.ToolsBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playToolsBar:
  comment: "Play State - Tools Bar"
  javaClass: "rtr.gui.states.playstate.ToolsBar.java"
  
  button:
    tooltip:
      pauseBuildingsHeader:
        text: "Pause Buildings ({shortcutKey})"
      pauseBuildings:
        text: "Pausing a building will stop most village interactions with it."
      dismantleBuildingsHeader:
        text: "Dismantle Buildings ({shortcutKey})"
      dismantleBuildings:
        text: "Dismantle a building and recover some of its original construction costs. $RED1This CAN NOT be undone!"
      digHeader:
        text: "Dig a Hole ({shortcutKey})"
      dig:
        text: "Dig holes in the ground that will fill with water the next time it rains."
      createOrUpgradeRoadsHeader:
        text: "Create or Upgrade Roads"
      createOrUpgradeRoads:
        text: "Select open tiles to build paths on, or upgrade existing roads and paths. Roads and paths increase movement speed of all creatures that walk on them."
      dismantleRoadsHeader:
        text: "Dismantle Roads"
      dismantleRoads:
        text: "Completely remove a road or path."
      destroyTerrainHeader:
        text: "Destroy Terrain"
      destroyTerrain:
        text: "Quickly destroy nearly any topography, including forest, tree stumps, rocks, rubble, water and even flowers. No resources will be gained from destroying the topography."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Village Efficiency Panel"
# rtr.gui.states.playstate.VillageEfficiencyPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playVillageEfficiencyPanel:
  comment: "Play State - Village Efficiency Panel"
  javaClass: "rtr.gui.states.playstate.VillageEfficiencyPanel.java"
  
  header:
    villageEfficiency:
      text: "Village Efficiency"
    general:
      text: "$YEL1General"
    harvestSpeed:
      text: "$YEL1Harvest Speed"
    refiningSpeed:
      text: "$YEL1Refining Speed"
      
  globalSpeed:
    text: "Global Speed"
  weather:
    text: "Weather"
  building:
    text: "Building"
  repairing:
    text: "Repairing"
  buildRoad:
    text: "Build Road"
  repairRoad:
    text: "Repair Road"
  farming:
    text: "Farming"
  medicWork:
    text: "Medic Work"
  clearing:
    text: "Clearing"
  dismantling:
    text: "Dismantling"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# Weather Panel"
# rtr.gui.states.playstate.WeatherPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playWeatherPanel:
  comment: "Play State - Weather Panel"
  javaClass: "rtr.gui.states.playstate.WeatherPanel.java"
  
  button:
    tooltip:
      decreaseGameSpeed:
        text: "Decrease Game Speed"
      increaseGameSpeed:
        text: "Increase Game Speed"
        
  tooltip:
    weatherHeader:
      text: "Weather"
    weather:
      text: "Current weather, temperature and season."
    timeHeader:
      text: "Time"
    time:
      text: "Current day, year, time of day and progress through the current time of day."

  weather:
    snowing:
      text: "$BLU1Snowing"
    veryCold:
      text: "$BLU1Very Cold"
    coldRain:
      text: "$CYA1Cold Rain"
    cold:
      text: "$CYA1Cold"
    chillyRain:
      text: "$CYA0Chilly Rain"
    chilly:
      text: "$CYA0Chilly"
    raining:
      text: "$GRE0Raining"
    temperate:
      text: "$GRE0Temperate"
    hotRain:
      text: "$RED0Hot Rain"
    veryHot:
      text: "$RED0Very Hot"
    warmRain:
      text: "$ORA0Warm Rain"
    hot:
      text: "$ORA0Hot"
    coolRain:
      text: "$YEL0Cool Rain"
    warm:
      text: "$YEL0Warm"
       
  moon:
    full:
      text: "$BLU0Full Moon"
    blood:
      text: "$RED1Blood Moon"
    eclipse:
      text: "$YEL1Eclipse"
      
  day:
    text: "$GRE1DAY {day}"
  year:
    text: "$YEL0YEAR {year}" 
  paused:
    text: "$YEL1Paused"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Play State
# You Lose Panel
# rtr.gui.states.playstate.YouLosePanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playYouLosePanel:
  comment: "Play State - You Lose Panel"
  javaClass: "rtr.gui.states.playstate.YouLosePanel.java"
  
  button:
    abandonRegion:
      text: ">> Abandon Region <<"
      
  congratulations:
    text: "$YEL1Congratulations."
  youLose:
    text: "$GRE1You've lost the region!"
  daysSurvived:
    text: "$WHI0The village survived $GRE1{days}$WHI0 day!"
  daysSurvivedPlural:
    text: "$WHI0The village survived $GRE1{days}$WHI0 days!"
  acceptFate:
    text: "$RED0Accept Fate.."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared (Used in multiple states)
# Data Views Panel
# rtr.gui.states.shared.DataViewsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedDataViewsPanel:
  comment: "Shared - Data Views Panel"
  javaClass: "rtr.gui.states.shared.DataViewsPanel.java"
  
  button:
    resourceValues:
      text: "Resource Values"
    movementCosts:
      text: "Movement Costs"
    blockMap:
      text: "Block Map"
    range:
      text: "Range"
    perimeter:
      text: "Perimeter"
    corruptionResistance:
      text: "Corruption Resistance"
    desirability:
      text: "Desirability"
    towerRange:
      text: "Tower Range"
    lightningRodRange:
      text: "Lightning Rod Range"
    hideTopography:
      text: "Hide Topography"
    collisionMap:
      text: "Collision Map"
    shadowMap:
      text: "Shadow Map"
    depthMap:
      text: "Depth Map"
    lightValues:
      text: "Light Values"
    paths:
      text: "Paths"
    traffic:
      text: "Traffic"
    roadDurability:
      text: "Road Durability"
      
  header:
    text: "Data Views"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared (Used in multiple states)
# Debug Data
# rtr.gui.states.shared.DebugData.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedDebugData:
  comment: "Shared - Debug Data"
  javaClass: "rtr.gui.states.shared.DebugData.java"
  
  fps:
    text: "$GRE1FPS: {fps}"
  totalRuntime:
    text: "$GRE1Total Runtime: {hours}:{minutes}:{seconds}"
  mapPosition:
    text: "$BLU0Map Position: {xPosition},{yPosition}"
  particleCount:
    text: "$RED0Particle Count: {amount}"
  mousePosition:
    text: "Mouse Position:"
  mouseTile:
    text: "Mouse Tile:"
  mouseMap:
    text: "Mouse Map:"
  gpuModel:
    text: "GPU Model: {gpuModelName}"
  usedMemory:
    text: "$CYA1Used Memory:"
  freeMemory:
    text: "$CYA1Free Memory:"
  totalMemory:
    text: "$CYA1Total Memory"
  maxMemory:
    text: "$CYA1Max Memory:"
  resolution:
    text: "$ORA1Resolution: $YEL1{width}x{height}"
  uiScale:
    text: "$PIN1UI Scale:"
  worldScale:
    text: "$PIN1World Scale:"
  
  terrain:
    baseTerrain:
      text: "$GRE0 Base Terrain:"
    baseTerrainAccent:
      text: "$GRE0 Base Terrain (A):"
    terrain:
      text: "$GRE0Terrain:"
    terrainAccent:
      text: "$GRE0Terrain (A):"
    corruption:
      text: "$GRE0Corruption:"
    roads:
      text: "$GRE0Roads:"
    lowerTopography:
      text: "$GRE0Lower Topography:"
    lowerTopographyAccent:
      text: "$GRE0Lower Topography (A):"
    bridges:
      text: "$GRE0Bridges:"
    upperTopography:
      text: "$GRE0Upper Topography:"
    upperTopographyAccent:
      text: "$GRE0Upper Topography (A):"
    objects:
      text: "$GRE0Objects:"
    outOfBounds:
      text: "$RED1Mouse Out of Bounds"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared (Used in multiple states)
# Minimap Panel
# rtr.gui.states.shared.MinimapPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedMinimapPanel:
  comment: "Shared - Minimap Panel"
  javaClass: "rtr.gui.states.shared.MinimapPanel.java"
  
  button:
    small:
      text: "Small"
    large:
      text: "Large"
      
  header:
    text: "Minimap"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared (Used in multiple states)
# Music
# rtr.gui.states.shared.MusicPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedMusicPanel:
  comment: "Shared - Music Panel"
  javaClass: "rtr.gui.states.shared.MusicPanel.java"
      
  header:
    text: "Music"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared
# Right Object Description Panel
# rtr.gui.states.shared.RightObjectDescriptionPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

playRightObjectDescriptionPanel:
  comment: "Shared - Right Object Description Panel"
  javaClass: "rtr.gui.states.shared.RightObjectDescriptionPanel.java"
  
  header:
    constructionRequirements:
      text: "Construction Requirements"
    requiredSupport:
      text: "Required Support"
    recommendedSupport:
      text: "Recommended Support"
    canStore:
      text: "Can Store"
    canRefineOrManufacture:
      text: "Can Refine/Manufacture"
    defensiveTower:
      text: "Defensive Tower"
    
  constructionRequirements:
    text: "Requires $RED1{buildingName}$WHI0 for $RED1{resourceName}"
  supportConjuntion:
    text: "$WHI0 or $RED0"
  maximumStorage:
    text: "Maximum Storage: $GRE1{amount}"
  energy:
    text: "$YEL1{amount} Energy"
  staticTowerDamageOverride:
    text: "Damage: $GRE1Electric (3-8)"
  chargedDamage:
    text: "Charged Damage: $GRE1{damageType} ({damageMinimum}-{damageMaximum})"
  damage:
    text: "Damage: $GRE1{damageType} ({damageMinimum}-{damageMaximum})"
  unchargedDamage:
    text: "Uncharged Damage: {damageType} $RED0({damageMinimum}-{damageMaximum})"
  fires:
    text: "Fires: $GRE1{ammoName}"
  ammo:
    text: "Ammo Per Bundle: $GRE1{amount}"
  energyPerShot:
    text: "Energy Per Shot: $GRE1{amount}"
  reloadTime:
    text: "Reload Time: $GRE1{amount}"
  firingRange:
    text: "Firing Range: $GRE1{amount}"
  canSpawnCreatures:
    text: "Can Spawn Creatures"
  spawnsMob:
    text: "Spawns $GRE1{mobName}"
  maximumSpawns:
    text: "Maximum Spawns: $GRE1{amount}"
  spawnNeedsResourcesAndEnergy:
    text: "Needs $GRE1{resourceName}$WHI0 and $GRE1{amount} Energy$WHI0 to Spawn"
  spawnNeedsEnergy:
    text: "Needs $GRE1{amount} Energy $WHI0to Spawn"
  spawnNeedsResources:
    text: "Needs $GRE1{resourceName}$WHI0 to Spawn"
  rangeGenerated:
    text: "Range Generated: $GRE1{amount}"
  desirability:
    text: "Desirability: $GRE1{amount}"
  corruptionResistance:
    text: "Corruption Resistance: $GRE1{amount}"
  providedMigrationsPerDay:
    text: "Provided Migrations Per Day: $GRE1{amount}"
  guardHousingCapacity:
    text: "Guard Housing Capacity: $GRE1{amount}"
  housingCapacity:
    text: "Housing Capacity: $GRE1{amount}"
  workersSlots:
    text: "Workers Slots: $GRE1{amount} {mobJobName}"
  buildingSlotsProvided:
    text: "Building Slots Provided: $GRE1{amount}"
  acceptsEssence:
    text: "Accepts Essence From Collectors"
  canCollectRawEssence:
    text: "Can Collect Raw Essence"
  consumesCrylithium:
    text: "Consumes Crylithium for Fuel"
  canBuildRoads:
    text: "Can Build Roads"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared
# Settings Panel
# rtr.gui.states.shared.SettingsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedSettingsPanel:
  comment: "Shared - Settings Panel"
  javaClass: "rtr.gui.states.shared.SettingsPanel.java"
  
  button:
    ok:
      text: "Ok!"
    cancel:
      text: "Cancel"
    reset:
      text: "Reset"
    
  keys:
    comment: "Key list column."
    header:
      text: "$ORA1Map Keys"
    notSet:
      text: "NOT SET"
    mapUp:
      text: "Map Up"
    mapDown:
      text: "Map Down"
    mapLeft:
      text: "Map Left"
    mapRight:
      text: "Map Right"
    zoomIn:
      text: "Zoom In"
    zoomOut:
      text: "Zoom Out"
    gameSpeedUp:
      text: "Game Speed Up"
    gameSpeedDown:
      text: "Game Speed Down"
    minimap:
      text: "Minimap"
    cycleBrushType:
      text: "Cycle Brush Type"
    brushSizeUp:
      text: "Brush Size Up"
    brushSizeDown:
      text: "Brush Size Down"
    debugView:
      text: "Debug View"
    screenShot:
      text: "Screen Shot"
    hideGUI:
      text: "Hide GUI"
    gridView:
      text: "Grid View"
    hideTopography:
      text: "Hide Topography (Map Editor)"
    fullScreen:
      text: "Full Screen"
    populationList:
      text: "Population List"
    mainMenu:
      text: "Main Menu"
    mapInformation:
      text: "Map Information"
    dataViews:
      text: "Data Views"
    problemPanel:
      text: "Problem Panel"
    buildingList:
      text: "Building List"
    cancel:
      text: "Cancel/Escape"
    accent:
      text: "Accent/Alt Function"
    erase:
      text: "Erase (Map Editor)"
    objectGrab:
      text: "Object Grab (Map Editor)"
    patch:
      text: "Patch (Map Editor)"
    hole:
      text: "Hole (Map Editor)"
    pause:
      text: "Pause"
    pauseObject:
      text: "Pause Object"
    dismantleObject:
      text: "Dismantle Object"
    grabSpell:
      text: "Grab Spell"
    activeSpell1:
      text: "Active Spell (Slot 1)"
    activeSpell2:
      text: "Active Spell (Slot 2)"
    activeSpell3:
      text: "Active Spell (Slot 3)"
    activeSpell4:
      text: "Active Spell (Slot 4)"
    activeSpell5:
      text: "Active Spell (Slot 5)"
    harvestWood:
      text: "Harvest Wood"
    harvestRock:
      text: "Harvest Rock"
    harvestFoodAndWater:
      text: "Harvest Food and Water"
    harvestCrystal:
      text: "Harvest Crystals"
    destroyTerrain:
      text: "Destroy Terrain"
    nextTip:
      text: "Next Tip"
    axisLock:
      text: "Axis Lock"

  audio:
    comment: "Audio column."
    header:
      text: "$ORA1Audio"
    musicVolume:
      text: "$BLU0Music Volume"
    soundVolume:
      text: "$BLU0Sound Volume"

  controls:
    comment: "Controls column."
    header:
      text: "$ORA1Controls"
    invertMapScrolling:
      text: "Invert Map Scrolling"
    edgeScrolling:
      text: "Edge Scrolling"
    edgeScrollingFullScreenRecommended:
      text: "$GRE1Full Screen Recommended"
    edgeScrollingAmount:
      text: "Edge Scrolling Amount"

  videoConfiguration:
    comment: "Video configuration column."
    header:
      text: "$ORA1Video Configuration"
    fullScreen:
      text: "Full Screen"
    borderlessFullScreen:
      text: "Borderless Full Screen"
    edgeScrollingNotRecommended:
      text: "Edge Scrolling NOT Recommended"
    requiresFullScreen:
      text: "Requires~Full Screen"
    fixedResolution:
      text: "Fixed Resolution"
    fullscreenWithoutBorderlessOnly:
      text: "Fullscreen without Borderless Only"
    vSync:
      text: "vSync"
    particles:
      text: "Particles"
    particlesRetro:
      text: "RETRO"
    particlesSmooth:
      text: "SMOOTH"

  performance:
    comment: "Performance column."
    header:
      text: "$ORA1Performance"
    particleAmount:
      text: "Particle Amount"
    shadows:
      text: "Shadows"
    autosaveFrequency:
      text: "Autosave Frequency"
    clouds:
      text: "Clouds"
    background:
      text: "Background"

  screenshake:
    comment: "Screenshake column."
    header:
      text: "$ORA1Screenshake"
    enabled:
      text: "Screenshake Enabled"

  tips:
    comment: "Tips column."
    header:
      text: "$ORA1Tips"
    enabled:
      text: "Tips Enabled"

  interfaceScale:
    comment: "Interface scale column."
    header:
      text: "$ORA1Interface Scale"
    auto:
      text: "Auto"
    recommended:
      text: "$GRE1Recommended"
    tooHighWarning:
      text: "$RED1Too high at this resolution!"
    visualErrorsWarning:
      text: "$RED1May cause visual errors"

  twitch:
    comment: "Twitch integration column."
    header:
      text: "$ORA1Twitch Integration"

  changeKeyPanel:
    comment: "Change key pop up panel."
    header:
      text: "$ORA1Change Key!"
    message:
      text: "Press the desired hot key~$GRE1CURRENT KEY: {keyName}"

  miscellaneous:
    comment: "Extra strings used in various parts of the panel."
    'false':
      text: "FALSE"
    'true':
      text: "TRUE"
    nothingHere:
      text: "Nothing here!"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Shared
# Tips Panel
# rtr.gui.states.shared.TipsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sharedTipsPanel:
  comment: "Shared - Tips Panel"
  javaClass: "rtr.gui.states.shared.TipsPanel.java"
  
  button:
    ok:
      text: "OK!"
    nextTip:
      text: "Next Tip"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Chest Open Panel
# rtr.gui.states.worldmap.ChestOpenPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapChestOpenPanel:
  comment: "World Map State - Tips Panel"
  javaClass: "rtr.gui.states.worldmap.ChestOpenPanel.java"
  
  button:
    takeIt:
      text: "Take it!"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Corruption Threat Bar
# rtr.gui.states.worldmap.CorruptionThreatBar.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapCorruptionThreatBar:
  comment: "World Map State - Corruption Threat Bar"
  javaClass: "rtr.gui.states.worldmap.CorruptionThreatBar.java"
  
  tooltip:
    worldDayHeader:
      text: "World Day"
    worldDay:
      text: "The combined days past on all active regions. This is one of the primary statistics used to calculate world wide corruption threat."
    corruptionPowerHeader:
      text: "Corruption Power"
    corruptionPower:
      text: "This is the numerical calculation of the threat bar below. Positive values mean the threat is higher than baseline, and negative is lower. You can lower the corruption power by completing goals, or migrating to other regions."
    worldCorruptionThreatHeader:
      text: "World Corruption Threat"
    worldCorruptionThreat:
      text: "The higher this bar, the more dangerous the world will be for your villagers. More monsters will spawn at night, stronger monsters will appear sooner, and corruption will spread more aggressively."  

  worldDay:
    text: "World Day: $GRE1{day}"
  globalCorruptionPowerGood:
    text: "Global Corruption Power: $GRE1{amount}" 
  globalCorruptionPowerBad:
    text: "Global Corruption Power: +$YEL1{amount}"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Doom World Panel
# rtr.gui.states.worldmap.DoomWorldPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapDoomWorldPanel:
  comment: "World Map State - Doom World Panel"
  javaClass: "rtr.gui.states.worldmap.DoomWorldPanel.java"
  
  button:
    doomWorld:
      text: "DOOM WORLD"
    confirmInputBox:
      text: "CONFIRM HERE"
  
  warning:
    text: "$RED1WARNING: WILL PERMANENTLY RESET ALL REGIONS ON THIS DIFFICULTY! BUT YOU WILL KEEP PERKS AND GOD EXPERIENCE."
  instructions:
    text: "$ORA1TYPE $GRE1RESET$ORA1 IN THE BOX BELOW TO CONFIRM YOU WANT TO DO THIS!"
  
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Game Mode Config Panel
# rtr.gui.states.worldmap.GameModeConfigPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapGameModeConfigPanel:
  comment: "World Map State - Game Mode Config Panel"
  javaClass: "rtr.gui.states.worldmap.GameModeConfigPanel.java"
  
  button:
    input:
      configName:
        text: "Config Name"
    tooltip:
      saveConfig:
        text: "Save Config"
    accept:
      text: "Accept"
    back:
      text: "Back"
      
  header:
    text: "$CYA1Game Mode Configuation"
    
  corruption:
    tooltip:
      baseSpawnRateHeader:
        text: "Base Spawn Rate"
      baseSpawnRate:
        text: "The overall base spawn rate chance. Lower means more monsters! $YEL1(1 in 1 - 20,000, or none.)"
      boostedChanceMultiplierHeader:
        text: "Boosted Chance Multiplier"
      boostedChanceMultiplier:
        text: "Multiplies the final calculated 1 in X chance a monster will be boosted when it spawns. 0.5 would be double, 2.0 would be half. $YEL1(0.25 - 10.0)"
      corruptionStartDayHeader:
        text: "Corruption Start Day"
      corruptionStartDay:
        text: "The first day the first corruption spots will spawn in the game world. $YEL1(1 - 200, or never.)"
      spreadRateHeader:
        text: "Spread Rate"
      spreadRate:
        text: "How fast the corruption spreads. Lower numbers mean faster spreading! $YEL1(1 in 5k to 1 in 500k per update tick)"
      buildingRateHeader:
        text: "Building Rate"
      buildingRate:
        text: "How often the corruption drones will build a new building. Lower numbers mean faster building! $YEL1(1 in 5k to 1 in 500k per update tick)"
      buildingDensityHeader:
        text: "Building Density"
      buildingDensity:
        text: "How many buildings can the drones build in one area, the area is determined by 'Building Density Range' below. $YEL1(1 - 50)"
      buildingDensityRangeHeader:
        text: "Building Density Range"
      buildingDensityRange:
        text: "The range looked at when determining building density, set by 'Building Density' above. $YEL1(8 - 128)"
      permanentCorruptionAmountMaxHeader:
        text: "Perm. Corr. Amt Max"
      permanentCorruptionAmountMax:
        text: "The maximum amount of tiles that can be permanently corrupted. This should be the same or higher than the 'Permanent Corruption Start Amount' above. $YEL1(64 - 64512)"
      permanentCorruptionMaxPerDayHeader:
        text: "Perm. Corr. Max Per Day"
      permanentCorruptionMaxPerDay:
        text: "How much additional corruption tiles become permanent per day. $YEL1(8 - 2048)"
      
    header:
      text: "$YEL0Corruption"
    baseSpawnRate:
      text: "Base Spawn Rate"
    boostedChanceMultiplier:
      text: "Boosted Chance Multiplier"
    corruptionStartDay:
      text: "Corruption Start Day"
    spreadRate:
      text: "Spread Rate"
    buildingRate:
      text: "Building Rate"
    buildingDensity:
      text: "Building Density"
    buildingDensityRange:
      text: "Building Density Range"
    permanentCorruptionAmountMax:
      text: "Permanent Corr. Amt Max"
    permanentCorruptionMaxPerDay:
      text: "Perm. Corr. Max Per Day"
    
  lootBoxes:
    tooltip:
      maximumLootBoxesHeader:
        text: "Maximum Loot Boxes"
      maximumLootBoxes:
        text: "The maximum amount of uncovered loot boxes can exist on the map at once. $YEL1(1 in 1 - 5000 or never)"
      uncoverChanceHeader:
        text: "Uncover Chance"
      uncoverChance:
        text: "The chance to find an uncovered loot box while harvesting resources. $YEL1(1 in 1 - 5000 or never)"
      keyChanceHeader:
        text: "Key Chance"
      keyChance:
        text: "The chance you'll uncover a key instead of a loot box. $YEL1(1 in 1 - 50 or never)"
    
    header:
      text: "$YEL0Loot Boxes"
    maximumLootBoxes:
      text: "Maximum Loot Boxes"
    uncoverChance:
      text: "Uncover Chance"
    keyChance:
      text: "Key Chance"
      
  nomads:
    tooltip:
      baseSpawnRateHeader:
        text: "Base Spawn Rate"
      baseSpawnRate:
        text: "The base chance nomads will spawn in the day time. Lower the number, the higher the chance. $YEL1(1 in 5k - 320k or never)"
      spawnAmountMultiplierHeader:
        text: "Spawn Amount Multiplier"
      spawnAmountMultiplier:
        text: "Multiplies the final calculated amount of nomads that spawn. 0.5 would be half, 2.0 would be double. $YEL1(0.25 - 10.0)"
      spawnAmountMinimumHeader:
        text: "Spawn Amount Minimum"
      spawnAmountMinimum:
        text: "The minimum amount of nomads that can spawn at once, should be lower than maximum. $YEL1(1 - 50)"
      spawnAmountMaxHeader:
        text: "Spawn Amount Max"
      spawnAmountMax:
        text: "The maximum amount of nomads that can spawn at once, should be higher than minimum. $YEL1(1 - 50)"
    
    header:
      text: "$YEL0Nomads"
    baseSpawnRate:
      text: "Base Spawn Rate"
    spawnAmountMultiplier:
      text: "Spawn Amount Multiplier"
    spawnAmountMinimum:
      text: "Spawn Amount Min"
    spawnAmountMax:
      text: "Spawn Amount Max"
    
  other:
    tooltip:
      temperatureVarianceHeader:
        text: "Temperature Variance"
      temperatureVariance:
        text: "How much a season's average temperature can vary. $YEL1(0 - 20)"
      startingSeasonHeader:
        text: "Starting Season"
      startingSeason:
        text: "The season you start the game in."
      dayLengthMultiplierHeader:
        text: "Day Length Multiplier"
      dayLengthMultiplier:
        text: "Increases or decreases the overall time a day lasts. 1.5x is +50%, 0.5x is -50% $YEL1(0.1x - 30.0x)"
        
    header:
      text: "$YEL0Other"
    temperatureVariance:
      text: "Temperature Variance"
    startingSeason:
      text: "Starting Season"
    dayLengthMultiplier:
      text: "Day Length Multiplier"
    
  weather:
    tooltip:
      rainOrSnowChanceHeader:
        text: "Rain or Snow Chance"
      rainOrSnowChance:
        text: "Chance it will rain in the {season}. Lower values are a higher chance. $YEL1(1 in 1 - 300k, or none.)"
      averageTemperatureHeader:
        text: "Average Temperature"
      averageTemperature:
        text: "The average temperature in the {season}. $YEL1(0% to 100%)"
      seasonLengthHeader:
        text: "Season Length"
      seasonLength:
        text: "How many days {season} lasts. $YEL1(0 - 30)"
        
    header:
      spring:
        text: "$YEL0Spring"
      summer:
        text: "$YEL0Summer"
      autumn:
        text: "$YEL0Autumn"
      winter:
        text: "$YEL0Winter"
        
    rainOrSnowChance:
      text: "Rain or Snow Chance"
    averageTemperature:
      text: "Avg. Temperature"
    seasonLength:
      text: "Season Length"
    
  moonPhases:
    tooltip:
      fullMoonIntervalHeader:
        text: "Full Moon Interval"
      fullMoonInterval:
        text: "How many days pass before a full moon is triggered. $YEL1(1 - 30, or none.)"
      bloodMoonChanceHeader:
        text: "Blood Moon Chance"
      bloodMoonChance:
        text: "Daily chance a blood moon could appear, after blood moon Delay has ran out. $YEL1(1 - 30)"
      bloodMoonDelayHeader:
        text: "Blood Moon Delay"
      bloodMoonDelay:
        text: "How many days pass before a blood moon can be retriggered. $YEL1(1 - 50, or none.)"
      bloodMoonHeader:
        text: "Blood Moon ({season})"
      bloodMoon:
        text: "Allows a blood moon be to be triggered in the {season}."
    
    header:
      text: "$YEL0Moon Phases"
    fullMoonInterval:
      text: "Full Moon Interval"
    bloodMoonChance:
      text: "Blood Moon Chance"
    bloodMoonDelay:
      text: "Blood Moon Delay"
    bloodMoon:
      text: "Blood Moon ({season})"
    
  disasters:
    tooltip:
      meteorShowerChanceHeader:
        text: "Meteor Shower Chance"
      meteorShowerChance:
        text: "Chance of a meteor shower. $YEL1(1k - 3m, or none.)"
      earthquakeChanceHeader:
        text: "Earthquake Chance"
      earthquakeChance:
        text: "Chance of an earthquake. $YEL1(1k - 3m, or none.)"
      electricalStormChanceHeader:
        text: "Electrical Storm Chance"
      electricalStormChance:
        text: "Chance of an electrical storm. $YEL1(1k - 3m, or none.)"
      hailStormChanceHeader:
        text: "Hail Storm Chance"
      hailStormChance:
        text: "Chance of a hail storm. $YEL1(1k - 3m, or none.)"
      blightChanceHeader:
        text: "Blight Chance"
      blightChance:
        text: "Chance of a blight. $YEL1(1k - 3m, or none.)"
        
    header:
      text: "$YEL0Disasters"
    meteorShowerChance:
      text: "Meteor Shower Chance"
    earthquakeChance:
      text: "Earthquake Chance"
    electricalStormChance:
      text: "Electrical Storm Chance"
    hailStormChance:
      text: "Hail Storm Chance"
    blightChance:
      text: "Blight Chance"
      
  loadConfig:
    header:
      text: "$YEL0Load Config"
    nightmare:
      text: "Nightmare"
    survival:
      text: "Survival"
    traditional:
      text: "Traditional"
    peaceful:
      text: "Peaceful"
    configFileName:
      text: "$YEL0Config File Name"
    configBlocked:
      text: "$YEL0You must doom the world to reconfigure these settings!"
    
  miscellaneous:
    never:
      text: "$GRE0Never"
    1inXk:
      text: "$GRE01 in {amount}k"
    1inX:
      text: "$GRE01 in {amount}"
    none:
      text: "$GRE0None"
    xDays:
      text: "$GRE0{days} days"
    'true':
      text: "$GRE0True"
    'false':
      text: "$RED0False"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Game Mode Select Panel
# rtr.gui.states.worldmap.GameModeSelectPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapGameModeSelectPanel:
  comment: "World Map State - Game Mode Select Panel"
  javaClass: "rtr.gui.states.worldmap.GameModeSelectPanel.java"
  
  button:
    nightmare:
      text: "Nightmare"
    survival:
      text: "Survival"
    traditional:
      text: "Traditional"
    peaceful:
      text: "Peaceful"
    custom:
      text: "Custom"
    sandbox:
      text: "Sandbox"
  
  header:
    nightmare:
      text: "$RED1Nightmare"
    survival:
      text: "$ORA1Survival"
    traditional:
      text: "$YEL1Traditional"
    peaceful:
      text: "$GRE1Peaceful"
    custom:
      text: "$CYA1Custom"
    sandbox:
      text: "$BLU1Sandbox"
    selectGameMode:
      text: "$BLU1Select Game Mode"
      
  description:
    nightmare:
      text: "A nearly impossible game mode designed to challenge even the best players. Expect an unfair and ruthless experience. This mode is for the masochist in all of us.~~$RED0Do NOT pick this game mode. Seriously, just don't!~~"
    survival:
      text: "The way the game is meant to be played. Unforgivingly brutal, with a steep learning curve.~~$RED0Expect to lose frequently!~~$GRE0Try out traditional mode if survival is too much for you."
    traditional:
      text: "A traditional village simulator experience, with much less monsters.~~This mode is recommended if you want a more relaxed experience, but you want some monsters and light defense mechanics.~~$GRE0The most ideal game mode to learn how to play. But once you learn the ropes, switch to survival!"
    peaceful:
      text: "A mode with absolutely no monsters what so ever. Just worry about taking care of your village, and survive the passing seasons.~~$GRE0This mode is not recommended unless you're looking for a relaxed, laid back experience with no challenge what so ever."
    custom:
      text: "A mode where you set all of the difficulty flags before playing. But once they're set, they can't be changed until you reset the game mode.~~$GRE0This mode is recommended for experienced players who want to experiment with the game's baseline difficulty."
    sandbox:
      text: "No rules! Play around with the game mechanics, change the time of day, spawn in resources and monsters, generate particles. Do whatever you want and just have fun!~~Recommended if you're interested in playing around with the game mechanics.~~Not intended for serious gameplay of any kind."
    selectGameMode:
      text: "Select one of the six a game modes from the left. Each mode is independent from the other five and you can change modes whenever you'd like. If you make too many mistakes, or want a fresh start in any mode, you can reset a game mode by clicking the Doom World button.~~$GRE0If you are a new player, Traditional mode is highly recommended."
  
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Goal Claim Panel
# rtr.gui.states.worldmap.GoalClaimPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapGoalClaimPanel:
  comment: "World Map State - Goal Claim Panel"
  javaClass: "rtr.gui.states.worldmap.GoalClaimPanel.java"
  
  button:
    takeIt:
      text: "Take it!"
      
  godExperience: 
    text: "God Experience: $YEL0{amount}"
  globalCorruptionPowerAmount:
    text: "-{amount} Global Corruption Power"
  morePerks:
    text: "$YEL0Plus {amount} more!"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Goals Panel
# rtr.gui.states.worldmap.GoalsPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapGoalsPanel:
  comment: "World Map State - Goals Panel"
  javaClass: "rtr.gui.states.worldmap.GoalsPanel.java"
  
  button:
    'yes':
      text: "Yes"
    'no':
      text: "No"
    reset:
      text: "Reset"
    
  warning: 
   text: "$GRE1Are you sure? This will remove the~goal, and a new one must be earned."
   
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Map Select Panel
# rtr.gui.states.worldmap.MapSelectPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapMapSelectPanel:
  comment: "World Map State - Map Select Panel"
  javaClass: "rtr.gui.states.worldmap.MapSelectPanel.java"
  
  button:
    visitRegion:
      text: "Visit Region"
    establishVillage:
      text: "Establish Village"
    visitRegionResetAI:
      text: "Visit Region (Reset AI)"
    close:
      text: "Close"
    
    tooltip:
      visitRegionResetAIHeader:
        text: "Reset AI"
      visitRegionResetAI:
        text: "This will reset all mob AI to idle, useful in rare cases where the AI may be causing the game to crash or freeze. Recommended to try before you use the save rollback mechanics."
      rollbackSaveHeader:
        text: "Rollback Save"
      rollbackSave:  
        text: "$RED1WARNING: This can NOT be undone, and may have adverse side effects to your world map progress. This should never be used for save scumming. Only for fixing corrupted save files!"
  
  tooltip:
    corruptionThreatHeader:
      text: "Corruption Threat"
    corruptionThreat:
      text: "The higher this bar, the more dangerous the region will be for your villagers. More monsters will spawn at night, stronger monsters will appear, and corruption will spread more aggressively."

  newRegion:
    header:
      text: "$YEL1New Region"
    noMigrants:
      text: "$YEL1Need more migrants~to establish village!"
    migrantsEnRoute:
      text: "Migrants En Route: $GRE1{amount}"
    migrantsRequired:
      text: "Migrants Required: $RED1{amount}"
    
  lostRegion:
    header:
      text: "$RED1Lost Region"
    lostRegion:
      text: "$WHI0You have lost this region~to the corruption!"
    
  existingRegion:
    header:
      resources:
        text: "$YEL1Resources"
      villagers:
        text: "$GRE1Villagers"
      monsters:
        text: "$RED1Monsters"
      saveRollback:
        text: "$YEL1Save Rollback"
      
  moreResourceTypes:
    text: "Plus $GRE1{amount}$WHI0 more types."
  total:
    text: "$YEL1TOTAL: {amount}"
  none:
    text: "$YEL1NONE!"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# Reward Chest Panel
# rtr.gui.states.worldmap.RewardChestPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapRewardChestPanel:
  comment: "World Map State - Reward Chest Panel"
  javaClass: "rtr.gui.states.worldmap.RewardChestPanel.java"
  
  godExperienceHeader:
    text: "God Experience"
  godExperience:
    text: "Gain god experience by maintain a good healthy village, or by unlocking and completing goals."
  chestGrantProgressHeader:
    text: "Chest Grant Progress"
  chestGrantProgress:
    text: "Your progress to be granted another chest. Chests are granted slowly as your villages survive. Once granted, must be opened with god experience."
  chestGrantProgressFull:
    text: "Your chest bar is full, you must open a chest to be granted another one."
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# World Map State
# System Panel
# rtr.gui.states.worldmap.SystemPanel.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

worldMapSystemPanel:
  comment: "World Map State - System Panel"
  javaClass: "rtr.gui.states.worldmap.SystemPanel.java"
  
  button:
    changeGameMode:
      text: "Change Game Mode"
    
    tooltip:
      mainMenuHeader:
        text: "Main Menu"
      mainMenu:
        text: "Return to the main menu."
      doomWorldHeader:
        text: "Doom World"
      doomWorld:
        text: "Completely reset the world, deleting all world progress. But you will keep your unlocked perks, god experience and chests."
      viewGameModeConfigHeader:
        text: "View Game Mode Config"
      viewGameModeConfig:
        text: "View the custom game mode configurations you set before starting this world. They can not be changed without dooming the world and starting over."

  header:
    text: "System Panel" 
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Help Module
# Pop-up Help Tips
# rtr.help.HelpModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

helpTip:
  comment: "Help Module - Pop-up Help Tips"
  javaClass: "rtr.help.HelpModule.java"
  
  tip:
    sandboxModeHeader:
      text: "Sandbox Mode!"
    sandboxMode:
      text: "Welcome to Sandbox Mode! Sandbox mode allows you to play around with the game engine and abuse the mechanics. You can spawn in mobs, place pre-built buildings, draw on the terrain, and all sorts of other fun things. Just be warned, sandbox mode allows you to do things well beyond the designed limitations of the game. Abusing the game too much in sandbox mode can cause the game to overload and freeze. You've been warned! Have fun. :)"
    gameSpeedHeader:
      text: "SPEED CONTROLS WARNING!"
    gameSpeed:
      text: "Speed controls are still very new, and experimental. $RED1Setting the controls beyond 2x may cause severe performance problems late game.$WHI0 Use at your own risk! If the game becomes non-responsive, you can $GRE1press spacebar to pause the game, and lower the game speed before unpausing."
    worldMapWelcomeHeader:
      text: "Welcome!"
    worldMapWelcome:
      text: "Welcome to Rise to Ruins. For your first village you may select any region you'd like by clicking on the lit up boxes, and then clicking 'Establish Village'. From there you will be provided some first time free villagers to get you started. You can only select any region on the map you want once. After you've established your primary village you will be able to spread out from that region into connecting regions, so choose wisely! For now though, just focus on developing your first village!"
    worldMapMigrationHeader:
      text: "Migrate!"
    worldMapMigration:
      text: "You have enough villagers to migrate to $YEL1{regionName}$WHI0! If you're ready, just click on the region and click 'Establish Village'. Once you place your new camp, they will arrive shortly after. Unlike your first region, you will get no free villagers or resources."
    welcomeCampHeader:
      text: "The Camp"
    welcomeCamp:
      text: "Welcome to your first region! The first thing you should do is place your $YEL1Camp$WHI0 somewhere! A good starting location should have some rocks, trees, crystals, food and water nearby. To place your camp, first press $GRE1'OK!'$WHI0 to close this tip and automatically unpause the game, $GRE1then select the flashing 'Place Camp' button to the right.~~$WHI1 Good luck!"
    welcomeTipsHeader:
      text: "Tips!"
    welcomeTips:
      text: "Time to get started! Since this is your first time, you will be getting tons of in-game tips while you play. $RED1This game has a steep learning curve$WHI0, and you'll need all the help you can get! $GRE1The game is paused when a tip is being displayed$WHI0, so please take the time to read them!~~You can turn off tips in the settings menu, but if you've never played before this is not recommended!"
    harvestingResourcesHeader:
      text: "Harvesting Resources"
    harvestingResources:
      text: "Many workers assigned to buildings like the $YEL1Lumber Shack$WHI0, $YEL1Mining Facility$WHI0 and $YEL1Village Center$WHI0 are allowed to harvest resources on the map like wood and rock. You can assign work by using the $GRE1harvest assignment buttons along the bottom left of the GUI $WHI0 for the material you'd like to collect, then select the resource on the map. If you have workers that are allowed to collect the resources, they will do so on their own!"
    villageWorkersHeader:
      text: "Workers"
    villageWorkers:
      text: "Many buildings can have workers assigned to them, and will allow all sorts of different work tasks to be completed. The $YEL1builders$WHI0 assigned to the $YEL1Village Center$WHI0 for example can build, repair and dismantle structures. They can also harvest raw materials, but only if they're required to build something. $YEL1Harvesters$WHI0 from buildings like the $YEL1Lumber Shack$WHI0 on the other hand will continue to harvest materials regardless of the village's need, and create a stockpile. $YEL1You can overview what all your workers can do on the left hand 'workforce' panel."
    workBuildingsHeader:
      text: "Work Buildings"
    workBuildings:
      text: "The new {buildingName}$WHI0 your villagers have built offers your village {amount} $GRE1{mobJobName}$WHI0 job slots! If you want your villagers to change to that job, you will need to raise the desired amount of workers for it. You can do this in two places, the $GRE1left hand GUI's workforce tab, or click on the {buildingName}$GRE1 and use the bottom pop out GUI$WHI0. Then, $GRE1click the + or - buttons$WHI0 to adjust the amount of desired workers you want. $RED1If you don't have any available villagers, make sure to lower the desired workers for another job!$WHI0"
    buildingDamageHeader:
      text: "Damaged Buildings"
    buildingDamage:
      text: "A {buildingName}$WHI0 is being damaged! If you have builders and the structure is in range of the village they will automatically try to repair it when they have time."
    resouceManagementHeader:
      text: "Resource Management"
    resouceManagement:
      text: "The {buildingName}$WHI0 you just built can manufacture resources like $YEL1{resourceName} $WHI0but in order to get your villagers working on them $RED1you need to both assign {mobJobName} $RED1and assign the resources in the Resource Management tab on the left hand GUI.$WHI0 Setting a resource to $GRE1'Maintain'$WHI0 will try to keep at least that many of a resource in the village at all times, where as $GRE1'Make'$WHI0 will just immediately make that many for you. You can also set the value range over 200 for infinity, as well as control harvesting limits in the same manner."
    energyHeader:
      text: "Energy"
    energy:
      text: "The {buildingName}$WHI0 that your villagers just completed uses energy. Buildings that use energy usually need to be fueled with essence. You can generate essence by feeding an $YEL1Essence Collector$WHI0 $GRE1crylithum$WHI0 that is refined in $YEL1Crystilleries$WHI0. Living things like monsters, animals and villagers will also drop some essence if they are killed, if you have an $YEL1Essence Collector$WHI0 the stray essence will be scooped up and delivered to buildings that can use it."
    ammoHeader:
      text: "Ammo"
    ammo:   
      text: "The {buildingName}$WHI0 that your villagers have just completed needs ammunition to function. You'll need to build an ammo manufacturing building to accompy it, like a $YEL1Bowyer$WHI0 or $YEL1Rock Tumbler$WHI0."
    refineHeader:
      text: "Refined Materials"
    refineNew:   
      text: "Some buildings require refined materials, like $YEL1boards$WHI0, $YEL1stone$WHI0 or $YEL1crylithium$WHI0. The {buildingName}$WHI0 you just placed is one of them! If a building requires one of these resources and you have no means to manufacture it they'll do what they can, but the building will never get completed. You can refine most materials inside advanced work buildings, like the $YEL1Lumber Mill$WHI0 and $YEL1Stone Cuttery$WHI0. Both can be found under the refine category in your build tab."
    refineReclaim:   
      text: "Some buildings require refined materials, like $YEL1boards$WHI0, $YEL1stone$WHI0 or $YEL1crylithium$WHI0. The {buildingName}$WHI0 you just tried to reclaim is one of them! If a building requires one of these resources and you have no means to manufacture it they'll do what they can, but the building will never get completed. You can refine most materials inside advanced work buildings, like the $YEL1Lumber Mill$WHI0 and $YEL1Stone Cuttery$WHI0. Both can be found under the refine category in your build tab."
    farmingHeader:
      text: "Farming"
    farming:   
      text: "Your villagers have built their first farm! Once you assign workers, they will need to kickstart the farm with some $GRE1wild food and water$WHI0. You can harvest both with the $GRE1'Harvest Food and Water'$WHI0 button on the left hand GUI. Food grown in farms are maintained and harvested automatically!"
    buildingPriorityHeader:
      text: "Building Priority"
    buildingPriority:   
      text: "Did you know you can adjust the building priorities? Just select the $YEL1'Building List'$WHI0 button on the $YEL1top right$WHI0 then click the $YEL1up or down arrows$WHI0 to rearrange what buildings have priority over others. Higher priority buildings will get built, dismantled and repaired and before others on the list."
    noHomesHeader:
      text: "Homes"
    noHomes:   
      text: "You're on day {day} and you have not built any housing, your villagers will need a place to live, or they will be become very unhappy. You also need homes so your villagers can mate, and hopefully have children someday."
    noFarmsHeader:
      text: "Farming"
    noFarms:   
      text: "You're on day {day} and you have not built any $YEL1farms$WHI0, your villagers will need to eat eventually. Don't let them starve to death! Once you build some $YEL1farms$WHI0 and assign workers to them, you can instruct them to harvest some raw food and they'll bring it to the farm and plant. Once planted, they'll automatically harvest it once it's ready!"
    noWaterHeader:
      text: "Water"
    noWater:   
      text: "You're on day {day} and you have not built any $YEL1water sources$WHI0. Your villagers will need to drink water eventually. Don't let them die of thirst! Try to build a $YEL1Water Purifier$WHI0 and collect surface water, a $YEL1Well$WHI0 to automatically generate clean ground water or $YEL1Rain Catchers$WHI0 to collect rain water. Eventually, try to have more than one water source to survive the various conditions throughout the year. Don't forget to assign a few workers to them!"
    noTowersHeader:
      text: "Defenses"
    noTowers:   
      text: "You're on day {day} and you have not built any $YEL1defenses$WHI0, without something to defend your village you may quickly get overwhelmed by monsters trying to eat your poor little mostly helpless villagers! Try building a Bowyer and Bow Tower to get some early defenses up and running."
    buildingSlotsHeader:
      text: "Building Slots"
    buildingSlots:   
      text: "You have run out of building slot, in order to manage your ever growing village you will need to upgrade your $YEL1Camp$WHI0 or build some $YEL1Ancillaries$WHI0. You can upgrade your $YEL1Camp$WHI0 by clicking on it and then clicking the upgrade button on the bottom panel. Alternatively, if you'd rather build an $YEL1Ancillary$WHI0, you can find them in the Aid subcaregory on your build tab."
    lifeExpectancyHeader:
      text: "Life Expectancy"
    lifeExpectancy:   
      text: "Villagers who have lived a hard life, won't live quite as long of one! Villager's life expectancy can drop if they are injured, starving, extremely unhappy, or just generally have a bad life. $YEL1Once their life expectancy drops, it is never coming back!$WHI0 So make sure you take care of your villagers so you can have a strong, healthy, long living work force!"
    eldersHeader:
      text: "Elder Villagers"
    elders:   
      text: "Stay a while, and listen! {mobName} is an elder. When villagers get into their upper years, they will become elders and stop working. But in return, they will share their wisdom with anyone who takes the time to chat with them."
    ghostsHeader:
      text: "Ghosts"
    ghosts:   
      text: "Sometimes, you can resurrect dead villagers! At $YEL1Dusk$WHI0 and $YEL1Night$WHI0 you will occasionally see some of your deceased villagers wandering around the village. If you notice one, you can zap it with the resurrect spell and try to bring him back!"
    villagerStarvingHeader:
      text: "Starvation"
    villagerStarvingMale:   
      text: "{mobName}$WHI0 is starving! You better find that poor villager some food quick or he may die! Did you build a farm or houses yet? Villagers get desperate when starving and find food on their own, even if it endangers them."
    villagerStarvingFemale:   
      text: "{mobName}$WHI0 is starving! You better find that poor villager some food quick or she may die! Did you build a farm or houses yet? Villagers get desperate when starving and find food on their own, even if it endangers them."
    villagerDehydrationHeader:
      text: "Dehydration"
    villagerDehydrationMale:   
      text: "{mobName}$WHI0 is dying of thirst! You better find that poor villager some water quick or he may die! Did you build a $YEL1Water Purifier$WHI0, $YEL1Well$WHI0 or $YEL1Rain Catcher$WHI0 yet? Are they producing enough water? Maybe you need to build more!"
    villagerDehydrationFemale:   
      text: "{mobName}$WHI0 is dying of thirst! You better find that poor villager some water quick or she may die! Did you build a $YEL1Water Purifier$WHI0, $YEL1Well$WHI0 or $YEL1Rain Catcher$WHI0 yet? Are they producing enough water? Maybe you need to build more!"
    villagerSleepyHeader:
      text: "Exhaustion"
    villagerSleepyNoHome:   
      text: "{mobName}$WHI0 is starting to get sleepy. If your villagers are too tired and have no where to rest, they may end up sleeping outside."
    villagerSleepy:   
      text: "{mobName}$WHI0 is starting to get sleepy. If your villagers are too tired and have no where to rest, they may end up sleeping outside. Luckily, {mobName}$WHI0 does have a home, so he should return there shortly for a snooze!"
    villagerFreezingHeader:
      text: "Freezing To Death"
    villagerFreezingNoHome:   
      text: "{mobName}$WHI0 is freezing to death! If it gets too cold outside and your villagers don't have a home to go warm up in, they could die! Try getting enough homes for your villagers as soon as you can!"
    villagerFreezingMale:   
      text: "{mobName}$WHI0 is freezing to death! If it gets too cold outside and your villagers don't have a home to go warm up in, they could die! Luckily, {mobName}$WHI0 does have a home, so he should try to return there shortly to warm up!"
    villagerFreezingFemale:   
      text: "{mobName}$WHI0 is freezing to death! If it gets too cold outside and your villagers don't have a home to go warm up in, they could die! Luckily, {mobName}$WHI0 does have a home, so she should try to return there shortly to warm up!"
    villagerOverheatingHeader:
      text: "Overheating"
    villagerOverheatingNoHome:   
      text: "{mobName}$WHI0 is burning up in the heat! If it gets too hot outside and your villagers don't have a home to go cool down in, they could die of heat exhaustion! Try getting enough homes for your villagers as soon as you can!"
    villagerOverheatingMale:   
      text: "{mobName}$WHI0 is burning up in the heat! If it gets too hot outside and your villagers don't have a home to go cool down in, they could die of heat exhaustion! Luckily, {mobName}$WHI0 does have a home, so he should try to return there shortly to cool down!"
    villagerOverheatingFemale:   
      text: "{mobName}$WHI0 is burning up in the heat! If it gets too hot outside and your villagers don't have a home to go cool down in, they could die of heat exhaustion! Luckily, {mobName}$WHI0 does have a home, so she should try to return there shortly to cool down!"
    matingHeader:
      text: "Mating"
    matingDifferentGender:
      text: "Did you notice that {mobName}$WHI0 has found a new mate, {mobMateName}$WHI0? If either one of them have a home and they're happy enough, they may try to go home and make a baby! They'll also visit each other often to boost their mood, or try to live in the same house whenever possible."
    matingSameGender:   
      text: "Did you notice that {mobName}$WHI0 has found a new mate, {mobMateName}$WHI0? If either one of them have a home and they're happy enough, they may try to go home and have some private fun time! They may not be very effective at reproducing like their straight counterparts but they'll still get a boost to their mood! They'll also visit each other often to boost their mood, or try to live in the same house whenever possible."
    pregnantHeader:
      text: "Pregnant"
    pregnant:   
      text: "{mobName}$WHI0 is pregnant! Soon, she will give birth to a new child who will eventually grow up to be another adult worker bee! Pregnant villagers consume more food and energy, and move around a little slower. So keep an eye on them."
    nomadHeader:
      text: "Nomads!"
    nomad:   
      text: "$YEL1Nomads$WHI0 have come into your region, they are a friendly sort. If they can make their way to your village without being killed, they'll join you. If you want to increase your chances of getting more $YEL1Nomads$WHI0, build a large village with plenty of housing and defenses."
    essenceHeader:
      text: "Essence"
    essence:   
      text: "Have you noticed those sparkling green spots on the map when something dies or some of the terrain is destroyed? That's $GRE1Essence$WHI0 that has been released into the world. You can collect essence by waving your hand near it, and it will increase your influence bar faster, so you can cast spells. Essence is also the power source behind villager's magic buildings, like the $YEL1Fire Bolt tower$WHI0. You can collect stray essence by building an $YEL1Essence Collector$WHI0."
    abandonedBuildingsHeader:
      text: "Abandoned Buildings"
    abandonedBuildings:   
      text: "{buildingName}$WHI0 is an abandoned building, your villagers will need to repair it before they can use it. If the building is in range of your village You can click on the building, and then click the $GRE1reclaim button$WHI0 on the bottom GUI. "
    rainHeader:
      text: "Rain!"
    rain:   
      text: "Whoa, it's raining! Rain will cause your villager's happiness to drop slowly and slow down their movement speed a bit, but it will also $GRE1water your crops, fill your rain collectors and put out fires!$WHI0 Just cross your fingers and hope the lightning bolts don't zap anything too important."
    snowHeader:
      text: "Snow!"
    snow:   
      text: "Whoa, it's snowing! Snow will cause your villager's happiness to drop slowly and slow down their movement speed a bit. Be careful, snow also drops the current temperature, it could drop to freezing levels and kill off crops or hurt villagers who can't find a place to warm up."
    happinessLowHeader:
      text: "Low Happiness"
    happinessLow:   
      text: "Your villagers are extremely unhappy. You should consider giving them some down time. Happy villagers will work harder, and breed more often. Villagers are also more happy in general if they're well fed, have a home, and a mate."
    timeDuskHeader:
      text: "Night"
    timeDusk:   
      text: "Night is coming soon, be careful! This is when the monsters will attack! Hopefully you built some defenses, like a $YEL1Bow Tower$WHI0!"
    corruptionHeader:
      text: "Corruption!"
    corruption:   
      text: "As you've probably already discovered, your villagers are not the only ones in this region! As time passes, $RED1the corruption$WHI0 will slowly spread and take over the map, increasing monster spawn rates and generally causing trouble. There are ways you can push back the corruption though. $GRE1Many buildings offer corruption resistance$WHI0, and high resistance will prevent the corruption from spreading, and can even sometimes push it back. Not all buildings can resist the corruption, be sure to check their stats."
    seasonAutumnHeader:
      text: "Autumn"
    seasonAutumn:   
      text: "It is now $ORA1Autumn$WHI0. $ORA1Autumn$WHI0 is a fairly light season and usually a good time to build up your housing and stockpile a large amount of $RED1food and water$WHI0 to survive the upcoming $CYA1Winter$WHI0."
    seasonWinterHeader:
      text: "Winter"
    seasonWinter:   
      text: "$CYA1Winter$WHI0 has arrived! Winter is one of the hardest seasons to survive. Your farms will stop growing, as will most natural resources on the map. Hopefully you stocked up on food, water and have plenty of housing to keep your villagers from freezing to death!"
    seasonSpringHeader:
      text: "Spring"
    seasonSpring:   
      text: "A plesant break from the ravages of $CYA1Winter$WHI0, $GRE1Spring$WHI0 has arrived! Spring is the easiest season to survive. You will find it very easy to grow food and replenish resources. Although the constant rain can upset villagers, and the lightning storms may damage buildings. So lookout! Don't forget to $RED1stock up on food and water$WHI0 before $YEL1Summer$WHI1 arrives!"
    seasonSummerHeader:
      text: "Summer"
    seasonSummer:   
      text: "$YEL1Summer$WHI0 is here. Your villagers are going to have to work in blistering hot weather pretty often, and will have to go home to cool down frequently. Don't expect much rain, and expect substainally slower crop growth. Hopefully you stocked up on food and water during the $GRE1Spring$WHI0!"
    destroyTerrainHeader:
      text: "Destroy Terrain"
    destroyTerrain:   
      text: "You can clear out terrain in the way quickly by using the $GRE1'Destroy Terrain'$WHI0 tool. Just $YEL1click on the button in the bottom right of the GUI and highlight what you want to remove$WHI0, and your builders will run over there and clear it out!"
    cullisGateHeader:
      text: "Cullis Gates"
    cullisGate:   
      text: "Scattered around most maps are $YEL1Ancient Cullis Gates$WHI0. You can toss monsters, resources or even villagers into them, sacrificing them for some extra essence. But be careful though, $YEL1Cullis Gates$WHI0 tend to overload if used too much."
    speedControlsHeader:
      text: "Pausing and Speed Controls"
    speedControls:   
      text: "Did you know you can pause the game by pressing $GRE1{shortcutKey}$WHI0, or adjust the passage of time using the clock?"
    dismantleHeader:
      text: "Dismantle Building"
    dismantle:
      text: "You can dismantle buildings by clicking on the $YEL1Dismantle Buildings and Objects$WHI0 buttons on the bottom right of the GUI, and then clicking on the building you'd like to tear down. Once flagged to be dismantled your builders will destroy the building."
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Influence Module
# Spell Cast Failures
# rtr.influence.InfluenceModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

influence:
  comment: "Influence Module - Spell Cast Failures"
  javaClass: "rtr.influence.InfluenceModule.java"
  
  castFail:
    outOfBounds:
      text: "You can't cast spells out here!?"
    inVoid:
      text: "You can't cast spells into the void!"
    inCorruption:
      text: "You have no power here!"
    noInfluence:
      text: "Not enough influence!"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Influence Module
# Spells
# rtr.influence.*
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

spells:
  comment: "Influence Module - Spells"
  javaClass: "rtr.influence.*"
  
  banish:
    name:
      text: "Banish"
    description:
      text: "Banish your enemies to a random location on the map!"
  dissolve:
    name:
      text: "Dissolve"
    description:
      text: "Dissolves living resources like crystals, wood, and dead bodies on the map, converting them into essence."
  summonHolyGolem:
    name:
      text: "Summon Holy Golem"
    description:
      text: "Summons a holy defender who will fight to their bitter end to defend your people. The older your village, the stronger the golem!"
  drop:
    name:
      text: "Drop"
    description:
      text: "Drop a resource or creature in your hands. This spell should not be accessable directly."
  meteor:
    name:
      text: "Meteor"
    description:
      text: "Drop a flaming space rock on something!"
  flame:
    name:
      text: "Flame"
    description:
      text: "Ignite an area (and anything else that happens to be in the way) in flames!"
  grab:
    name:
      text: "Grab"
    description:
      text: "Pick up resources or creatures on the map. Drains influence the longer they are held and will drop them if you run out."
  healingAura:
    name:
      text: "Healing Aura"
    description:
      text: "Steadily heal all the villagers in the area for a short period of time."
  motivateLand:
    name:
      text: "Motivate Land"
    description:
      text: "Motivate some natural resources to grow. Works best in the Spring and Autumn, very ineffective in the Winter."
  earthquake:
    name:
      text: "Earthquake"
    description:
      text: "Shake the ground, damaging anything in the area and sometimes sprouting forth new rock."
  recall:
    name:
      text: "Recall"
    description:
      text: "Teleport villagers and resources safely back to the village."
  resurrect:
    name:
      text: "Resurrect"
    description:
      text: "Resurrect a visible ghost on the map. Beware, sometimes the process doesn't quite turn out the way you planned!"
  initialSpawnIn:
    name:
      text: "Initial Spawn In"
    description:
      text: "Special spell used to spawn in villagers at the start of a new game inworld map mode. Should not be castable by the player."
  storm:
    name:
      text: "Storm"
    description:
      text: "An extremely dangerous spell that causes a huge localized lightning storm, followed by rain or snow in the entire region. Should never be cast inside your village."
  conjureEssence:
    name:
      text: "Conjure Essence"
    description:
      text: "Conjure essence out of thin air! Careful it doesn't get sucked back into your hand."
  lightningBolt:
    name:
      text: "Lightning Bolt"
    description:
      text: "Zap them from the heavens! Doesn't work well around lightning rods."
  conjureMaterial:
    name:
      text: "Conjure Material"
    description:
      text: "Brings forth a raw building material, sometimes similar to the topography surrounding it."
  mend:
    name:
      text: "Mend"
    description:
      text: "Steadily repairs golems and buildings in a small area for a short period of time."
  summonLaborGolem:
    name:
      text: "Summon Labor Golem"
    description:
      text: "Summons a mindless golem that will do manual labor in your village until it dies."
  illuminate:
    name:
      text: "Illuminate"
    description:
      text: "Creates a long lasting, large light source on the map."
  charm:
    name:
      text: "Charm"
    description:
      text: "Charms a monster into attacking their friends instead, but they may not always cooperate, and could even work against you."
  magicBolts:
    name:
      text: "Magic Bolts"
    description:
      text: "Zap monsters with some energy balls."
  coldAura:
    name:
      text: "Cold Aura"
    description:
      text: "Makes the area extremely cold, cooling, slowing down and sometimes freezing nearby creatures."
  regenerate:
    name:
      text: "Regenerate"
    description:
      text: "Heals a single living creature over a short period of time. Does not work on golems, but does work on monsters! Be careful what you cast this on."
            
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Tile Set
# Tooltips
# rtr.map.tileSets.*
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

tileSet:
  comment: "Tile Set - Tooltips"
  javaClass: "rtr.map.tileSets.*" 
  
  road:  
    path:
      text: "Path"
    logPathDebris:
      text: "Log Path Debris"
    logPath:
      text: "Log Path"
    cobbleAndLogPathDebris:
      text: "Cobble and Log Path Debris"
    cobbleAndLogPath:
      text: "Cobble and Log Path"
    cobbleAndBoardRoadDebris:
      text: "Cobble and Board Road Debris"
    cobbleAndBoardRoad:
      text: "Cobble and Board Road"
    cutStoneAndBoardRoadDebris:
      text: "Cut Stone and Board Road Debris"
    cutStoneAndBoardRoad:
      text: "Cut Stone and Board Road"

  terrain:
    treeStumps:
      text: "Tree Stumps"
    trees:
      text: "Trees"
    deadTrees:
      text: "Dead Trees"
    rock:
      text: "Rock"
    sandstone:
      text: "Sandstone"
    redCrystals:
      text: "Red Crystals"
    greenCrystals:
      text: "Green Crystals"
    blueCrystals:
      text: "Blue Crystals"
    purpleCrystals:
      text: "Purple Crystals"
    potatoes:
      text: "Potatoes"
    turnips:
      text: "Turnips"
    cactus:
      text: "Cactus"
    carrots:
      text: "Carrots"
    melons:
      text: "Melons"
    bricks:
      text: "Bricks"
    dirt:
      text: "Dirt"
    flowers:
      text: "Flowers"
    grass:
      text: "Grass"
    gravel:
      text: "Gravel"
    lava:
      text: "Lava"
    sand:
      text: "Sand"
    tar:
      text: "Tar"
    tiles:
      text: "Tiles"
    water:
      text: "Water"
    mud:
      text: "Mud"
    ice:
      text: "Ice"
    frozenMud:
      text: "Frozen Mud"
    corruption:
      text: "Corruption"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Missile Module
# Names
# rtr.missile.MissileModule.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

missileName:
  comment: "Missile Module - Names"
  javaClass: "rtr.missile.MissileModule.java" 
  
  basicArrow:
    text: "Basic Arrow"
  sturdyArrow:
    text: "Sturdy Arrow"
  reinforcedArrow:
    text: "Reinforced Arrow"
  fireArrow:
    text: "Fire Arrow"
  lightningArrow:
    text: "Lightning Arrow"
  poisonArrow:
    text: "Poison Arrow"
  iceArrow:
    text: "Ice Arrow"
  basicBallistaArrow:
    text: "Basic Ballista Arrow"
  sturdyBallistaArrow:
    text: "Sturdy Ballista Arrow"
  reinforcedBallistaArrow:
    text: "Reinforced Ballista Arrow"
  fireBallistaArrow:
    text: "Fire Ballista Arrow"
  poisonBallistaArrow:
    text: "Poison Ballista Arrow"
  iceBallistaArrow:
    text: "Ice Ballista Arrow"
  basicBullet:
    text: "Basic Bullet"
  heavyBullet:
    text: "Heavy Bullet"
  reinforcedBullet:
    text: "Reinforced Bullet"
  fireBullet:
    text: "Fire Bullet"
  lightningBullet:
    text: "Lightning Bullet"
  iceBullet:
    text: "Ice Bullet"
  basicSprayBullet:
    text: "Basic Spray Bullet"
  heavySprayBullet:
    text: "Heavy Spray Bullet"
  reinforcedSprayBullet:
    text: "Reinforced Spray Bullet"
  fireSprayBullet:
    text: "Fire Spray Bullet"
  lightningSprayBullet:
    text: "Lightning Spray Bullet"
  iceSprayBullet:
    text: "Ice Spray Bullet"
  smallElementalBolt:
    text: "Small Elemental Bolt"
  elementalBolt:
    text: "Elemental Bolt"
  largeElementalBolt:
    text: "Large Elemental Bolt"
  fireBolt:
    text: "Fire Bolt"
  lightningBolt:
    text: "Lightning Bolt"
  iceBolt:
    text: "Ice Bolt"
  smallPhantomDart:
    text: "Small Phantom Dart"
  phantomDart:
    text: "Phantom Dart"
  largePhantomDart:
    text: "Large Phantom Dart"
  phantomFireDart:
    text: "Phantom Fire Dart"
  phantomLightningDart:
    text: "Phantom Lightning Dart"
  phantomIceDart:
    text: "Phantom Ice Dart"
  phantomPoisonDart:
    text: "Phantom Poison Dart"
  basicStoneBall:
    text: "Basic Stone Ball"
  heavyStoneBall:
    text: "Heavy Stone Ball"
  reinforcedStoneBall:
    text: "Reinforced Stone Ball"
  explodingStoneBall:
    text: "Exploding Stone Ball"
  lightningStoneBall:
    text: "Lightning Stone Ball"
  iceStoneBall:
    text: "Ice Stone Ball"
  motivationBolt:
    text: "Motivation Bolt"
  attractBolt:
    text: "Attract Bolt"
  banishBolt:
    text: "Banish Bolt"
  recombobulatorBolt:
    text: "Recombobulator Bolt"
  bowArrow:
    text: "Bow Arrow"
  fireElemental:
    text: "Fire Elemental"
  fireGolem:
    text: "Fire Golem"
  iceGolem:
    text: "Ice Golem"
  lightningGolem:
    text: "Lightning Golem"
  crystalGolem:
    text: "Crystal Golem"
  fireCrystalGolem:
    text: "Fire Crystal Golem"
  iceCrystalGolem:
    text: "Ice Crystal Golem"
  lightningCrystalGolem:
    text: "Lightning Crystal Golem"
  specialMainMenu:
    text: "Special Main Menu"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Mob Module
# Names
# rtr.mobs.MobBase.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

mobName:
  comment: "Mob Module - Names"
  javaClass: "rtr.mobs.MobBase.java" 
      
  villageElder:
    single:
      text: "Village Elder"
    plural:
      text: "Village Elders"
  villager:
    single:
      text: "Villager"
    plural:
      text: "Villagers"
  child:
    single:
      text: "Child"
    plural:
      text: "Children"
  catjeetVillageElder:
    single:
      text: "Catjeet Village Elder"
    plural:
      text: "Catjeet Village Elders"
  catjeetVillager:
    single:
      text: "Catjeet Villager"
    plural:
      text: "Catjeet Villagers"
  catjeetChild:
    single:
      text: "Catjeet Child"
    plural:
      text: "Catjeet Children"
  catjeetProvisioner:
    single:
      text: "Catjeet Provisioner"
    plural:
      text: "Catjeet Provisioners"
  catjeetLaborer:
    single:
      text: "Catjeet Laborer"
    plural:
      text: "Catjeet Laborers"
  smallSlime:
    single:
      text: "Small Slime"
    plural:
      text: "Small Slimes"
  slime:
    single:
      text: "Slime"
    plural:
      text: "Slimes"
  smallBloodSlime:
    single:
      text: "Small Blood Slime"
    plural:
      text: "Small Blood Slimes"
  bloodSlime:
    single:
      text: "Blood Slime"
    plural:
      text: "Blood Slimes"
  headless:
    single:
      text: "Headless"
    plural:
      text: "Headless"
  drone:
    single:
      text: "Drone"
    plural:
      text: "Drones"
  zombie:
    single:
      text: "Zombie"
    plural:
      text: "Zombies"
  childZombie:
    single:
      text: "Child Zombie"
    plural:
      text: "Child Zombies"
  zombieDoggo:
    single:
      text: "Zombie Doggo"
    plural:
      text: "Zombie Doggos"
  doofyZombieDoggo:
    single:
      text: "Doofy Zombie Doggo"
    plural:
      text: "Doofy Zombie Doggos"
  zombieCatjeet:
    single:
      text: "Zombie Catjeet"
    plural:
      text: "Catjeet Zombies"
  catjeetChildZombie:
    single:
      text: "Catjeet Child Zombie"
    plural:
      text: "Catjeet Child Zombies"
  skeleton:
    single:
      text: "Skeleton"
    plural:
      text: "Skeletons"
  ghost:
    single:
      text: "Ghost"
    plural:
      text: "Ghosts"
  ghostChild:
    single:
      text: "Ghost Child"
    plural:
      text: "Ghost Children"
  ghostDoggo:
    single:
      text: "Ghost Doggo"
    plural:
      text: "Ghost Doggos"
  doofyGhostDoggo:
    single:
      text: "Doofy Ghost Doggo"
    plural:
      text: "Doofy Ghost Doggos"
  ghostCatjeet:
    single:
      text: "Ghost Catjeet"
    plural:
      text: "Catjeet Ghosts"
  ghostCatjeetChild:
    single:
      text: "Ghost Catjeet Child"
    plural:
      text: "Ghost Catjeet Children"
  fireElemental:
    single:
      text: "Fire Elemental"
    plural:
      text: "Fire Elementals"
  specter:
    single:
      text: "Specter"
    plural:
      text: "Specters"
  childSpecter:
    single:
      text: "Child Specter"
    plural:
      text: "Child Specters"
  nomadElder:
    single:
      text: "Nomad Elder"
    plural:
      text: "Nomad Elders"
  nomad:
    single:
      text: "Nomad"
    plural:
      text: "Nomads"
  departingMigrant:
    single:
      text: "Departing Migrant"
    plural:
      text: "Departing Migrants"
  arrivingMigrant:
    single:
      text: "Arriving Migrant"
    plural:
      text: "Arriving Migrants"
  nomadChild:
    single:
      text: "Nomad Child"
    plural:
      text: "Nomad Children"
  catjeetNomadElder:
    single:
      text: "Catjeet Nomad Elder"
    plural:
      text: "Catjeet Nomad Elders"
  catjeetNomad:
    single:
      text: "Catjeet Nomad"
    plural:
      text: "Catjeet Nomads"
  departingCatjeetMigrant:
    single:
      text: "Departing Catjeet Migrant"
    plural:
      text: "Departing Catjeet Migrants"
  arrivingCatjeetMigrant:
    single:
      text: "Arriving Catjeet Migrant"
    plural:
      text: "Arriving Catjeet Migrants"
  catjeetNomadChild:
    single:
      text: "Catjeet Nomad Child"
    plural:
      text: "Catjeet Nomad Children"
  doggo:
    single:
      text: "Doggo"
    plural:
      text: "Doggos"
  doofyDoggo:
    single:
      text: "Doofy Doggo"
    plural:
      text: "Doofy Doggos"
  wildDoggo:
    single:
      text: "Wild Doggo"
    plural:
      text: "Wild Doggos"
  doofyWildDoggo:
    single:
      text: "Doofy Wild Doggo"
    plural:
      text: "Doofy Wild Doggos"
  stoneGolem:
    single:
      text: "Stone Golem"
    plural:
      text: "Stone Golems"
  roggoGolem:
    single:
      text: "Roggo Golem"
    plural:
      text: "Roggo Golems"
  woodGolem:
    single:
      text: "Wood Golem"
    plural:
      text: "Wood Golems"
  loggoGolem:
    single:
      text: "Loggo Golem"
    plural:
      text: "Loggo Golems"
  crystalGolem:
    single:
      text: "Crystal Golem"
    plural:
      text: "Crystal Golems"
  cryggoGolem:
    single:
      text: "Cryggo Golem"
    plural:
      text: "Cryggo Golems"
  holyGolem:
    single:
      text: "Holy Golem"
    plural:
      text: "Holy Golems"
  goddoGolem:
    single:
      text: "Goddo Golem"
    plural:
      text: "Goddo Golems"
  courierGolem:
    single:
      text: "Courier Golem"
    plural:
      text: "Courier Golems"
  laborGolem:
    single:
      text: "Labor Golem"
    plural:
      text: "Labor Golems"
  poisonWoodGolem:
    single:
      text: "Poison Wood Golem"
    plural:
      text: "Poison Wood Golems"
  poisonLoggoGolem:
    single:
      text: "Poison Loggo Golem"
    plural:
      text: "Poison Loggo Golems"
  fireStoneGolem:
    single:
      text: "Fire Stone Golem"
    plural:
      text: "Fire Stone Golems"
  fireRoggoGolem:
    single:
      text: "Fire Roggo Golem"
    plural:
      text: "Fire Roggo Golems"
  fireCrystalGolem:
    single:
      text: "Fire Crystal Golem"
    plural:
      text: "Fire Crystal Golems"
  fireCryggoGolem:
    single:
      text: "Fire Cryggo Golem"
    plural:
      text: "Fire Cryggo Golems"
  iceStoneGolem:
    single:
      text: "Ice Stone Golem"
    plural:
      text: "Ice Stone Golems"
  iceRoggoGolem:
    single:
      text: "Ice Roggo Golem"
    plural:
      text: "Ice Roggo Golems"
  iceWoodGolem:
    single:
      text: "Ice Wood Golem"
    plural:
      text: "Ice Wood Golems"
  iceLoggoGolem:
    single:
      text: "Ice Loggo Golem"
    plural:
      text: "Ice Loggo Golems"
  iceCrystalGolem:
    single:
      text: "Ice Crystal Golem"
    plural:
      text: "Ice Crystal Golems"
  iceCryggoGolem:
    single:
      text: "Ice Cryggo Golem"
    plural:
      text: "Ice Cryggo Golems"
  lightningStoneGolem:
    single:
      text: "Lightning Stone Golem"
    plural:
      text: "Lightning Stone Golems"
  lightningRoggoGolem:
    single:
      text: "Lightning Roggo Golem"
    plural:
      text: "Lightning Roggo Golems"
  lightningWoodGolem:
    single:
      text: "Lightning Wood Golem"
    plural:
      text: "Lightning Wood Golems"
  lightningLoggoGolem:
    single:
      text: "Lightning Loggo Golem"
    plural:
      text: "Lightning Loggo Golems"
  lightningCrystalGolem:
    single:
      text: "Lightning Crystal Golem"
    plural:
      text: "Lightning Crystal Golems"
  lightningCryggoGolem:
    single:
      text: "Lightning Cryggo Golem"
    plural:
      text: "Lightning Cryggo Golems"
      
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Mob AI
# Task Messages
# rtr.mobs.MobBase.java
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

aiTask:
  comment: "Mob AI - Task Messages"
  javaClass: "rtr.mobs.ai.*"
  
  base:
    drinkingWater:
      text: "Drinking a $YEL1{resourceName}"
    eatingFood:
      text: "Eating a $YEL1{resourceName}"
    pathfindingBruteForce:
      text: "Clearing obstacles in the way"
    recoveringHealth:
      text: "Recovering health with a $YEL1{resourceName}"

    droppingResource:
      findingLocation:
        text: "Finding location to drop a resource"
      pathfinding:
        text: "Walking to an open space to drop the resource in their hand"
      dropping:
        text: "Dropping resource on ground"
        
  birth:  
    findSafeLocation:
      text: "Finding a safe place to give birth"
    pathfindToSafeLocation:
      text: "Walking to a safe place to give birth"
  
  buildWork:
    build:
      text: "Building {buildingName}"
    pathfindToBuilding:
      text: "Walking to {buildingName} to build"
  buyFromProvisioner:
    pathfindToProvisioner:
      text: "Buying resource from $YEL1a catjeet provisioner"
  buyLaborer:
    pathfindToLaborer:
      text: "Hiring $YEL1a catjeet laborer"
  chat:
    chat:
      text: "Chatting with {mobName}"
    pathfindToChatPartner:
      text: "Visiting {mobName}"
  clearoutResourceFromBuilding:
    pathfindToBuilding:
      text: "Clearing out $YEL1{resourceName}$WHI0 topography at {buildingName}"
  clearTopographyFromRoadWork:
    clearTopography:
      text: "Clearing topography."
    pathfindToTopography:
      text: "Walking to worksite clear some topography from a road."
  clearTopographyWork:
    clearTopography:
      text: "Clearing topography."
    pathfindToTopography:
      text: "Walking to worksite clear some topography."
  combatBuildings:
    pathfindToTarget:
      text: "Attacking {buildingName}"
  combatMobs:
    fleeTarget:
      text: "Fleeing {mobName}"
    pathfindToTarget:
      text: "Attacking {mobName}"
  confused:
    beConfused:
      text: "Confused"
    wanderAround:
      text: "Wandering around confused"
  constructionHarvestWork:
    harvestResource:
      text: "Harvesting materials"
    pathfindToHarvestWork:
      text: "Walking to worksite harvest some materials"
  courierArriveBehavior:
    dropOffResources:
      text:  "Dropping off resources from another region"
    dropOffResources2:
      text:  "Dropping off resources from $YEL1{regionName}"
    pathfindToDropOffCoordinates:
      text: "Delivering resources from another region"
    pathfindToDropOffCoordinates2:
      text: "Delivering resources from $YEL1{regionName}"
  courierDepartBehavior:
    pathfindToLeaveCoordinates:
      text: "Departing the region to deliver resources to $YEL1{regionName}"
  courierParkBehavior:
    park:
      text: "Waiting for resources at $YEL1{buildingName}"
    pathfindToParkingSpot:
      text: "Parking at $YEL1{buildingName}"
  criticalRepairWork:
    pathfindToBuilding:
      text: "Walking to {buildingName} to repair"
    repairBuilding:
      text: "Repairing {buildingName}"
  death:
    death:
      text: "Dead"
  deliverConstructionResource:
    pathfindToBuilding:
      text: "Delivering resource at {buildingNameSource} to {buildingNameDestination}"
    pathfindToResourceOnGround:
      text: "Picking up resource on the ground to deliver to{buildingName}"
  deliverConstructionResourceInHand:
    pathfindToBuilding:
      text: "Delivering resource to {buildingName}"
    pathfindToExtraResource:
      text: "Picking up additional delivery resource for {buildingName}"
  deliverCourierResource:
    pathfindToBuilding:
      text: "Picking up resource at {buildingName}$WHI0 to sell to a $YEL1a courier$WHI0 going to $YEL1{regionName}"
    pathfindToResourceOnGround:
      text: "Picking up resource on the ground to give to $YEL1a courier$WHI0 going to $YEL1{regionName}"
  deliverCourierResourceInHand:
    pathfindToCourier:
      text: "Delivering resource to $YEL1a courier$WHI0 to send to $YEL1{regionName}"
    pathfindToExtraResource:
      text: "Picking up additional planting resource"
  deliverRoadConstructionResource:
    pathfindToBuilding:
      text: "Delivering resource at {buildingName} to a road"
    pathfindToResourceOnGround:
      text: "Picking up resource on the ground to deliver to a road"
  deliverRoadConstructionResourceInHand:
    pathfindToExtraResource:
      text: "Picking up additional delivery resource for a road"
    pathfindToRoad:
      text: "Delivering resource to a road"
  digWork:
    dig:
      text: "Digging hole"
    pathfindToTerrain:
      text: "Walking to worksite dig a hole."
  dismantleWork:
    dismantle:
      text: "Dismantling {buildingName}"
    pathfindToBuilding:
      text: "Walking to {buildingName} to dismantle"
  equipResource:
    pathfindToBuilding:
      text: "Equipping resource at {buildingName}"
    pathfindToEquipmentOnGround:
      text: "Equipping resource on the ground"
  findBetterHome:
    visitNewHome:
      text: "Visiting {buildingName} as a possible new home."
    visitNewHome2:
      text: "Trying to claim {buildingName} as a new home."
  findFood:
    pathfindToBuilding:
      text: "Stealing food at {buildingName}"
    pathfindToResourceOnGround:
      text: "Walking to nearby food on the ground"
  findFoodHarvest:
    harvestFood:
      text: "Harvesting raw food to eat"
    pathfindToFood:
      text: "Walking to some unharvested food"
  findHome:
    searchForHome:
      text: "Searching for a home."
    visitNewHome:
      text: "Visiting {buildingName} as a possible new home."
  findJob:
    pathfindToJob:
      text: "Going to {buildingName} to get a job."
  findSpawn:
    claimSpawn:
      text: "Trying to claim {buildingName} as a new spawn."
    findSpawn:
      text: "Searching for a spawn."
    pathfindToSpawn:
      text: "Visiting {buildingName} as a possible spawn home."
  findWaterFountain:
    drinkFromWaterFountain:
      text: "Drinking water from {buildingName}"
    pathfindToWaterFountain:
      text: "Going to {buildingName} to drink water."
  findWaterHarvest:
    harvestWater:
      text: "Drinking dirty water!"
    pathfindToWater:
      text: "Walking to some dirty water!"
  frozen:
    execute:
      text: "Frozen solid!!"
  goHome:
    enterHome:
      text: "Trying to enter {buildingName}"
    findHome:
      text: "Finding a path to home {buildingName}"
    pathfindToHome:
      text: "Going home to {buildingName}"
  golemHealBehavior:
    findRecombobulator:
      text: "Searching for a recombobulator."
    pathfindToRecombobulator:
      text: "Going to a $YEL1{buildingName}$WHI0 to heal."
  golemPatrolBehavior:
    pathfindToWaypoint:
      text: "Patrolling the village"
  grabbed:
    execute:
      text: "Being held by god himself!"
  guardPatrolFrontLine:
    pathfindToWaypoint:
      text: "Patrolling the front lines"
  guardPatrolPerimeter:
    pathfindToWaypoint:
      text: "Patrolling the perimeter"
  guardPatrolVillage:
    pathfindToWaypoint:
      text: "Patrolling the village"
  guardPost:
    pathfindToBuilding:
      text: "Posting at $YEL1{buildingName}"
    pathfindToNewPostPosition:
      text: "Posted at $YEL1{buildingName}"
    posting:
      text: "Posted at $YEL1{buildingName}"
  guardSummoned:
    pathfindToSummons:
      text: "Running to protect {mobName}"
  harvestFarmWork:
    harvestResource:
      text: "Harvesting materials"
    pathfindToResource:
      text: "Walking to farm to harvest food"
  harvestWaterWork:
    harvestWater:
      text: "Harvesting water"
    pathfindToWater:
      text: "Walking to worksite harvest some water"
  harvestWork:
    harvestResource:
      text: "Harvesting materials"
    pathfindToResource:
      text: "Walking to worksite harvest some materials"
  healthRepair:
    pathfindToBuilding:
      text: "Going to $YEL1{buildingName} for medical attention"
    pathfindToNewPostPosition:
      text: "Waiting for medical attention at $YEL1{buildingName}"
    posting:
      text: "Waiting for {mobName}$WHI0 to apply first aid."
    posting2:
      text: "Waiting for medical attention at $YEL1{buildingName}"
  incapacitated:
    incapacitated:
      text: "Incapacitated!"
  inHome:
    inHome:
      text: "Inside their home"
    inHome2:
      text: "Sleeping"
  inHomeHiding:
    execute:
      text: "Hiding inside their home"
  laborerLeave:
    pathfindToLeaveCoordinates:
      text: "Leaving the region"
  laborerPost:
    pathfindToMarketplace:
      text: "Setting up shop at $YEL1{buildingName}"
    pathfindToNewLocationAtMarketplace:
      text: "Selling labor at $YEL1{buildingName}"
    sellLabor:
      text: "Selling labor at $YEL1{buildingName}"
  mateCoitus:
    awaitCoitus:
      text: "Waiting for {mobName} to arrive for coitus."
    awaitCoitus2:
      text: "Coitusing with {mobName}"
  mateGoCoitus:
    enterHome:
      text: "Entering home to have coitus with {mobName}"
    findHome:
      text: "Finding a path to home {buildingName}"
    pathfindToHome:
      text: "Going home to have coitus with {mobName}"
  mateGoCoitusOther:
    enterHome:
      text: "Entering home to have coitus with {mobName}"
    findHome:
      text: "Finding a path to home {buildingName}"
    pathfindToHome:
      text: "Going home to have coitus with {mobName}"
  medicWork:
    healSelf:
      text: "Applying first aid to self"
    healVillager:
      text: "Applying first aid to {mobName}"
    pathfindToBuilding:
      text: "Posting at $YEL1{buildingName}"
    pathfindToHurtVillager:
      text: "Going to {mobName}$WHI0 to apply first aid."
    pathfindToNewPostPosition:
      text: "Posted at $YEL1{buildingName}"
    posting:
      text: "Posted at $YEL1{buildingName}"
  migrantDepartBehavior:
    pathfindToLeaveCoordinates:
      text: "Departing the region to migrate to $YEL1{regionName}"
  migrationPreperationBehavior:
    pathfindToLeaveCoordinates:
      text: "Preparing to leave region"
  nomadBehavior:
    pathfindToVillage:
      text: "Wandering into the village"
  nomadBehaviorOther:
    pathfindToVillage:
      text: "Wandering into the village"
  onFirePanic:
    execute:
      text: "On fire!!"
  panic:
    execute:
      text: "Panicking!!"
  plantResource:
    pathfindToBuilding:
      text: "Picking up resource at {buildingName} to plant it"
    pathfindToResourceOnGround:
      text: "Picking up resource on the ground to plant"
  plantResourceInHand:
    pathfindToBuilding:
      text: "Planting resource in a farm"
    pathfindToExtraResource:
      text: "Picking up additional planting resource"
  provisionerLeave:
    pathfindToLeaveCoordinates:
      text: "Leaving the region"
  provisionerPost:
    pathfindToMarketplace:
      text: "Setting up shop at $YEL1{buildingName}"
    pathfindToNewLocationAtMarketplace:
      text: "Selling wares at $YEL1{buildingName}"
    sellWares:
      text: "Selling wares at $YEL1{buildingName}"
  quitJob:
    pathfindToWorkBuilding:
      text: "Going to {buildingName} to quit a job."
  redistributeResources:
    pathfindToBuilding:
      text: "Redistributing resource at {buildingNameSource} to {buildingNameDestination}"
    pathfindToDelivery:
      text: "Distributing resource to {buildingName}"
    pathfindToExtraResource:
      text: "Picking up additional storage resource for {buildingName}"
  refineResource:
    pathfindToWork:
      text: "Refining resource at {buildingName}"
    refineResource:
      text: "Refining materials"
  refineWaterBottle:
    pathfindToWork:
      text: "Refining resource at {buildingName}"
    refineResource:
      text: "Refining materials"
  removeRoadWork:
    pathfindToRoad:
      text: "Walking to worksite remove a road."
    removeRoad:
      text: "Removing road."
  repairRoadWork:
    pathfindToRoad:
      text: "Walking to a road to repair it"
    repairRoad:
      text: "Repairing road"
  repairWork:
    pathfindToRoad:
      text: "Walking to {buildingName} to repair"
    repairRoad:
      text: "Repairing {buildingName}"
  roadWork:
    buildRoad:
      text: "Building road"
    pathfindToRoad:
      text: "Walking to worksite build a road"
  sellResource:
    pathfindToBuilding:
      text: "Picking up resource at {buildingName} to sell to a $YEL1a catjeet provisioner"
    pathfindToResourceOnGround:
      text: "Picking up resource on the ground to sell to $YEL1a catjeet provisioner"
  sellResourceInHand:
    pathfindToExtraResource:
      text: "Picking up additional planting resource"
    pathfindToProvisioner:
      text: "Delivering resource to $YEL1a catjeet provisioner"
  sleepOutside:
    findSafeLocation:
      text: "Finding a safe place to sleep outside"
    pathfindToSafeLocation:
      text: "Walking to a safe place to sleep"
    sleepOutside:
      text: "Sleeping outside"
  spawnRepair:
    pathfindToSpawner:
      text: "Walking to {buildingName} to repair"
    repair:
      text: "Repairing {buildingName}"
  start:
    execute:
      text: "Idle"
  storeResource:
    pathfindToResource:
      text: "Picking up resource on ground to store in a building"
  storeResourceInHand:
    pathfindToBuilding:
      text: "Storing resource in {buildingName}"
    pathfindToExtraResource:
      text: "Picking up additional storage resource for {buildingName}"
  stuck:
    pathfindOffBlockedTerrain:
      text: "Walking off of blocked terrain"
  tendFarmsWork:
    pathfindToFarmland:
      text: "Walking to farm to tend."
    tendFarmland:
      text: "Tending to farmland."
  trade:
    pathfindToTradePartner:
      text: "Getting a $YEL1{resourceName}$BLU0 from {mobName}"
  visitMate:
    pathfindToMate:
      text: "Visiting {mobName}"
  wander:
    pathfindToWanderCoordinates:
      text: "Wandering to {mobName}"
    pathfindToWanderCoordinates2:
      text: "Wandering around"
  wildDoggoWanderIn:
    pathfindToVillage:
      text: "Wandering into the village"
  wildDoggoWanderInOther:
    pathfindToVillage:
      text: "Wandering into the village"
  
  corruptionBuildingPlacement:
    execute:
      text: "Creating a new building"
  corruptionBuildWork:
    build:
      text: "Building {buildingName}"
    pathfindToBuilding:
      text: "Walking to {buildingName} to build"
  corruptionClearTopographyWork:
    clearTopography:
      text: "Clearing topography."
    pathfindToTopography:
      text: "Walking to worksite clear some topography."
  corruptionDeliverResourceInHand:
    pathfindToBuilding:
      text: "Delivering resource to {buildingName}"
    pathfindToExtraResource:
      text: "Picking up additional delivery resource for {buildingName}"
  corruptionDeliverResourceOnGround:
    pathfindToResource:
      text: "Picking up resource on the ground to deliver"
  corruptionDeliverRoadResourceInHand:
    pathfindToRoad:
      text: "Delivering resource to a road"
  corruptionDeliverRoadResourceOnGround:
    pathfindToResource:
      text: "Picking up resource on the ground to deliver to road"
  corruptionHarvestWork:
    harvestResource:
      text: "Harvesting materials"
    pathfindToHarvestWork:
      text: "Walking to worksite harvest some materials"
  corruptionRoadWork:
    buildRoad:
      text: "Building road"
    pathfindToRoad:
      text: "Walking to worksite build a road"
  hostileBehaviorAttack:
    pathfindToTarget:
      text: "Attacking the village!"
  hostileBehaviorAttackOther:
    pathfindToTarget:
      text: "Wandering into the village"
  hostileBehaviorLeave:
    pathfindToLeaveCoordinates:
      text: "Leaving the region"
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Object Module
# Object Names
# rtr.map.tileSets.*
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

object:
  comment: "Tile Set - Tooltips"
  javaClass: "rtr.map.tileSets.*" 
  
  building:
    castle:
      camp:
        name:
          text: "Camp"
        description:
          text: "The center of your new village, provides building slots, builders and can store almost any resource in the game."
      largeCamp:
        name:
          text: "Large Camp"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Also increases maximum storage and building slots and gives the village additional builder job slots."
      smallSettlement:
        name:
          text: "Small Settlement"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      largeSettlement:
        name:
          text: "Large Settlement"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      villageCenter:
        name:
          text: "Village Center"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      largeVillageCenter:
        name:
          text: "Large Village Center"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      establishedVillageCenter:
        name:
          text: "Established Village Center"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      smallKeep:
        name:
          text: "Small Keep"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      largeKeep:
        name:
          text: "Large Keep"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      establishedKeep:
        name:
          text: "Established Keep"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      smallStronghold:
        name:
          text: "Small Stronghold"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      largeStronghold:
        name:
          text: "Large Stronghold"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      establishedStronghold:
        name:
          text: "Established Stronghold"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      smallCastle:
        name:
          text: "Small Castle"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
      largeCastle:
        name:
          text: "Large Castle"
        description:
          text: "Grants a global speed bonus to all tasks, as well as an additional boost to building. Further increases maximum storage and building slots and gives the village additional builder job slots."
    
    ancillary:
      small:
        name:
          text: "Small Ancillary"
        description:
          text: "A support building that can store almost any resource. Provides addititional building slots, and organizers that will assist in cleaning up and distributing resources on the map."
      base:
        name:
          text: "Ancillary"
        description:
          text: "Increases the maximum storage, workers and building slots provided."
      large:
        name:
          text: "Large Ancillary"
        description:
          text: "Further increases the maximum storage, workers and building slots provided."
      established:
        name:
          text: "Established Ancillary"
        description:
          text: "Further increases the maximum storage, workers and building slots provided."
      reinforced:
        name:
          text: "Reinforced Ancillary"
        description:
          text: "Increases the maximum storage, workers and building slots provided to maximum."
    
    ancientCullisGate:
      name:
        text: "Ancient Cullis Gate"
      description:
        text: "An ancient sacrificial pond that will convert material items and living tissue into essence when dropped inside. If used too fast, it will overload!"
    
    ancientRadiancePool:
      name:
        text: "Ancient Radiance Pool"
      description:
        text: "An ancient old pool that attracts monsters."
    
    armorsmithy:
      makeshift:
        name:
          text: "Makeshift Armorsmithy"
        description:
          text: "Provides workers who can turn iron ingots into armor for your villagers. Requires a forge to process raw ore into ingots."
      base:
        name:
          text: "Armorsmithy"
        description:
          text: "Grants a global speed bonus to all armor manufacturing, increases maximum storage and gives the village an additional armorsmith job slot."
      established:
        name:
          text: "Established Armorsmithy"
        description:
          text: "Increases global speed bonus to all armor manufacturing, increases maximum storage and gives the village an additional armorsmith job slot."
    
    ammoStorage:
      small:
        name:
          text: "Small Ammo Storage"
        description:
          text: "A storage building that can hold ammo for your villager's equipment and towers."
      base:
        name:
          text: "Ammo Storage"
        description:
          text: "Increases the amount of ammo the building can store."
      large:
        name:
          text: "Large Ammo Storage"
        description:
          text: "Further increases the amount of ammo the building can store."
      established:
        name:
          text: "Established Ammo Storage"
        description:
          text: "Further increases the amount of ammo the building can store."
      reinforced:
        name:
          text: "Reinforced Ammo Storage"
        description:
          text: "Increases the amount of ammo the building can store to maximum."
    
    attractTower:
      makeshift:
        name:
          text: "Makeshift Attract Tower"
        description:
          text: "Detects nearby recently dropped resources and items and teleports them to the tower. Requires an essence collector to run."
      base:
        name:
          text: "Attract Tower"
        description:
          text: "Increases firing speed, range and maximum energy storage, while reducing firing cost."
      established:
        name:
          text: "Established Attract Tower"
        description:
          text: "Further increases firing speed, range and maximum energy storage, while further reducing firing cost."
      reinforced:
        name:
          text: "Reinforced Attract Tower"
        description:
          text: "Further increases firing speed, range and maximum energy storage, while further reducing firing cost."
    
    ballistaTower:
      makeshift:
        name:
          text: "Makeshift Ballista Tower"
        description:
          text: "A heavyweight tower with extremely long range and damage but has a slow firing rate. Can shoot over anything. Requires a bowyer to manufacture ballista bolts for ammunition."
      base:
        name:
          text: "Ballista Tower"
        description:
          text: "Increases maximum range, damage and ammunition storage of the tower."
      established:
        name:
          text: "Established Ballista Tower"
        description:
          text: "Further increases maximum range, damage and ammunition storage of the tower."
      fire:
        name:
          text: "Fire Ballista Tower"
        description:
          text: "Adds fire damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular ballista arrows until its ammunition runs out."
      poison:
        name:
          text: "Poison Ballista Tower"
        description:
          text: "Adds poison damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular ballista arrows until its ammunition runs out."
      ice:
        name:
          text: "Ice Ballista Tower"
        description:
          text: "Adds ice damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular ballista arrows until its ammunition runs out."
    
    banishTower:
      makeshift:
        name:
          text: "Makeshift Banish Tower"
        description:
          text: "A short range, slow firing tower that will find a nearby foe in the area, and banish them to a random location on the map."
      base:
        name:
          text: "Banish Tower"
        description:
          text: "Increases the maximum energy and fire rate of the tower."
      established:
        name:
          text: "Established Banish Tower"
        description:
          text: "Further increases the maximum energy and fire rate of the tower."
      reinforced:
        name:
          text: "Reinforced Banish Tower"
        description:
          text: "Further increases the maximum energy and fire rate of the tower."
    
    barracks:
      makeshift:
        name:
          text: "Makeshift Barracks"
        description:
          text: "Provides and houses guards that will protect and patrol the village, also provides slightly better health regeneration than regular homes at the cost of energy and happiness generation."
      base:
        name:
          text: "Barracks"
        description:
          text: "Increases provided guards, storage space and the health regeneration bonus of guards resting in the barracks."
      established:
        name:
          text: "Established Barracks"
        description:
          text: "Adds a small bow tower to the barracks, as well as further increases provided guards, storage space and the health regeneration bonus of guards resting in the barracks."
    
    bottler:
      makeshift:
        name:
          text: "Makeshift Bottler"
        description:
          text: "Provides workers who can bottles up water so villagers can carry some around with them, improving overall village efficiency by cutting down on trips to water sources around the village."
      base:
        name:
          text: "Bottler"
        description:
          text: "Grants a global speed bonus to all bottler manufacturing, increases maximum storage and gives the village an additional bottler job slot."
      established:
        name:
          text: "Established Bottler"
        description:
          text: "Increases global speed bonus to all bottler manufacturing, increases maximum storage and gives the village an additional bottler job slot."
    
    bowTower:
      makeshift:
        name:
          text: "Makeshift Bow Tower"
        description:
          text: "A lightweight tower with decent range that can fire over most walls. Good for early defenses. Requires a bowyer to manufacture ballista bolts for ammunition."
      base:
        name:
          text: "Bow Tower"
        description:
          text: "Increases maximum range, damage, firing rate and ammunition storage of the tower."
      established:
        name:
          text: "Established Bow Tower"
        description:
          text: "Further increases maximum range, damage, firing rate and ammunition storage of the tower."
      fire:
        name:
          text: "Fire Bow Tower"
        description:
          text: "Adds fire damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular arrows until its ammunition runs out."
      poison:
        name:
          text: "Poison Bow Tower"
        description:
          text: "Adds poison damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular arrows until its ammunition runs out."
      ice:
        name:
          text: "Ice Bow Tower"
        description:
          text: "Adds ice damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular arrows until its ammunition runs out."
    
    bowyer:
      makeshift:
        name:
          text: "Makeshift Bowyer"
        description:
          text: "Provides workers who can manufacture bows and arrows for villagers as well as tower ammunition for bow based towers, like the bow and ballista tower."
      base:
        name:
          text: "Bowyer"
        description:
          text: "Grants a global speed bonus to all bow and arrow manufacturing, increases maximum storage and gives the village an additional bowyer job slot."
      established:
        name:
          text: "Established Bowyer"
        description:
          text: "Increases global speed bonus to all bow and arrow manufacturing, increases maximum storage and gives the village an additional bowyer job slot."
    
    bulletTower:
      makeshift:
        name:
          text: "Makeshift Bullet Tower"
        description:
          text: "A lightweight tower that can fire over most walls. Good for early defenses. Requires a rock tumbler to manufacture bullets for ammunition."
      base:
        name:
          text: "Bullet Tower"
        description:
          text: "Increases damage and ammunition storage of the tower."
      established:
        name:
          text: "Established Bullet Tower"
        description:
          text: "Further increases damage and ammunition storage of the tower."
      fire:
        name:
          text: "Fire Bullet Tower"
        description:
          text: "Adds fire damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
      lightning:
        name:
          text: "Lightning Bullet Tower"
        description:
          text: "Adds lightning damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
      ice:
        name:
          text: "Ice Bullet Tower"
        description:
          text: "Adds ice damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
    
    clinic:
      makeshift:
        name:
          text: "Makeshift Clinic"
        description:
          text: "An aid station that provides medics who can heal the sick and wounded, as well as manufacture bandages villagers can carry with them to heal themselves in a pinch."
      base:
        name:
          text: "Clinic"
        description:
          text: "Grants a global speed bonus to all bandage and medkit manufacturing, increases maximum storage and gives the village additional medic job slots."
      established:
        name:
          text: "Established Clinic"
        description:
          text: "Increases global speed bonus to all bandage and medkit manufacturing, increases maximum storage and gives the village additional medic job slots."
    
    crystalGolemCombobulator:
      makeshift:
        name:
          text: "Makeshift Crystal Golem Combobulator"
        description:
          text: "A host building that consumes energy and nearby crystals, creating defensive crystal golems with a ranged attack that will protect the village."
      base:
        name:
          text: "Crystal Golem Combobulator"
        description:
          text: "Increases how many crystal golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      established:
        name:
          text: "Established Crystal Golem Combobulator"
        description:
          text: "Increases how many crystal golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      lightning:
        name:
          text: "Lightning Crystal Golem Combobulator"
        description:
          text: "Increases how many crystal golems the combobulator can maintain, another level boost, as well as gives newly spawned golems lightning damage, but cost more energy to produce a new golem."
      ice:
        name:
          text: "Ice Crystal Golem Combobulator"
        description:
          text: "Increases how many crystal golems the combobulator can maintain, another level boost, as well as gives newly spawned golems ice damage, but cost more energy to produce a new golem."
      fire:
        name:
          text: "Fire Crystal Golem Combobulator"
        description:
          text: "Increases how many crystal golems the combobulator can maintain, another level boost, as well as gives newly spawned golems fire damage, but cost more energy to produce a new golem."
    
    crystalHarvestry:
      makeshift:
        name:
          text: "Makeshift Crystal Harvestry"
        description:
          text: "Provides workers to harvest large quantities of crystal and create a stockpile, a staple resource in most magic based construction."
      base:
        name:
          text: "Crystal Harvestry"
        description:
          text: "Grants a global speed bonus to all crystal harvesting, increases maximum storage and gives the village additional crystal harvester job slots."
      established:
        name:
          text: "Established Crystal Harvestry"
        description:
          text: "Increases global speed bonus to all crystal harvesting, increases maximum storage and gives the village additional crystal harvester job slots."
    
    crystalMotivator:
      name:
        text: "Crystal Motivator"
      description:
        text: "Uses a small amount of energy to encourage nearby harvested crystal patches to grow faster."
    
    crystalStorage:
      small:
        name:
          text: "Small Crystal Storage"
        description:
          text: "A storage building that can hold crystals, crylithium and other crystal based materials."
      base:
        name:
          text: "Crystal Storage"
        description:
          text: "Increases the amount of crystals, crylithium and other crystal based materials the building can store."
      large:
        name:
          text: "Large Crystal Storage"
        description:
          text: "Further increases the amount of crystals, crylithium and other crystal based materials the building can store."
      established:
        name:
          text: "Established Crystal Storage"
        description:
          text: "Further increases the amount of crystals, crylithium and other crystal based materials the building can store."
      reinforced:
        name:
          text: "Reinforced Crystal Storage"
        description:
          text: "Increases the amount of crystals, crylithium and other crystal based materials the building can store to maximum."
    
    crystillery:
      makeshift:
        name:
          text: "Makeshift Crystillery"
        description:
          text: "Provides workers who refine crystals harvested by the crystal harvestry into crylithium, a fuel that can be used to charge essence collectors, and is used in some construction."
      base:
        name:
          text: "Crystillery"
        description:
          text: "Grants a global speed bonus to crylithium manufacturing, increases maximum storage and gives the village an additional crystiller job slot."
      established:
        name:
          text: "Established Crystillery"
        description:
          text: "Increases global speed bonus to crylithium manufacturing, increases maximum storage and gives the village an additional crystiller job slot."
    
    cullisGate:
      name:
        text: "Cullis Gate"
      description:
        text: "A sacrificial pond that will convert material items and living tissue into essence when dropped inside. If used too fast, it will overload!"
    
    doggoHouse:
      name:
        text: "Doggo House"
      description:
        text: "A small house for your doggos to quickly recharge! If you already have doggos living in your housing, they will attempt to move into the doggo house, freeing up space for your villagers."
    
    equipmentStorage:
      small:
        name:
          text: "Small Equipment Storage"
        description:
          text: "A storage building for most of the villager's tools, armor, weapons and other equipment."
      base:
        name:
          text: "Equipment Storage"
        description:
          text: "Increases the amount of tools, armor, weapons and other equipment the building can store."
      large:
        name:
          text: "Large Equipment Storage"
        description:
          text: "Further increases the amount of tools, armor, weapons and other equipment the building can store."
      established:
        name:
          text: "Established Equipment Storage"
        description:
          text: "Further increases the amount of tools, armor, weapons and other equipment the building can store."
      reinforced:
        name:
          text: "Reinforced Equipment Storage"
        description:
          text: "Increases the amount of tools, armor, weapons and other equipment the building can store to maximum."
    
    essenceCollector:
      makeshift:
        name:
          text: "Makeshift Essence Collector"
        description:
          text: "Pulls in and stores loose essence on the map to later be used by other buildings, crystillers can also throw crylithium to charge it. You can wave your hand over it to sap energy in a pinch."
      base:
        name:
          text: "Essence Collector"
        description:
          text: "Increases the overall storage capacity of the essence collector, as well as boosts the energy generation rate when fueled with crylithium."
      established:
        name:
          text: "Established Essence Collector"
        description:
          text: "Further increases the overall storage capacity of the essence collector, as well as boosts the energy generation rate when fueled with crylithium."
    
    elementalBoltTower:
      makeshift:
        name:
          text: "Makeshift Elemental Bolt Tower"
        description:
          text: "Fires energy blasts with splash damage at nearby enemies. Requires an essence collector to run."
      base:
        name:
          text: "Elemental Bolt Tower"
        description:
          text: "Increases the tower's damage and firing rate."
      established:
        name:
          text: "Established Elemental Bolt Tower"
        description:
          text: "Further increases the tower's damage and firing rate."
      fire:
        name:
          text: "Fire Bolt Tower"
        description:
          text: "Further increases the tower's damage, and converts a large amount of the damage into fire."
      lightning:
        name:
          text: "Lightning Bolt Tower"
        description:
          text: "Further increases the tower's damage, and converts a large amount of the damage into lightning."
      ice:
        name:
          text: "Ice Bolt Tower"
        description:
          text: "Further increases the tower's damage, and converts a large amount of the damage into ice."
    
    farm:
      makeshift:
        name:
          text: "Makeshift Farm"
        description:
          text: "Grow food to feed the village. Requires farmers to harvest wild food to seed the farm. Farmers can tend and water the crops to increase growth speed! Farms don't work well in the Summer or Winter."
      base:
        name:
          text: "Farm"
        description:
          text: "Grants a global speed bonus to all food harvesting, increases maximum storage, gives the village additional farmer job slots and adds extra space for crops."
      established:
        name:
          text: "Established Farm"
        description:
          text: "Increases global speed bonus to all food harvesting, increases maximum storage, gives the village additional farmer job slots and adds extra space for crops."
    
    firePit:
      name:
        text: "Fire Pit"
      description:
        text: "Just a basic light source. Will also increase your build range a bit! Monsters won't attack it, so feel free to build it into your walls."
    
    largeFirePit:
      name:
        text: "Large Fire Pit"
      description:
        text: "Just a basic light source, but slightly bigger! Will also increase your build range a bit! Monsters won't attack it, so feel free to build it into your walls."
    
    foodStorage:
      small:
        name:
          text: "Small Food Storage"
        description:
          text: "A storage building that can hold food stuffs."
      base:
        name:
          text: "Food Storage"
        description:
          text: "Increases the amount of food stuffs the building can store."
      large:
        name:
          text: "Large Food Storage"
        description:
          text: "Further increases the amount of food stuffs the building can store."
      established:
        name:
          text: "Established Food Storage"
        description:
          text: "Further increases the amount of food stuffs the building can store."
      reinforced:
        name:
          text: "Reinforced Food Storage"
        description:
          text: "Increases the amount of food stuffs the building can store to maximum."
    
    forge:
      makeshift:
        name:
          text: "Makeshift Forge"
        description:
          text: "Provides workers who can smelt ore into ingots, and gold ingots into gold coins to use later to buy goods in the marketplace."
      base:
        name:
          text: "Forge"
        description:
          text: "Grants a global speed bonus to all ore smelting, increases maximum storage and gives the village additional smelter job slots."
      established:
        name:
          text: "Established Forge"
        description:
          text: "Increases global speed bonus to all ore smelting, increases maximum storage and gives the village additional smelter job slots."
    
    goldStorage:
      small:
        name:
          text: "Small Gold Storage"
        description:
          text: "A storage building that can hold overflow gold and gold ingots."
      base:
        name:
          text: "Gold Storage"
        description:
          text: "Increases the amount of gold and gold ingots the building can store."
      large:
        name:
          text: "Large Gold Storage"
        description:
          text: "Further increases the amount of gold and gold ingots the building can store."
      established:
        name:
          text: "Established Gold Storage"
        description:
          text: "Further increases the amount of gold and gold ingots the building can store."
      reinforced:
        name:
          text: "Reinforced Gold Storage"
        description:
          text: "Increases the amount of gold and gold ingots the building can store to maximum."
    
    housing:
      makeshift:
        name:
          text: "Makeshift Housing"
        description:
          text: "Foundation for new housing in your village, can be upgraded for higher occupancy, quality or a balance of both. Always want to make sure you have enough housing for everybody!"
      baseHighOccupancy:
        name:
          text: "High Occupancy Housing"
        description:
          text: "Greatly increases the maximum occupancy and storage space, but at the cost of comfort. This is a good selection when overpopulation is a problem."
      largeHighOccupancy:
        name:
          text: "Large High Occupancy Housing"
        description:
          text: "Further increases the maximum occupancy and storage space, but at an additional cost to comfort."
      establishedHighOccupancy:
        name:
          text: "Established High Occupancy Housing"
        description:
          text: "Further increases the maximum occupancy and storage space, but at an additional cost to comfort."
      reinforcedHighOccupancy:
        name:
          text: "Reinforced High Occupancy Housing"
        description:
          text: "Increases the maximum occupancy and storage space to the maximum levels high occupancy housing can have, but has the lowest comfort of any building in the game."
      baseStandard:
        name:
          text: "Standard Housing"
        description:
          text: "Increases the maximum occupancy, storage space and comfort fairly evenly. This is a good selection for a village where you want some space for villagers, but don't want the drawbacks of high occupancy."
      largeStandard:
        name:
          text: "Large Standard Housing"
        description:
          text: "Further increases the maximum occupancy, storage space and comfort."
      establishedStandard:
        name:
          text: "Established Standard Housing"
        description:
          text: "Further increases the maximum occupancy, storage space and comfort."
      reinforcedStandard:
        name:
          text: "Reinforced Standard Housing"
        description:
          text: "Increases the maximum occupancy, storage space and comfort to the maximum levels standard housing can have."
      baseHighQuality:
        name:
          text: "High Quality Housing"
        description:
          text: "Very slightly increases the maximum occupancy and storage space, but greatly increases comfort. This is good housing if you want the happiest and most productive villagers."
      largeHighQuality:
        name:
          text: "Large High Quality Housing"
        description:
          text: "Further increases the maximum occupancy, storage space and comfort."
      establishedHighQuality:
        name:
          text: "Established High Quality Housing"
        description:
          text: "Further increases the maximum occupancy, storage space and comfort."
      reinforcedHighQuality:
        name:
          text: "Reinforced High Quality Housing"
        description:
          text: "Increases the maximum occupancy, storage space and comfort to the maximum levels high quality housing can have."
    
    keyShack:
      small:
        name:
          text: "Small Key Shack"
        description:
          text: "A shack for your keys!"
      base:
        name:
          text: "Key Shack"
        description:
          text: "Increases the amount of keys the building can store."
      large:
        name:
          text: "Large Key Shack"
        description:
          text: "Further increases the amount of keys the building can store."
      established:
        name:
          text: "Established Key Shack"
        description:
          text: "Further increases the amount of keys the building can store."
      reinforced:
        name:
          text: "Reinforced Key Shack"
        description:
          text: "Increases the amount of keys the building can store to maximum."
    
    largeFountain:
      name:
        text: "Large Fountain"
      description:
        text: "A place your villagers can go to get a refreshing drink. Works best with a well, raincatcher or water purifier and well masters to supply the fountain."
    
    lootBox:
      name:
        text: "Loot Box?!"
      description:
        text: "Seriously? In a single player game?!"
    
    lightningRod:
      makeshift:
        name:
          text: "Makeshift Lightning Rod"
        description:
          text: "A large rod of iron that will attract lightning, and convert it to essence. Very handy to protect the village from lightning storms."
      lightning:
        name:
          text: "Lightning Rod"
        description:
          text: "Increases the amount of energy the rod can store and boosts overall hit points."
      established:
        name:
          text: "Established Lightning Rod"
        description:
          text: "Increases the amount of energy the rod can store and the lightning rod's hit points to maximum."
    
    corruptedGraveyardSmall:
      name:
        text: "Corrupted Graveyard"
      description:
        text: "A corrupted building created in the depths of corrupted land."
    
    corruptedGraveyardMedium:
      name:
        text: "Corrupted Graveyard"
      description:
        text: "A corrupted building created in the depths of corrupted land."
    
    corruptedGraveyardLarge:
      name:
        text: "Corrupted Graveyard"
      description:
        text: "A corrupted building created in the depths of corrupted land."
    
    corruptedFireBowTower:
      name:
        text: "Corrupted Fire Bow Tower"
      description:
        text: "A lightweight corrupted tower with decent range that can fire over most walls."
    
    corruptedIceBowTower:
      name:
        text: "Corrupted Ice Bow Tower"
      description:
        text: "A lightweight corrupted tower with decent range that can fire over most walls."
    
    corruptedPoisonBowTower:
      name:
        text: "Corrupted Poison Bow Tower"
      description:
        text: "A lightweight corrupted tower with decent range that can fire over most walls."
    
    corruptedLightningBowTower:
      name:
        text: "Corrupted Lightning Bow Tower"
      description:
        text: "A lightweight corrupted tower with decent range that can fire over most walls."
    
    corruptedFirePhantomDartTower:
      name:
        text: "Corrupted Fire Phantom Dart Tower"
      description:
        text: "A small tower that fires low level magic damage and can be walked over."
    
    corruptedIcePhantomDartTower:
      name:
        text: "Corrupted Ice Phantom Dart Tower"
      description:
        text: "A small tower that fires low level magic damage and can be walked over."
    
    corruptedPoisonPhantomDartTower:
      name:
        text: "Corrupted Poison Phantom Dart Tower"
      description:
        text: "A small tower that fires low level magic damage and can be walked over."
    
    corruptedLightningPhantomDartTower:
      name:
        text: "Corrupted Lightning Phantom Dart Tower"
      description:
        text: "A small tower that fires low level magic damage and can be walked over."
    
    corruptedLargeFirePit:
      name:
        text: "Corrupted Large Fire Pit"
      description:
        text: "Just a basic, but slightly larger light source, for the corruption."
    
    corruptedFirePit:
      name:
        text: "Corrupted Fire Pit"
      description:
        text: "Just a basic light source, for the corruption."
    
    courierStation:
      makeshift:
        name:
          text: "Makeshift Courier Station"
        description:
          text: "A host building creates courier golems used to deliver resources to nearby regions. Also provides courier suppliers who can deliver the resources to the golems to prepare them for departure."
      base:
        name:
          text: "Courier Station"
        description:
          text: "Increases courier golems, as well as the amount of parking spots available, decreases their energy cost to spawn, and provides additional courier supplier job slots."
      established:
        name:
          text: "Established Courier Station"
        description:
          text: "Further increases courier golems, as well as the amount of parking spots available, decreases their energy cost to spawn, and provides additional courier supplier job slots."
    
    kitchen:
      makeshift:
        name:
          text: "Makeshift Kitchen"
        description:
          text: "Provides workers who can prepare efficient rations your villagers can carry with them. Effective at extending your food supply to survive harsher weather when crops won't grow."
      base:
        name:
          text: "Kitchen"
        description:
          text: "Grants a global speed bonus to ration manufacturing, increases maximum storage and gives the village additional cook job slots."
      established:
        name:
          text: "Established Kitchen"
        description:
          text: "Increases global speed bonus to ration manufacturing, increases maximum storage and gives the village additional cook job slots."
    
    lumberMill:
      makeshift:
        name:
          text: "Makeshift Lumber Mill"
        description:
          text: "A large mill that provides workers to convert logs harvested by your lumber shack into boards, required by many complex buildings."
      base:
        name:
          text: "Lumber Mill"
        description:
          text: "Grants a global speed bonus to board manufacturing, increases maximum storage and gives the village an additional carpenter job slot."
      established:
        name:
          text: "Established Lumber Mill"
        description:
          text: "Increases global speed bonus to board manufacturing, increases maximum storage and gives the village an additional carpenter job slot."
    
    lumberShack:
      makeshift:
        name:
          text: "Makeshift Lumber Shack"
        description:
          text: "Provides workers to harvest large quantities of wood and create a stockpile, a staple resource in almost all construction."
      base:
        name:
          text: "Lumber Shack"
        description:
          text: "Grants a global speed bonus to all wood harvesting, increases maximum storage and gives the village additional lumberjack job slots."
      established:
        name:
          text: "Established Lumber Shack"
        description:
          text: "Increases global speed bonus to all wood harvesting, increases maximum storage and gives the village additional lumberjack job slots."
    
    outpost:
      makeshift:
        name:
          text: "Makeshift Outpost"
        description:
          text: "Remote outpost your guards will use as a patrol point while protecting the village. Don't put it anywhere too dangerous!"
      base:
        name:
          text: "Outpost"
        description:
          text: "Increases the amount of guards the outpost can provide."
      established:
        name:
          text: "Established Outpost"
        description:
          text: "Further increases the amount of guards the outpost can provide and adds a small defensive bow tower on top of the outpost."
    
    phantomDartTower:
      makeshift:
        name:
          text: "Makeshift Phantom Dart Tower"
        description:
          text: "A small tower that fires low level magic damage and can be walked over. Requires an essence collector to run."
      base:
        name:
          text: "Phantom Dart Tower"
        description:
          text: "Slightly increases the damage and maximum energy of the tower."
      established:
        name:
          text: "Established Phantom Dart Tower"
        description:
          text: "Further increases the damage and maximum energy of the tower."
      base:
        name:
          text: "Phantom Fire Dart Tower"
        description:
          text: "Further increases the damage and maximum energy of the tower, and converts a large amount of the damage into fire."
      base:
        name:
          text: "Phantom Lightning Dart Tower"
        description:
          text: "Further increases the damage and maximum energy of the tower, and converts a large amount of the damage into lightning."
      base:
        name:
          text: "Phantom Ice Dart Tower"
        description:
          text: "Further increases the damage and maximum energy of the tower, and converts a large amount of the damage into ice."
    
    maintenanceBuilding:
      makeshift:
        name:
          text: "Makeshift Maintenance Building"
        description:
          text: "Provides workers who can repair and dismantle buildings and well as maintain roads and clear terrain."
      base:
        name:
          text: "Maintenance Building"
        description:
          text: "Grants a global speed bonus to all building dismantling and repair work, road maintenance and terrain clearing, increases maximum storage and gives the village additional maintainer job slots."
      established:
        name:
          text: "Established Maintenance Building"
        description:
          text: "Increases global speed bonus to all building dismantling and repair work, road maintenance and terrain clearing, increases maximum storage and gives the village additional maintainer job slots."
    
    marketplace:
      makeshift:
        name:
          text: "Makeshift Marketplace"
        description:
          text: "Establishes trade in the region, inviting catjeet to visit the village to trade goods and labor. Make sure you have some gold!"
      base:
        name:
          text: "Marketplace"
        description:
          text: "Increases how many Catjeet can be in the marketplace at once, as well as increases gold storage and provides additional provisioner job slots."
      established:
        name:
          text: "Established Marketplace"
        description:
          text: "Further increases how many Catjeet can be in the marketplace at once, as well as further increases gold storage and provides additional provisioner job slots."
    
    migrationWayStation:
      makeshift:
        name:
          text: "Makeshift Migration Way Station"
        description:
          text: "Allows the village to send some villagers to nearby regions, once per day."
      base:
        name:
          text: "Migration Way Station"
        description:
          text: "Increases the total amount of villagers you can send to nearby regions per day."
      established:
        name:
          text: "Established Migration Way Station"
        description:
          text: "Further increases the total amount of villagers you can send to nearby regions per day."
    
    mineralStorage:
      small:
        name:
          text: "Small Mineral Storage"
        description:
          text: "A storage building that can hold raw or processed minerals, like iron ore and ingots."
      base:
        name:
          text: "Mineral Storage"
        description:
          text: "Increases the amount of raw or processed minerals the building can store."
      large:
        name:
          text: "Large Mineral Storage"
        description:
          text: "Further increases the amount of raw or processed minerals the building can store."
      established:
        name:
          text: "Established Mineral Storage"
        description:
          text: "Further increases the amount of raw or processed minerals the building can store."
      reinforced:
        name:
          text: "Reinforced Mineral Storage"
        description:
          text: "Increases the amount of raw or processed minerals the building can store to maximum."
    
    miningFacility:
      makeshift:
        name:
          text: "Makeshift Mining Facility"
        description:
          text: "Provides workers to harvest large quantities of rock and create a stockpile, a staple resource in almost all construction."
      base:
        name:
          text: "Mining Facility"
        description:
          text: "Grants a global speed bonus to all rock harvesting, increases maximum storage and gives the village additional miner job slots."
      established:
        name:
          text: "Established Mining Facility"
        description:
          text: "Increases global speed bonus to all rock harvesting, increases maximum storage and gives the village additional miner job slots."
    
    miscellaneousStorage:
      small:
        name:
          text: "Small Miscellaneous Storage"
        description:
          text: "A storage building that can hold a little bit of (almost) everything, but at a cost to maximum storage space over the other storage buildings."
      base:
        name:
          text: "Miscellaneous Storage"
        description:
          text: "Increases the amount of miscellaneous resources the building can store."
      large:
        name:
          text: "Large Miscellaneous Storage"
        description:
          text: "Further increases the amount of miscellaneous resources the building can store."
      established:
        name:
          text: "Established Miscellaneous Storage"
        description:
          text: "Further increases the amount of miscellaneous resources the building can store."
      reinforced:
        name:
          text: "Reinforced Miscellaneous Storage"
        description:
          text: "Increases the amount of miscellaneous resources the building can store to maximum."
    
    slingTower:
      makeshift:
        name:
          text: "Makeshift Sling Tower"
        description:
          text: "A heavy tower that shoots round stone balls. Handy for specialty defense setups when built down a tight path. Requires a rock tumbler to produce ammunition, and cannot shoot over walls!"
      base:
        name:
          text: "Sling Tower"
        description:
          text: "Increases maximum damage, firing rate and ammunition storage of the tower."
      established:
        name:
          text: "Established Sling Tower"
        description:
          text: "Further increases maximum damage, firing rate and ammunition storage of the tower."
      fire:
        name:
          text: "Fire Sling Tower"
        description:
          text: "Adds explosive fire damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular stone balls until its ammunition runs out."
      lightning:
        name:
          text: "Lightning Sling Tower"
        description:
          text: "Adds lightning damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular stone balls until its ammunition runs out."
      ice:
        name:
          text: "Ice Sling Tower"
        description:
          text: "Adds ice damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular stone balls until its ammunition runs out."
    
    smallFountain:
      name:
        text: "Small Fountain"
      description:
        text: "A place your villagers can go to get a refreshing drink. Works best with a well, raincatcher or water purifier and well masters to supply the fountain."
    
    sprayTower:
      makeshift:
        name:
          text: "Makeshift Spray Tower"
        description:
          text: "A lightweight tower that sprays tons of tiny pellet sized bullets in a large area. Good crowd control for large groups of weak mobs. Requires a rock tumbler to produce ammunition."
      base:
        name:
          text: "Spray Tower"
        description:
          text: "Increases maximum damage and ammunition storage of the tower."
      established:
        name:
          text: "Established Spray Tower"
        description:
          text: "Further increases maximum damage and ammunition storage of the tower."
      fire:
        name:
          text: "Fire Spray Tower"
        description:
          text: "Adds fire damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
      lightning:
        name:
          text: "Lightning Spray Tower"
        description:
          text: "Adds lightning damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
      ice:
        name:
          text: "Ice Spray Tower"
        description:
          text: "Adds ice damage to the tower, but consumes energy to fire. If the energy reserves are exhausted, it will continue to fire regular bullets until its ammunition runs out."
    
    staticTower:
      makeshift:
        name:
          text: "Makeshift Static Tower"
        description:
          text: "A tower that will do low level damage to any monster in range. Consumes more energy the more targets are in range."
      base:
        name:
          text: "Static Tower"
        description:
          text: "Increases the firing rate of the tower."
      established:
        name:
          text: "Established Static Tower"
        description:
          text: "Further increases the firing rate and increases the range of the tower"
      reinforced:
        name:
          text: "Reinforced Static Tower"
        description:
          text: "Further increases the firing rate of the tower, and also reduces energy cost."
    
    rainCatcher:
      makeshift:
        name:
          text: "Makeshift Rain Catcher"
        description:
          text: "Collects rain water and provides water master job slots to distribute it around the village. A great way to rapidly collect large amounts of water when it rains."
      base:
        name:
          text: "Rain Catcher"
        description:
          text: "Increases amount of water the the rain collector can store, as well as additional water master job slots."
      established:
        name:
          text: "Established Rain Catcher"
        description:
          text: "Further increases amount of water the the rain collector can store, as well as additional water master job slots."
    
    recombobulatorTower:
      makeshift:
        name:
          text: "Makeshift Recombobulator Tower"
        description:
          text: "A tower that will attract most friendly golems, and heal any that are damaged. Requires an essence collector to run."
      base:
        name:
          text: "Recombobulator Tower"
        description:
          text: "Increases the tower's maximum energy, firing rate, and range, and decreases the firing cost."
      established:
        name:
          text: "Established Recombobulator Tower"
        description:
          text: "Further increases the tower's maximum energy, firing rate, and range, and decreases the firing cost."
      reinforced:
        name:
          text: "Reinforced Recombobulator Tower"
        description:
          text: "Further increases the tower's maximum energy, firing rate, and range, and decreases the firing cost."
    
    rockStorage:
      small:
        name:
          text: "Small Rock Storage"
        description:
          text: "A storage building that can hold rocks, stone and other rock based materials."
      base:
        name:
          text: "Rock Storage"
        description:
          text: "Increases the amount of rocks, stone and other rock based materials the building can store."
      large:
        name:
          text: "Large Rock Storage"
        description:
          text: "Further increases the amount of rocks, stone and other rock based materials the building can store."
      established:
        name:
          text: "Established Rock Storage"
        description:
          text: "Further increases the amount of rocks, stone and other rock based materials the building can store."
      reinforced:
        name:
          text: "Reinforced Rock Storage"
        description:
          text: "Increases the amount of rocks, stone and other rock based materials the building can store to maximum."
    
    rockTumbler:
      makeshift:
        name:
          text: "Makeshift Rock Tumbler"
        description:
          text: "Provides workers who can manufacture bullets from rocks, a tower ammunition for sling and rock based towers, like the bullet, sling and spray tower."
      base:
        name:
          text: "Rock Tumbler"
        description:
          text: "Grants a global speed bonus to bullet manufacturing, increases maximum storage and gives the village an additional tumbler job slot."
      established:
        name:
          text: "Established Rock Tumbler"
        description:
          text: "Increases global speed bonus to bullet manufacturing, increases maximum storage and gives the village an additional tumbler job slot."
    
    stoneCuttery:
      makeshift:
        name:
          text: "Makeshift Stone Cuttery"
        description:
          text: "A small building that provides workers to convert rocks harvested by your mining facility into cut stone, required by many complex buildings."
      base:
        name:
          text: "Stone Cuttery"
        description:
          text: "Grants a global speed bonus to cut stone manufacturing, increases maximum storage and gives the village an additional stone cutter job slot."
      established:
        name:
          text: "Established Stone Cuttery"
        description:
          text: "Increases global speed bonus to cut stone manufacturing, increases maximum storage and gives the village an additional stone cutter job slot."
    
    stoneGolemCombobulator:
      makeshift:
        name:
          text: "Makeshift Stone Golem Combobulator"
        description:
          text: "A host building that consumes energy and nearby rock, creating slow moving, high hit point defensive stone golems."
      base:
        name:
          text: "Stone Golem Combobulator"
        description:
          text: "Increases how many stone golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      established:
        name:
          text: "Established Stone Golem Combobulator"
        description:
          text: "Increases how many stone golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      lightning:
        name:
          text: "Lightning Stone Golem Combobulator"
        description:
          text: "Increases how many stone golems the combobulator can maintain, another level boost, as well as gives newly spawned golems lightning damage, but cost more energy to produce a new golem."
      ice:
        name:
          text: "Ice Stone Golem Combobulator"
        description:
          text: "Increases how many stone golems the combobulator can maintain, another level boost, as well as gives newly spawned golems ice damage, but cost more energy to produce a new golem."
      fire:
        name:
          text: "Fire Stone Golem Combobulator"
        description:
          text: "Increases how many stone golems the combobulator can maintain, another level boost, as well as gives newly spawned golems fire damage, but cost more energy to produce a new golem."
    
    toolsmithy:
      makeshift:
        name:
          text: "Makeshift Toolsmithy"
        description:
          text: "Provides workers who can turn iron ingots into tools for your villagers that will boost work efficiency. Requires a forge to process raw ore into ingots."
      base:
        name:
          text: "Toolsmithy"
        description:
          text: "Grants a global speed bonus to all tool manufacturing, increases maximum storage and gives the village an additional toolsmith job slot."
      established:
        name:
          text: "Established Toolsmithy"
        description:
          text: "Increases global speed bonus to all tool manufacturing, increases maximum storage and gives the village an additional toolsmith job slot."
    
    waterPurifier:
      makeshift:
        name:
          text: "Makeshift Water Purifier"
        description:
          text: "Converts dirty surface water into usable fresh water for your village. Requires a water master to bring surface water from nearby sources to operate effectively."
      base:
        name:
          text: "Water Purifier"
        description:
          text: "Increases the water generation speed and maximum storage, as well as provides additional water master job slots."
      established:
        name:
          text: "Established Water Purifier"
        description:
          text: "Further increases the water generation speed and maximum storage, as well as provides additional water master job slots."
    
    wayMakerShack:
      makeshift:
        name:
          text: "Makeshift Way Maker Shack"
        description:
          text: "Provides workers who can create and maintain roads, clear terrain and dig out man made lakes to collect rain water for water purifiers."
      base:
        name:
          text: "Way Maker Shack"
        description:
          text: "Grants a global speed bonus to all road work, increases maximum storage and gives the village additional way maker job slots."
      established:
        name:
          text: "Established Way Maker Shack"
        description:
          text: "Increases global speed bonus to all road work, increases maximum storage and gives the village additional way maker job slots."
    
    well:
      makeshift:
        name:
          text: "Makeshift Well"
        description:
          text: "A slowly regenerating water supply for your village that works non-stop, year round. Also provides one water master job slot to redistribute water around the village."
      base:
        name:
          text: "Well"
        description:
          text: "Increases water generation rate and maximum storage."
      established:
        name:
          text: "Established Well"
        description:
          text: "Further increases water generation rate and maximum storage, as well as provides an additional water master job slot."
    
    woodGolemCombobulator:
      makeshift:
        name:
          text: "Makeshift Wood Golem Combobulator"
        description:
          text: "A host building that consumes energy and nearby wood, creating moderate speed and hit point defensive wood golems."
      base:
        name:
          text: "Wood Golem Combobulator"
        description:
          text: "Increases how many wood golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      established:
        name:
          text: "Established Wood Golem Combobulator"
        description:
          text: "Increases how many wood golems the combobulator can maintain, as well as increases the levels of newly spawned golems, but cost slightly more energy to produce a new golem."
      lightning:
        name:
          text: "Lightning Wood Golem Combobulator"
        description:
          text: "Increases how many wood golems the combobulator can maintain, another level boost, as well as gives newly spawned golems lightning damage, but cost more energy to produce a new golem."
      ice:
        name:
          text: "Ice Wood Golem Combobulator"
        description:
          text: "Increases how many wood golems the combobulator can maintain, another level boost, as well as gives newly spawned golems ice damage, but cost more energy to produce a new golem."
      poison:
        name:
          text: "Poison Wood Golem Combobulator"
        description:
          text: "Increases how many wood golems the combobulator can maintain, another level boost, as well as gives newly spawned golems poison damage, but cost more energy to produce a new golem."
    
    woodStorage:
      small:
        name:
          text: "Small Wood Storage"
        description:
          text: "A storage building that can hold logs, boards and other wood based materials."
      base:
        name:
          text: "Wood Storage"
        description:
          text: "Increases the amount of logs, boards and other wood based materials the building can store."
      large:
        name:
          text: "Large Wood Storage"
        description:
          text: "Further increases the amount of logs, boards and other wood based materials the building can store."
      established:
        name:
          text: "Established Wood Storage"
        description:
          text: "Further increases the amount of logs, boards and other wood based materials the building can store."
      reinforced:
        name:
          text: "Reinforced Wood Storage"
        description:
          text: "Increases the amount of logs, boards and other wood based materials the building can store to maximum."
    
    woodFenceGateNS:
      name:
        text: "Wood Fence Gate"
      description:
        text: "A simple wood gate your villagers can use, but monsters cannot."
    
    woodFenceGateWE:
      name:
        text: "Wood Fence Gate"
      description:
        text: "A simple wood gate your villagers can use, but monsters cannot."
    
    stoneWallGateNS:
      name:
        text: "Stone Wall Gate"
      description:
        text: "A simple stone gate your villagers can use, but monsters cannot."
    
    stoneWallGateWE:
      name:
        text: "Stone Wall Gate"
      description:
        text: "A simple stone gate your villagers can use, but monsters cannot."
  
  wall:
    curtainWall:
      name:
        text: "Curtain Wall"
    stoneWall:
      name:
        text: "Stone Wall"
    woodFence:
      name:
        text: "Wood Fence"\n
